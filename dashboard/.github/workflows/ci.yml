name: CI Pipeline

on:
  push:
    branches: [main, develop]
    paths:
      - 'dashboard/**'
      - '.github/workflows/ci.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'dashboard/**'
      - '.github/workflows/ci.yml'

defaults:
  run:
    working-directory: dashboard

jobs:
  lint-and-type-check:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: dashboard/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run TypeScript type check
      run: npm run typecheck
    
    - name: Run ESLint
      run: npm run lint
    
    - name: Check code formatting
      run: npm run format:check

  test:
    name: Test
    runs-on: ubuntu-latest
    
    env:
      NODE_ENV: test
      FIREBASE_PROJECT_ID: test-project
      FIREBASE_CLIENT_EMAIL: test@test.com
      FIREBASE_PRIVATE_KEY: |
        -----BEGIN PRIVATE KEY-----
        test-key
        -----END PRIVATE KEY-----
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: dashboard/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run unit tests
      run: npm test -- --coverage --passWithNoTests
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        directory: ./dashboard/coverage
        flags: unittests
        name: dashboard-coverage
      if: always()

  security-check:
    name: Security Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: dashboard/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run npm audit
      run: npm audit --production
      continue-on-error: true
    
    - name: Check for sensitive data
      run: |
        # Check for potential secrets in code
        ! grep -r --include="*.ts" --include="*.js" -E "(api_key|apikey|secret|password|token)" . | grep -v -E "(process\.env|\.example|test|mock)"

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint-and-type-check, test]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: dashboard/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build TypeScript
      run: npm run build
    
    - name: Check build output
      run: |
        test -d dist
        test -f dist/index.js
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dashboard-build
        path: dashboard/dist/
        retention-days: 7

  docker-build:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./dashboard
        push: false
        tags: duetright/dashboard:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max