{"version":3,"file":"index-b6633dd8.js","sources":["../../src/services/api/communicationsApi.ts","../../node_modules/date-fns/compareAsc.js","../../node_modules/date-fns/constructNow.js","../../node_modules/date-fns/differenceInCalendarMonths.js","../../node_modules/date-fns/_lib/getRoundingMethod.js","../../node_modules/date-fns/differenceInMilliseconds.js","../../node_modules/date-fns/isLastDayOfMonth.js","../../node_modules/date-fns/differenceInMonths.js","../../node_modules/date-fns/differenceInSeconds.js","../../node_modules/date-fns/formatDistance.js","../../node_modules/date-fns/formatDistanceToNow.js","../../src/features/communications/UnifiedInbox.tsx","../../src/features/communications/SlackMessages.tsx","../../node_modules/libphonenumber-js/metadata.min.json.js","../../node_modules/libphonenumber-js/min/exports/withMetadataArgument.js","../../node_modules/libphonenumber-js/es6/tools/semver-compare.js","../../node_modules/libphonenumber-js/es6/helpers/isObject.js","../../node_modules/libphonenumber-js/es6/metadata.js","../../node_modules/libphonenumber-js/es6/helpers/mergeArrays.js","../../node_modules/libphonenumber-js/es6/helpers/checkNumberLength.js","../../node_modules/libphonenumber-js/es6/isPossible.js","../../node_modules/libphonenumber-js/es6/helpers/matchesEntirely.js","../../node_modules/libphonenumber-js/es6/helpers/getNumberType.js","../../node_modules/libphonenumber-js/es6/isValid.js","../../node_modules/libphonenumber-js/es6/helpers/getPossibleCountriesForNumber.js","../../node_modules/libphonenumber-js/es6/constants.js","../../node_modules/libphonenumber-js/es6/helpers/stripIddPrefix.js","../../node_modules/libphonenumber-js/es6/helpers/extractNationalNumberFromPossiblyIncompleteNumber.js","../../node_modules/libphonenumber-js/es6/helpers/extractNationalNumber.js","../../node_modules/libphonenumber-js/es6/helpers/extractCountryCallingCodeFromInternationalNumberWithoutPlusSign.js","../../node_modules/libphonenumber-js/es6/helpers/extractCountryCallingCode.js","../../node_modules/libphonenumber-js/es6/helpers/applyInternationalSeparatorStyle.js","../../node_modules/libphonenumber-js/es6/helpers/formatNationalNumberUsingFormat.js","../../node_modules/libphonenumber-js/es6/helpers/getIddPrefix.js","../../node_modules/libphonenumber-js/es6/helpers/extension/createExtensionPattern.js","../../node_modules/libphonenumber-js/es6/helpers/isViablePhoneNumber.js","../../node_modules/libphonenumber-js/es6/helpers/RFC3966.js","../../node_modules/libphonenumber-js/es6/format.js","../../node_modules/libphonenumber-js/es6/PhoneNumber.js","../../node_modules/libphonenumber-js/es6/ParseError.js","../../node_modules/libphonenumber-js/es6/helpers/extension/extractExtension.js","../../node_modules/libphonenumber-js/es6/helpers/parseDigits.js","../../node_modules/libphonenumber-js/es6/parseIncompletePhoneNumber.js","../../node_modules/libphonenumber-js/es6/helpers/getCountryByNationalNumber.js","../../node_modules/libphonenumber-js/es6/helpers/getCountryByCallingCode.js","../../node_modules/libphonenumber-js/es6/helpers/extractPhoneContext.js","../../node_modules/libphonenumber-js/es6/helpers/extractFormattedPhoneNumberFromPossibleRfc3966NumberUri.js","../../node_modules/libphonenumber-js/es6/parse.js","../../node_modules/libphonenumber-js/es6/parsePhoneNumberWithError_.js","../../node_modules/libphonenumber-js/es6/normalizeArguments.js","../../node_modules/libphonenumber-js/es6/parsePhoneNumberWithError.js","../../node_modules/libphonenumber-js/es6/parsePhoneNumber_.js","../../node_modules/libphonenumber-js/es6/isValidPhoneNumber.js","../../node_modules/libphonenumber-js/min/exports/parsePhoneNumberWithError.js","../../node_modules/libphonenumber-js/min/exports/isValidPhoneNumber.js","../../src/features/communications/TwilioSMS.tsx","../../src/features/communications/CommunicationStats.tsx","../../src/features/communications/CommunicationSettings.tsx","../../src/features/communications/Communications.tsx","../../src/features/communications/MessageComposer.tsx"],"sourcesContent":["// Communications API with Slack, Twilio, and AI integration\n\nimport { dashboardApi } from './dashboardApi';\nimport type {\n  UnifiedMessage,\n  Conversation,\n  CommunicationPreferences,\n  MessageTemplate,\n  CommunicationStats,\n  SendMessageRequest,\n  GetMessagesRequest,\n  AIMessageRequest,\n  AIMessageResponse,\n} from '@features/communications/types';\n\nexport const communicationsApi = dashboardApi.injectEndpoints({\n  endpoints: (builder) => ({\n    // Unified message endpoints\n    getMessages: builder.query<\n      { messages: UnifiedMessage[]; total: number },\n      GetMessagesRequest\n    >({\n      query: (params) => ({\n        url: '/communications/messages',\n        params,\n      }),\n      providesTags: (result) =>\n        result\n          ? [\n              ...result.messages.map(({ id }) => ({\n                type: 'Message' as const,\n                id,\n              })),\n              { type: 'Message', id: 'LIST' },\n            ]\n          : [{ type: 'Message', id: 'LIST' }],\n    }),\n\n    getMessage: builder.query<UnifiedMessage, string>({\n      query: (id) => `/communications/messages/${id}`,\n      providesTags: (_result, _error, id) => [{ type: 'Message', id }],\n    }),\n\n    sendMessage: builder.mutation<UnifiedMessage, SendMessageRequest>({\n      query: (data) => ({\n        url: '/communications/messages/send',\n        method: 'POST',\n        body: data,\n      }),\n      invalidatesTags: [\n        { type: 'Message', id: 'LIST' },\n        { type: 'Conversation', id: 'LIST' },\n        { type: 'Stats', id: 'CURRENT' },\n      ],\n    }),\n\n    // Conversation endpoints\n    getConversations: builder.query<\n      { conversations: Conversation[]; total: number },\n      { platform?: string; status?: string; limit?: number; offset?: number }\n    >({\n      query: (params) => ({\n        url: '/communications/conversations',\n        params,\n      }),\n      providesTags: (result) =>\n        result\n          ? [\n              ...result.conversations.map(({ id }) => ({\n                type: 'Conversation' as const,\n                id,\n              })),\n              { type: 'Conversation', id: 'LIST' },\n            ]\n          : [{ type: 'Conversation', id: 'LIST' }],\n    }),\n\n    getConversation: builder.query<Conversation, string>({\n      query: (id) => `/communications/conversations/${id}`,\n      providesTags: (_result, _error, id) => [{ type: 'Conversation', id }],\n    }),\n\n    archiveConversation: builder.mutation<void, string>({\n      query: (id) => ({\n        url: `/communications/conversations/${id}/archive`,\n        method: 'POST',\n      }),\n      invalidatesTags: (_result, _error, id) => [\n        { type: 'Conversation', id },\n        { type: 'Conversation', id: 'LIST' },\n      ],\n    }),\n\n    // AI-powered features\n    getAISuggestion: builder.mutation<AIMessageResponse, AIMessageRequest>({\n      query: (data) => ({\n        url: '/communications/ai/suggest',\n        method: 'POST',\n        body: data,\n      }),\n    }),\n\n    improveMessage: builder.mutation<\n      AIMessageResponse,\n      { content: string; tone?: string }\n    >({\n      query: (data) => ({\n        url: '/communications/ai/improve',\n        method: 'POST',\n        body: data,\n      }),\n    }),\n\n    summarizeConversation: builder.mutation<\n      { summary: string; keyPoints: string[]; nextSteps?: string[] },\n      string\n    >({\n      query: (conversationId) => ({\n        url: '/communications/ai/summarize',\n        method: 'POST',\n        body: { conversationId },\n      }),\n    }),\n\n    analyzeMessageSentiment: builder.mutation<\n      {\n        sentiment: 'positive' | 'neutral' | 'negative';\n        confidence: number;\n        emotions?: string[];\n      },\n      string\n    >({\n      query: (messageId) => ({\n        url: '/communications/ai/analyze-sentiment',\n        method: 'POST',\n        body: { messageId },\n      }),\n    }),\n\n    // Slack-specific endpoints\n    getSlackChannels: builder.query<\n      Array<{ id: string; name: string; memberCount: number; isPrivate: boolean }>,\n      void\n    >({\n      query: () => '/slack/channels',\n    }),\n\n    joinSlackChannel: builder.mutation<void, string>({\n      query: (channelId) => ({\n        url: `/slack/channels/${channelId}/join`,\n        method: 'POST',\n      }),\n    }),\n\n    // Twilio-specific endpoints\n    getTwilioNumbers: builder.query<\n      Array<{ phoneNumber: string; friendlyName: string; capabilities: string[] }>,\n      void\n    >({\n      query: () => '/twilio/phone-numbers',\n    }),\n\n    sendSMS: builder.mutation<\n      { sid: string; status: string },\n      { to: string; body: string; mediaUrl?: string }\n    >({\n      query: (data) => ({\n        url: '/twilio/sms/send',\n        method: 'POST',\n        body: data,\n      }),\n      invalidatesTags: [\n        { type: 'Message', id: 'LIST' },\n        { type: 'Stats', id: 'CURRENT' },\n      ],\n    }),\n\n    // Template management\n    getTemplates: builder.query<\n      MessageTemplate[],\n      { platform?: string; category?: string }\n    >({\n      query: (params) => ({\n        url: '/communications/templates',\n        params,\n      }),\n      providesTags: (result) =>\n        result\n          ? [\n              ...result.map(({ id }) => ({\n                type: 'Template' as const,\n                id,\n              })),\n              { type: 'Template', id: 'LIST' },\n            ]\n          : [{ type: 'Template', id: 'LIST' }],\n    }),\n\n    createTemplate: builder.mutation<\n      MessageTemplate,\n      Omit<MessageTemplate, 'id' | 'usageCount' | 'lastUsed'>\n    >({\n      query: (data) => ({\n        url: '/communications/templates',\n        method: 'POST',\n        body: data,\n      }),\n      invalidatesTags: [{ type: 'Template', id: 'LIST' }],\n    }),\n\n    generateAITemplate: builder.mutation<\n      MessageTemplate,\n      {\n        category: string;\n        intent: string;\n        tone: 'professional' | 'friendly' | 'casual';\n        examples?: string[];\n      }\n    >({\n      query: (data) => ({\n        url: '/communications/templates/generate',\n        method: 'POST',\n        body: data,\n      }),\n      invalidatesTags: [{ type: 'Template', id: 'LIST' }],\n    }),\n\n    // Preferences and settings\n    getPreferences: builder.query<CommunicationPreferences, void>({\n      query: () => '/communications/preferences',\n      providesTags: [{ type: 'Preferences', id: 'CURRENT' }],\n    }),\n\n    updatePreferences: builder.mutation<\n      CommunicationPreferences,\n      Partial<CommunicationPreferences>\n    >({\n      query: (data) => ({\n        url: '/communications/preferences',\n        method: 'PUT',\n        body: data,\n      }),\n      invalidatesTags: [{ type: 'Preferences', id: 'CURRENT' }],\n    }),\n\n    // Statistics and analytics\n    getCommunicationStats: builder.query<\n      CommunicationStats,\n      { startDate?: Date; endDate?: Date }\n    >({\n      query: (params) => ({\n        url: '/communications/stats',\n        params,\n      }),\n      providesTags: [{ type: 'Stats', id: 'CURRENT' }],\n    }),\n\n    // Bulk operations\n    markMessagesAsRead: builder.mutation<void, string[]>({\n      query: (messageIds) => ({\n        url: '/communications/messages/mark-read',\n        method: 'POST',\n        body: { messageIds },\n      }),\n      invalidatesTags: (result, error, messageIds) =>\n        messageIds.map((id) => ({ type: 'Message' as const, id })),\n    }),\n\n    bulkCategorizeMessages: builder.mutation<\n      Array<{ messageId: string; category: string; confidence: number }>,\n      string[]\n    >({\n      query: (messageIds) => ({\n        url: '/communications/ai/categorize',\n        method: 'POST',\n        body: { messageIds },\n      }),\n      invalidatesTags: (result, error, messageIds) =>\n        messageIds.map((id) => ({ type: 'Message' as const, id })),\n    }),\n  }),\n});\n\nexport const {\n  // Messages\n  useGetMessagesQuery,\n  useGetMessageQuery,\n  useSendMessageMutation,\n  \n  // Conversations\n  useGetConversationsQuery,\n  useGetConversationQuery,\n  useArchiveConversationMutation,\n  \n  // AI features\n  useGetAISuggestionMutation,\n  useImproveMessageMutation,\n  useSummarizeConversationMutation,\n  useAnalyzeMessageSentimentMutation,\n  \n  // Slack\n  useGetSlackChannelsQuery,\n  useJoinSlackChannelMutation,\n  \n  // Twilio\n  useGetTwilioNumbersQuery,\n  useSendSMSMutation,\n  \n  // Templates\n  useGetTemplatesQuery,\n  useCreateTemplateMutation,\n  useGenerateAITemplateMutation,\n  \n  // Preferences\n  useGetPreferencesQuery,\n  useUpdatePreferencesMutation,\n  \n  // Stats\n  useGetCommunicationStatsQuery,\n  \n  // Bulk operations\n  useMarkMessagesAsReadMutation,\n  useBulkCategorizeMessagesMutation,\n} = communicationsApi;","import { toDate } from \"./toDate.js\";\n\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @param dateLeft - The first date to compare\n * @param dateRight - The second date to compare\n *\n * @returns The result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\nexport function compareAsc(dateLeft, dateRight) {\n  const diff = +toDate(dateLeft) - +toDate(dateRight);\n\n  if (diff < 0) return -1;\n  else if (diff > 0) return 1;\n\n  // Return 0 if diff is 0; return NaN if diff is NaN\n  return diff;\n}\n\n// Fallback for modularized imports:\nexport default compareAsc;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name constructNow\n * @category Generic Helpers\n * @summary Constructs a new current date using the passed value constructor.\n * @pure false\n *\n * @description\n * The function constructs a new current date using the constructor from\n * the reference date. It helps to build generic functions that accept date\n * extensions and use the current date.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * @param date - The reference date to take constructor from\n *\n * @returns Current date initialized using the given date constructor\n *\n * @example\n * import { constructNow, isSameDay } from 'date-fns'\n *\n * function isToday<DateType extends Date>(\n *   date: DateArg<DateType>,\n * ): boolean {\n *   // If we were to use `new Date()` directly, the function would  behave\n *   // differently in different timezones and return false for the same date.\n *   return isSameDay(date, constructNow(date));\n * }\n */\nexport function constructNow(date) {\n  return constructFrom(date, Date.now());\n}\n\n// Fallback for modularized imports:\nexport default constructNow;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\n\n/**\n * The {@link differenceInCalendarMonths} function options.\n */\n\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of calendar months\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nexport function differenceInCalendarMonths(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const yearsDiff = laterDate_.getFullYear() - earlierDate_.getFullYear();\n  const monthsDiff = laterDate_.getMonth() - earlierDate_.getMonth();\n\n  return yearsDiff * 12 + monthsDiff;\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarMonths;\n","export function getRoundingMethod(method) {\n  return (number) => {\n    const round = method ? Math[method] : Math.trunc;\n    const result = round(number);\n    // Prevent negative zero\n    return result === 0 ? 0 : result;\n  };\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n *\n * @returns The number of milliseconds\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\nexport function differenceInMilliseconds(laterDate, earlierDate) {\n  return +toDate(laterDate) - +toDate(earlierDate);\n}\n\n// Fallback for modularized imports:\nexport default differenceInMilliseconds;\n","import { endOfDay } from \"./endOfDay.js\";\nimport { endOfMonth } from \"./endOfMonth.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * @param date - The date to check\n * @param options - An object with options\n *\n * @returns The date is the last day of a month\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * const result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\nexport function isLastDayOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  return +endOfDay(_date, options) === +endOfMonth(_date, options);\n}\n\n// Fallback for modularized imports:\nexport default isLastDayOfMonth;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { compareAsc } from \"./compareAsc.js\";\nimport { differenceInCalendarMonths } from \"./differenceInCalendarMonths.js\";\nimport { isLastDayOfMonth } from \"./isLastDayOfMonth.js\";\n\n/**\n * The {@link differenceInMonths} function options.\n */\n\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of full months\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\nexport function differenceInMonths(laterDate, earlierDate, options) {\n  const [laterDate_, workingLaterDate, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    laterDate,\n    earlierDate,\n  );\n\n  const sign = compareAsc(workingLaterDate, earlierDate_);\n  const difference = Math.abs(\n    differenceInCalendarMonths(workingLaterDate, earlierDate_),\n  );\n\n  if (difference < 1) return 0;\n\n  if (workingLaterDate.getMonth() === 1 && workingLaterDate.getDate() > 27)\n    workingLaterDate.setDate(30);\n\n  workingLaterDate.setMonth(workingLaterDate.getMonth() - sign * difference);\n\n  let isLastMonthNotFull = compareAsc(workingLaterDate, earlierDate_) === -sign;\n\n  if (\n    isLastDayOfMonth(laterDate_) &&\n    difference === 1 &&\n    compareAsc(laterDate_, earlierDate_) === 1\n  ) {\n    isLastMonthNotFull = false;\n  }\n\n  const result = sign * (difference - +isLastMonthNotFull);\n  return result === 0 ? 0 : result;\n}\n\n// Fallback for modularized imports:\nexport default differenceInMonths;\n","import { getRoundingMethod } from \"./_lib/getRoundingMethod.js\";\nimport { differenceInMilliseconds } from \"./differenceInMilliseconds.js\";\n\n/**\n * The {@link differenceInSeconds} function options.\n */\n\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of seconds\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\nexport function differenceInSeconds(laterDate, earlierDate, options) {\n  const diff = differenceInMilliseconds(laterDate, earlierDate) / 1000;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInSeconds;\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { compareAsc } from \"./compareAsc.js\";\nimport { minutesInDay, minutesInMonth } from \"./constants.js\";\nimport { differenceInMonths } from \"./differenceInMonths.js\";\nimport { differenceInSeconds } from \"./differenceInSeconds.js\";\n\n/**\n * The {@link formatDistance} function options.\n */\n\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * @param laterDate - The date\n * @param earlierDate - The date to compare with\n * @param options - An object with options\n *\n * @returns The distance in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `baseDate` must not be Invalid Date\n * @throws `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\nexport function formatDistance(laterDate, earlierDate, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n  const minutesInAlmostTwoDays = 2520;\n\n  const comparison = compareAsc(laterDate, earlierDate);\n\n  if (isNaN(comparison)) throw new RangeError(\"Invalid time value\");\n\n  const localizeOptions = Object.assign({}, options, {\n    addSuffix: options?.addSuffix,\n    comparison: comparison,\n  });\n\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    ...(comparison > 0 ? [earlierDate, laterDate] : [laterDate, earlierDate]),\n  );\n\n  const seconds = differenceInSeconds(earlierDate_, laterDate_);\n  const offsetInSeconds =\n    (getTimezoneOffsetInMilliseconds(earlierDate_) -\n      getTimezoneOffsetInMilliseconds(laterDate_)) /\n    1000;\n  const minutes = Math.round((seconds - offsetInSeconds) / 60);\n  let months;\n\n  // 0 up to 2 mins\n  if (minutes < 2) {\n    if (options?.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance(\"lessThanXSeconds\", 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance(\"lessThanXSeconds\", 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance(\"lessThanXSeconds\", 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance(\"halfAMinute\", 0, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance(\"lessThanXMinutes\", 1, localizeOptions);\n      } else {\n        return locale.formatDistance(\"xMinutes\", 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance(\"lessThanXMinutes\", 1, localizeOptions);\n      } else {\n        return locale.formatDistance(\"xMinutes\", minutes, localizeOptions);\n      }\n    }\n\n    // 2 mins up to 0.75 hrs\n  } else if (minutes < 45) {\n    return locale.formatDistance(\"xMinutes\", minutes, localizeOptions);\n\n    // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance(\"aboutXHours\", 1, localizeOptions);\n\n    // 1.5 hrs up to 24 hrs\n  } else if (minutes < minutesInDay) {\n    const hours = Math.round(minutes / 60);\n    return locale.formatDistance(\"aboutXHours\", hours, localizeOptions);\n\n    // 1 day up to 1.75 days\n  } else if (minutes < minutesInAlmostTwoDays) {\n    return locale.formatDistance(\"xDays\", 1, localizeOptions);\n\n    // 1.75 days up to 30 days\n  } else if (minutes < minutesInMonth) {\n    const days = Math.round(minutes / minutesInDay);\n    return locale.formatDistance(\"xDays\", days, localizeOptions);\n\n    // 1 month up to 2 months\n  } else if (minutes < minutesInMonth * 2) {\n    months = Math.round(minutes / minutesInMonth);\n    return locale.formatDistance(\"aboutXMonths\", months, localizeOptions);\n  }\n\n  months = differenceInMonths(earlierDate_, laterDate_);\n\n  // 2 months up to 12 months\n  if (months < 12) {\n    const nearestMonth = Math.round(minutes / minutesInMonth);\n    return locale.formatDistance(\"xMonths\", nearestMonth, localizeOptions);\n\n    // 1 year up to max Date\n  } else {\n    const monthsSinceStartOfYear = months % 12;\n    const years = Math.trunc(months / 12);\n\n    // N years up to 1 years 3 months\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance(\"aboutXYears\", years, localizeOptions);\n\n      // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance(\"overXYears\", years, localizeOptions);\n\n      // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance(\"almostXYears\", years + 1, localizeOptions);\n    }\n  }\n}\n\n// Fallback for modularized imports:\nexport default formatDistance;\n","import { constructNow } from \"./constructNow.js\";\n\nimport { formatDistance } from \"./formatDistance.js\";\n\n/**\n * The {@link formatDistanceToNow} function options.\n */\n\n/**\n * @name formatDistanceToNow\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * @param date - The given date\n * @param options - The object with options\n *\n * @returns The distance in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * const result = formatDistanceToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * const result = formatDistanceToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * const result = formatDistanceToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * const eoLocale = require('date-fns/locale/eo')\n * const result = formatDistanceToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\nexport function formatDistanceToNow(date, options) {\n  return formatDistance(date, constructNow(date), options);\n}\n\n// Fallback for modularized imports:\nexport default formatDistanceToNow;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Paper,\n  Typography,\n  Tabs,\n  Tab,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  ListItemSecondaryAction,\n  Avatar,\n  Chip,\n  IconButton,\n  TextField,\n  InputAdornment,\n  Button,\n  Stack,\n  Badge,\n  Tooltip,\n  Divider,\n  CircularProgress,\n  Alert,\n  Menu,\n  MenuItem,\n} from '@mui/material';\nimport {\n  Search as SearchIcon,\n  FilterList as FilterIcon,\n  Refresh as RefreshIcon,\n  Archive as ArchiveIcon,\n  MarkEmailRead as MarkReadIcon,\n  AutoAwesome as AIIcon,\n  Tag as SlackIcon,\n  Sms as SmsIcon,\n  Email as EmailIcon,\n  Send as SendIcon,\n  Category as CategoryIcon,\n  SentimentSatisfied as SentimentIcon,\n  MoreVert as MoreIcon,\n  TrendingUp as UrgentIcon,\n} from '@mui/icons-material';\nimport { useTheme } from '@mui/material/styles';\nimport {\n  useGetMessagesQuery,\n  useGetConversationsQuery,\n  useMarkMessagesAsReadMutation,\n  useBulkCategorizeMessagesMutation,\n  useGetCommunicationStatsQuery,\n} from '@services/api/communicationsApi';\nimport type { UnifiedMessage, Conversation } from './types';\nimport { formatDistanceToNow } from 'date-fns';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nconst TabPanel: React.FC<TabPanelProps> = ({ children, value, index, ...other }) => {\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`inbox-tabpanel-${index}`}\n      aria-labelledby={`inbox-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ py: 2 }}>{children}</Box>}\n    </div>\n  );\n};\n\nexport const UnifiedInbox: React.FC = () => {\n  const theme = useTheme();\n  const [tabValue, setTabValue] = useState(0);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filterAnchor, setFilterAnchor] = useState<null | HTMLElement>(null);\n  const [selectedMessages, setSelectedMessages] = useState<string[]>([]);\n  const [aiCategorizing, setAiCategorizing] = useState(false);\n  \n  // Filters\n  const [platformFilter, setPlatformFilter] = useState<'all' | 'slack' | 'twilio'>('all');\n  const [sentimentFilter, setSentimentFilter] = useState<'all' | 'positive' | 'neutral' | 'negative'>('all');\n  const [urgencyFilter, setUrgencyFilter] = useState<'all' | 'low' | 'medium' | 'high'>('all');\n\n  // API queries\n  const { data: messagesData, isLoading: messagesLoading, refetch: refetchMessages } = useGetMessagesQuery({\n    platform: platformFilter === 'all' ? undefined : platformFilter,\n    search: searchQuery || undefined,\n    sentiment: sentimentFilter === 'all' ? undefined : sentimentFilter,\n    urgency: urgencyFilter === 'all' ? undefined : urgencyFilter,\n    limit: 50,\n  });\n\n  const { data: conversationsData, isLoading: conversationsLoading } = useGetConversationsQuery({\n    platform: platformFilter === 'all' ? undefined : platformFilter,\n    status: 'active',\n    limit: 20,\n  });\n\n  const { data: stats } = useGetCommunicationStatsQuery({});\n\n  const [markAsRead] = useMarkMessagesAsReadMutation();\n  const [categorizeMessages] = useBulkCategorizeMessagesMutation();\n\n  // Handle AI categorization\n  const handleAICategorize = async () => {\n    if (selectedMessages.length === 0) return;\n    \n    setAiCategorizing(true);\n    try {\n      await categorizeMessages(selectedMessages).unwrap();\n      setSelectedMessages([]);\n      refetchMessages();\n    } catch (error) {\n      console.error('Failed to categorize messages:', error);\n    } finally {\n      setAiCategorizing(false);\n    }\n  };\n\n  // Get platform icon\n  const getPlatformIcon = (platform: string) => {\n    switch (platform) {\n      case 'slack':\n        return <SlackIcon />;\n      case 'twilio':\n        return <SmsIcon />;\n      case 'email':\n        return <EmailIcon />;\n      default:\n        return <EmailIcon />;\n    }\n  };\n\n  // Get sentiment color\n  const getSentimentColor = (sentiment?: string) => {\n    switch (sentiment) {\n      case 'positive':\n        return theme.palette.success.main;\n      case 'negative':\n        return theme.palette.error.main;\n      default:\n        return theme.palette.text.secondary;\n    }\n  };\n\n  // Get urgency color\n  const getUrgencyColor = (urgency?: string) => {\n    switch (urgency) {\n      case 'high':\n        return theme.palette.error.main;\n      case 'medium':\n        return theme.palette.warning.main;\n      default:\n        return theme.palette.text.secondary;\n    }\n  };\n\n  // Render message list item\n  const renderMessageItem = (message: UnifiedMessage) => {\n    const isSelected = selectedMessages.includes(message.id);\n    const isUnread = message.status === 'delivered';\n\n    return (\n      <ListItem\n        key={message.id}\n        alignItems=\"flex-start\"\n        sx={{\n          bgcolor: isSelected ? 'action.selected' : 'transparent',\n          cursor: 'pointer',\n          '&:hover': {\n            bgcolor: 'action.hover',\n          },\n        }}\n        onClick={() => {\n          if (isSelected) {\n            setSelectedMessages(prev => prev.filter(id => id !== message.id));\n          } else {\n            setSelectedMessages(prev => [...prev, message.id]);\n          }\n        }}\n      >\n        <ListItemAvatar>\n          <Badge\n            color=\"primary\"\n            variant=\"dot\"\n            invisible={!isUnread}\n            overlap=\"circular\"\n          >\n            <Avatar sx={{ bgcolor: theme.palette.primary.main }}>\n              {getPlatformIcon(message.platform)}\n            </Avatar>\n          </Badge>\n        </ListItemAvatar>\n        <ListItemText\n          primary={\n            <Box display=\"flex\" alignItems=\"center\" gap={1}>\n              <Typography\n                variant=\"subtitle2\"\n                component=\"span\"\n                fontWeight={isUnread ? 600 : 400}\n              >\n                {message.sender.name}\n              </Typography>\n              {message.ai?.category && (\n                <Chip\n                  label={message.ai.category}\n                  size=\"small\"\n                  variant=\"outlined\"\n                  icon={<CategoryIcon />}\n                />\n              )}\n              {message.ai?.urgency === 'high' && (\n                <Tooltip title=\"Urgent\">\n                  <UrgentIcon fontSize=\"small\" color=\"error\" />\n                </Tooltip>\n              )}\n            </Box>\n          }\n          secondary={\n            <>\n              <Typography\n                component=\"span\"\n                variant=\"body2\"\n                color=\"text.primary\"\n                sx={{\n                  display: '-webkit-box',\n                  WebkitLineClamp: 2,\n                  WebkitBoxOrient: 'vertical',\n                  overflow: 'hidden',\n                }}\n              >\n                {message.content}\n              </Typography>\n              <Box display=\"flex\" alignItems=\"center\" gap={1} mt={0.5}>\n                <Typography variant=\"caption\" color=\"text.secondary\">\n                  {formatDistanceToNow(new Date(message.timestamp), { addSuffix: true })}\n                </Typography>\n                {message.ai?.sentiment && (\n                  <SentimentIcon\n                    fontSize=\"small\"\n                    sx={{ color: getSentimentColor(message.ai.sentiment) }}\n                  />\n                )}\n                {message.ai?.tags?.map((tag, index) => (\n                  <Chip\n                    key={index}\n                    label={tag}\n                    size=\"small\"\n                    variant=\"filled\"\n                    sx={{ height: 20 }}\n                  />\n                ))}\n              </Box>\n            </>\n          }\n        />\n        <ListItemSecondaryAction>\n          <IconButton\n            edge=\"end\"\n            aria-label=\"more\"\n            onClick={(e) => {\n              e.stopPropagation();\n              // Handle menu open\n            }}\n          >\n            <MoreIcon />\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    );\n  };\n\n  // Render conversation list item\n  const renderConversationItem = (conversation: Conversation) => {\n    return (\n      <ListItem\n        key={conversation.id}\n        alignItems=\"flex-start\"\n        sx={{\n          cursor: 'pointer',\n          '&:hover': {\n            bgcolor: 'action.hover',\n          },\n        }}\n      >\n        <ListItemAvatar>\n          <Badge\n            badgeContent={conversation.unreadCount}\n            color=\"primary\"\n            overlap=\"circular\"\n          >\n            <Avatar sx={{ bgcolor: theme.palette.primary.main }}>\n              {getPlatformIcon(conversation.platform)}\n            </Avatar>\n          </Badge>\n        </ListItemAvatar>\n        <ListItemText\n          primary={\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n              <Typography variant=\"subtitle2\" fontWeight={conversation.unreadCount > 0 ? 600 : 400}>\n                {conversation.title}\n              </Typography>\n              <Typography variant=\"caption\" color=\"text.secondary\">\n                {conversation.lastMessage && \n                  formatDistanceToNow(new Date(conversation.lastMessage.timestamp), { addSuffix: true })\n                }\n              </Typography>\n            </Box>\n          }\n          secondary={\n            <>\n              <Typography\n                component=\"span\"\n                variant=\"body2\"\n                color=\"text.primary\"\n                sx={{\n                  display: '-webkit-box',\n                  WebkitLineClamp: 1,\n                  WebkitBoxOrient: 'vertical',\n                  overflow: 'hidden',\n                }}\n              >\n                {conversation.ai?.summary || conversation.lastMessage?.content || 'No messages yet'}\n              </Typography>\n              {conversation.ai?.tags && (\n                <Box display=\"flex\" gap={0.5} mt={0.5}>\n                  {conversation.ai.tags.slice(0, 3).map((tag, index) => (\n                    <Chip\n                      key={index}\n                      label={tag}\n                      size=\"small\"\n                      variant=\"outlined\"\n                      sx={{ height: 20 }}\n                    />\n                  ))}\n                </Box>\n              )}\n            </>\n          }\n        />\n      </ListItem>\n    );\n  };\n\n  return (\n    <Box sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n      {/* Header */}\n      <Paper sx={{ p: 2, mb: 2 }}>\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={2}>\n          <Typography variant=\"h5\" component=\"h1\">\n            Unified Communications\n          </Typography>\n          <Stack direction=\"row\" spacing={1}>\n            {selectedMessages.length > 0 && (\n              <>\n                <Button\n                  startIcon={<AIIcon />}\n                  variant=\"outlined\"\n                  onClick={handleAICategorize}\n                  disabled={aiCategorizing}\n                >\n                  {aiCategorizing ? 'Categorizing...' : 'AI Categorize'}\n                </Button>\n                <Button\n                  startIcon={<MarkReadIcon />}\n                  variant=\"outlined\"\n                  onClick={async () => {\n                    await markAsRead(selectedMessages);\n                    setSelectedMessages([]);\n                    refetchMessages();\n                  }}\n                >\n                  Mark as Read\n                </Button>\n              </>\n            )}\n            <IconButton onClick={() => refetchMessages()}>\n              <RefreshIcon />\n            </IconButton>\n            <IconButton onClick={(e) => setFilterAnchor(e.currentTarget)}>\n              <FilterIcon />\n            </IconButton>\n          </Stack>\n        </Stack>\n\n        {/* Search and filters */}\n        <Stack direction=\"row\" spacing={2} alignItems=\"center\">\n          <TextField\n            fullWidth\n            size=\"small\"\n            placeholder=\"Search messages...\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n            }}\n          />\n          <Stack direction=\"row\" spacing={1}>\n            {platformFilter !== 'all' && (\n              <Chip\n                label={platformFilter}\n                onDelete={() => setPlatformFilter('all')}\n                size=\"small\"\n              />\n            )}\n            {sentimentFilter !== 'all' && (\n              <Chip\n                label={`Sentiment: ${sentimentFilter}`}\n                onDelete={() => setSentimentFilter('all')}\n                size=\"small\"\n              />\n            )}\n            {urgencyFilter !== 'all' && (\n              <Chip\n                label={`Urgency: ${urgencyFilter}`}\n                onDelete={() => setUrgencyFilter('all')}\n                size=\"small\"\n              />\n            )}\n          </Stack>\n        </Stack>\n\n        {/* Stats summary */}\n        {stats && (\n          <Stack direction=\"row\" spacing={3} mt={2}>\n            <Box>\n              <Typography variant=\"caption\" color=\"text.secondary\">\n                Total Messages\n              </Typography>\n              <Typography variant=\"h6\">{stats.totalMessages}</Typography>\n            </Box>\n            <Box>\n              <Typography variant=\"caption\" color=\"text.secondary\">\n                Avg Response Time\n              </Typography>\n              <Typography variant=\"h6\">\n                {Math.round(stats.responseTime.average / 60)}m\n              </Typography>\n            </Box>\n            <Box>\n              <Typography variant=\"caption\" color=\"text.secondary\">\n                AI Assistance\n              </Typography>\n              <Typography variant=\"h6\">{stats.aiAssistance.suggestionsUsed}</Typography>\n            </Box>\n          </Stack>\n        )}\n      </Paper>\n\n      {/* Content */}\n      <Paper sx={{ flex: 1, overflow: 'hidden', display: 'flex', flexDirection: 'column' }}>\n        <Tabs value={tabValue} onChange={(_, newValue) => setTabValue(newValue)}>\n          <Tab label=\"All Messages\" />\n          <Tab label=\"Conversations\" />\n          <Tab label=\"Unread\" />\n        </Tabs>\n\n        <Box sx={{ flex: 1, overflow: 'auto' }}>\n          <TabPanel value={tabValue} index={0}>\n            {messagesLoading ? (\n              <Box display=\"flex\" justifyContent=\"center\" p={3}>\n                <CircularProgress />\n              </Box>\n            ) : messagesData?.messages.length === 0 ? (\n              <Alert severity=\"info\" sx={{ m: 2 }}>\n                No messages found. Start a conversation to see messages here.\n              </Alert>\n            ) : (\n              <List>\n                {messagesData?.messages.map((message: any) => renderMessageItem(message))}\n              </List>\n            )}\n          </TabPanel>\n\n          <TabPanel value={tabValue} index={1}>\n            {conversationsLoading ? (\n              <Box display=\"flex\" justifyContent=\"center\" p={3}>\n                <CircularProgress />\n              </Box>\n            ) : conversationsData?.conversations.length === 0 ? (\n              <Alert severity=\"info\" sx={{ m: 2 }}>\n                No active conversations.\n              </Alert>\n            ) : (\n              <List>\n                {conversationsData?.conversations.map((conversation: any) => \n                  renderConversationItem(conversation)\n                )}\n              </List>\n            )}\n          </TabPanel>\n\n          <TabPanel value={tabValue} index={2}>\n            {messagesLoading ? (\n              <Box display=\"flex\" justifyContent=\"center\" p={3}>\n                <CircularProgress />\n              </Box>\n            ) : (\n              <List>\n                {messagesData?.messages\n                  .filter((msg: any) => msg.status === 'delivered')\n                  .map((message: any) => renderMessageItem(message))}\n              </List>\n            )}\n          </TabPanel>\n        </Box>\n      </Paper>\n\n      {/* Filter Menu */}\n      <Menu\n        anchorEl={filterAnchor}\n        open={Boolean(filterAnchor)}\n        onClose={() => setFilterAnchor(null)}\n      >\n        <MenuItem disabled>\n          <Typography variant=\"subtitle2\">Platform</Typography>\n        </MenuItem>\n        {['all', 'slack', 'twilio'].map((platform) => (\n          <MenuItem\n            key={platform}\n            selected={platformFilter === platform}\n            onClick={() => {\n              setPlatformFilter(platform as any);\n              setFilterAnchor(null);\n            }}\n          >\n            {platform.charAt(0).toUpperCase() + platform.slice(1)}\n          </MenuItem>\n        ))}\n        <Divider />\n        <MenuItem disabled>\n          <Typography variant=\"subtitle2\">Sentiment</Typography>\n        </MenuItem>\n        {['all', 'positive', 'neutral', 'negative'].map((sentiment) => (\n          <MenuItem\n            key={sentiment}\n            selected={sentimentFilter === sentiment}\n            onClick={() => {\n              setSentimentFilter(sentiment as any);\n              setFilterAnchor(null);\n            }}\n          >\n            {sentiment.charAt(0).toUpperCase() + sentiment.slice(1)}\n          </MenuItem>\n        ))}\n        <Divider />\n        <MenuItem disabled>\n          <Typography variant=\"subtitle2\">Urgency</Typography>\n        </MenuItem>\n        {['all', 'low', 'medium', 'high'].map((urgency) => (\n          <MenuItem\n            key={urgency}\n            selected={urgencyFilter === urgency}\n            onClick={() => {\n              setUrgencyFilter(urgency as any);\n              setFilterAnchor(null);\n            }}\n          >\n            {urgency.charAt(0).toUpperCase() + urgency.slice(1)}\n          </MenuItem>\n        ))}\n      </Menu>\n    </Box>\n  );\n};","import React, { useState, useRef, useEffect } from 'react';\nimport {\n  Box,\n  Paper,\n  Typography,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  TextField,\n  IconButton,\n  Button,\n  Stack,\n  Avatar,\n  Chip,\n  Divider,\n  CircularProgress,\n  Alert,\n  Tooltip,\n  Menu,\n  MenuItem,\n  Card,\n  CardContent,\n  Fade,\n  LinearProgress,\n} from '@mui/material';\nimport {\n  Tag as ChannelIcon,\n  Lock as PrivateIcon,\n  Send as SendIcon,\n  AutoAwesome as AIIcon,\n  AttachFile as AttachIcon,\n  EmojiEmotions as EmojiIcon,\n  FormatBold as BoldIcon,\n  FormatItalic as ItalicIcon,\n  Code as CodeIcon,\n  Link as LinkIcon,\n  Psychology as SuggestIcon,\n  Summarize as SummarizeIcon,\n  Speed as QuickReplyIcon,\n  Close as CloseIcon,\n} from '@mui/icons-material';\nimport { useTheme } from '@mui/material/styles';\nimport {\n  useGetSlackChannelsQuery,\n  useGetMessagesQuery,\n  useSendMessageMutation,\n  useGetAISuggestionMutation,\n  useImproveMessageMutation,\n  useSummarizeConversationMutation,\n  useGetTemplatesQuery,\n} from '@services/api/communicationsApi';\nimport type { UnifiedMessage } from './types';\nimport { format } from 'date-fns';\n\ninterface Channel {\n  id: string;\n  name: string;\n  isPrivate: boolean;\n  memberCount: number;\n  hasUnread?: boolean;\n}\n\nexport const SlackMessages: React.FC = () => {\n  const theme = useTheme();\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const [selectedChannel, setSelectedChannel] = useState<string | null>(null);\n  const [message, setMessage] = useState('');\n  const [showAIPanel, setShowAIPanel] = useState(false);\n  const [aiSuggestion, setAiSuggestion] = useState<string>('');\n  const [quickReplyAnchor, setQuickReplyAnchor] = useState<null | HTMLElement>(null);\n  const [isTyping, setIsTyping] = useState(false);\n\n  // API hooks\n  const { data: channels, isLoading: channelsLoading } = useGetSlackChannelsQuery();\n  const { data: messagesData, isLoading: messagesLoading } = useGetMessagesQuery(\n    {\n      platform: 'slack',\n      recipient: selectedChannel || undefined,\n      limit: 100,\n    },\n    { skip: !selectedChannel }\n  );\n  const { data: templates } = useGetTemplatesQuery({ platform: 'slack' });\n\n  const [sendMessage, { isLoading: sending }] = useSendMessageMutation();\n  const [getAISuggestion, { isLoading: aiLoading }] = useGetAISuggestionMutation();\n  const [improveMessage] = useImproveMessageMutation();\n  const [summarizeConversation] = useSummarizeConversationMutation();\n\n  // Auto-scroll to bottom when new messages arrive\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messagesData]);\n\n  // Get AI suggestion\n  const handleGetAISuggestion = async () => {\n    if (!selectedChannel || !message.trim()) return;\n\n    try {\n      const response = await getAISuggestion({\n        action: 'suggest',\n        content: message,\n        context: {\n          platform: 'slack',\n          recipient: selectedChannel,\n          tone: 'professional',\n        },\n      }).unwrap();\n\n      if (response.result.suggestion) {\n        setAiSuggestion(response.result.suggestion);\n        setShowAIPanel(true);\n      }\n    } catch (error) {\n      console.error('Failed to get AI suggestion:', error);\n    }\n  };\n\n  // Improve message with AI\n  const handleImproveMessage = async () => {\n    if (!message.trim()) return;\n\n    try {\n      const response = await improveMessage({\n        content: message,\n        tone: 'professional',\n      }).unwrap();\n\n      if (response.result.improved) {\n        setMessage(response.result.improved);\n      }\n    } catch (error) {\n      console.error('Failed to improve message:', error);\n    }\n  };\n\n  // Send message\n  const handleSendMessage = async () => {\n    if (!selectedChannel || !message.trim()) return;\n\n    try {\n      await sendMessage({\n        platform: 'slack',\n        recipient: selectedChannel,\n        content: message,\n      }).unwrap();\n\n      setMessage('');\n      setShowAIPanel(false);\n      setAiSuggestion('');\n    } catch (error) {\n      console.error('Failed to send message:', error);\n    }\n  };\n\n  // Apply template\n  const handleApplyTemplate = (template: string) => {\n    setMessage(template);\n    setQuickReplyAnchor(null);\n  };\n\n  // Render message\n  const renderMessage = (msg: UnifiedMessage) => {\n    const isOutgoing = msg.type === 'outgoing';\n    const showTimestamp = true; // Logic to show timestamp on hover or every N messages\n\n    return (\n      <Box\n        key={msg.id}\n        sx={{\n          display: 'flex',\n          justifyContent: isOutgoing ? 'flex-end' : 'flex-start',\n          mb: 2,\n        }}\n      >\n        <Stack\n          direction={isOutgoing ? 'row-reverse' : 'row'}\n          spacing={1}\n          alignItems=\"flex-start\"\n          sx={{ maxWidth: '70%' }}\n        >\n          {!isOutgoing && (\n            <Avatar sx={{ width: 32, height: 32 }}>\n              {msg.sender.name.charAt(0).toUpperCase()}\n            </Avatar>\n          )}\n          <Box>\n            <Stack direction=\"row\" spacing={1} alignItems=\"center\" mb={0.5}>\n              {!isOutgoing && (\n                <Typography variant=\"caption\" fontWeight={500}>\n                  {msg.sender.name}\n                </Typography>\n              )}\n              {showTimestamp && (\n                <Typography variant=\"caption\" color=\"text.secondary\">\n                  {format(new Date(msg.timestamp), 'HH:mm')}\n                </Typography>\n              )}\n              {msg.ai?.sentiment && (\n                <Chip\n                  label={msg.ai.sentiment}\n                  size=\"small\"\n                  variant=\"outlined\"\n                  sx={{ height: 18 }}\n                />\n              )}\n            </Stack>\n            <Paper\n              sx={{\n                p: 1.5,\n                bgcolor: isOutgoing\n                  ? theme.palette.primary.main\n                  : theme.palette.grey[100],\n                color: isOutgoing\n                  ? theme.palette.primary.contrastText\n                  : theme.palette.text.primary,\n              }}\n              elevation={isOutgoing ? 2 : 0}\n            >\n              <Typography variant=\"body2\" sx={{ whiteSpace: 'pre-wrap' }}>\n                {msg.content}\n              </Typography>\n            </Paper>\n            {msg.ai?.suggestedResponse && !isOutgoing && (\n              <Card\n                variant=\"outlined\"\n                sx={{\n                  mt: 1,\n                  bgcolor: 'action.hover',\n                  borderColor: theme.palette.primary.main,\n                }}\n              >\n                <CardContent sx={{ p: 1.5, '&:last-child': { pb: 1.5 } }}>\n                  <Stack direction=\"row\" alignItems=\"center\" spacing={1} mb={0.5}>\n                    <AIIcon fontSize=\"small\" color=\"primary\" />\n                    <Typography variant=\"caption\" color=\"primary\">\n                      AI Suggested Response\n                    </Typography>\n                  </Stack>\n                  <Typography variant=\"body2\" fontSize=\"0.875rem\">\n                    {msg.ai.suggestedResponse}\n                  </Typography>\n                  <Button\n                    size=\"small\"\n                    startIcon={<SendIcon />}\n                    onClick={() => setMessage(msg.ai!.suggestedResponse!)}\n                    sx={{ mt: 1 }}\n                  >\n                    Use This Response\n                  </Button>\n                </CardContent>\n              </Card>\n            )}\n          </Box>\n        </Stack>\n      </Box>\n    );\n  };\n\n  // Selected channel details\n  const selectedChannelData = channels?.find((ch: any) => ch.id === selectedChannel);\n\n  return (\n    <Box sx={{ display: 'flex', height: '100%' }}>\n      {/* Channel List */}\n      <Paper\n        sx={{\n          width: 280,\n          borderRadius: 0,\n          borderRight: 1,\n          borderColor: 'divider',\n          overflow: 'auto',\n        }}\n      >\n        <Box sx={{ p: 2 }}>\n          <Typography variant=\"h6\">Slack Channels</Typography>\n        </Box>\n        <Divider />\n        {channelsLoading ? (\n          <Box display=\"flex\" justifyContent=\"center\" p={3}>\n            <CircularProgress size={30} />\n          </Box>\n        ) : (\n          <List dense>\n            {channels?.map((channel: Channel) => (\n              <ListItem key={channel.id} disablePadding>\n                <ListItemButton\n                  selected={selectedChannel === channel.id}\n                  onClick={() => setSelectedChannel(channel.id)}\n                >\n                  <ListItemIcon sx={{ minWidth: 36 }}>\n                    {channel.isPrivate ? (\n                      <PrivateIcon fontSize=\"small\" />\n                    ) : (\n                      <ChannelIcon fontSize=\"small\" />\n                    )}\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={`# ${channel.name}`}\n                    secondary={`${channel.memberCount} members`}\n                  />\n                  {channel.hasUnread && (\n                    <Box\n                      sx={{\n                        width: 8,\n                        height: 8,\n                        borderRadius: '50%',\n                        bgcolor: 'primary.main',\n                      }}\n                    />\n                  )}\n                </ListItemButton>\n              </ListItem>\n            ))}\n          </List>\n        )}\n      </Paper>\n\n      {/* Message Area */}\n      <Box sx={{ flex: 1, display: 'flex', flexDirection: 'column' }}>\n        {selectedChannel ? (\n          <>\n            {/* Header */}\n            <Paper\n              sx={{\n                p: 2,\n                borderRadius: 0,\n                borderBottom: 1,\n                borderColor: 'divider',\n              }}\n              elevation={0}\n            >\n              <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n                <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n                  <Typography variant=\"h6\">\n                    # {selectedChannelData?.name}\n                  </Typography>\n                  <Chip\n                    label={`${selectedChannelData?.memberCount} members`}\n                    size=\"small\"\n                    variant=\"outlined\"\n                  />\n                </Stack>\n                <Stack direction=\"row\" spacing={1}>\n                  <Tooltip title=\"Summarize Conversation\">\n                    <IconButton\n                      onClick={async () => {\n                        if (messagesData?.messages.length) {\n                          const result = await summarizeConversation(selectedChannel).unwrap();\n                          // Handle summary display\n                        }\n                      }}\n                    >\n                      <SummarizeIcon />\n                    </IconButton>\n                  </Tooltip>\n                </Stack>\n              </Stack>\n            </Paper>\n\n            {/* Messages */}\n            <Box sx={{ flex: 1, overflow: 'auto', p: 2 }}>\n              {messagesLoading ? (\n                <Box display=\"flex\" justifyContent=\"center\" p={3}>\n                  <CircularProgress />\n                </Box>\n              ) : messagesData?.messages.length === 0 ? (\n                <Alert severity=\"info\">\n                  No messages in this channel yet. Start a conversation!\n                </Alert>\n              ) : (\n                <>\n                  {messagesData?.messages.map((msg: any) => renderMessage(msg))}\n                  {isTyping && (\n                    <Box display=\"flex\" alignItems=\"center\" gap={1} ml={5}>\n                      <Typography variant=\"caption\" color=\"text.secondary\">\n                        Someone is typing...\n                      </Typography>\n                      <CircularProgress size={12} />\n                    </Box>\n                  )}\n                  <div ref={messagesEndRef} />\n                </>\n              )}\n            </Box>\n\n            {/* AI Suggestion Panel */}\n            <Fade in={showAIPanel}>\n              <Paper\n                sx={{\n                  mx: 2,\n                  mb: 1,\n                  p: 2,\n                  bgcolor: 'background.default',\n                  border: 1,\n                  borderColor: 'primary.main',\n                }}\n                elevation={3}\n              >\n                <Stack direction=\"row\" alignItems=\"flex-start\" spacing={2}>\n                  <AIIcon color=\"primary\" />\n                  <Box flex={1}>\n                    <Typography variant=\"subtitle2\" color=\"primary\" gutterBottom>\n                      AI Suggestion\n                    </Typography>\n                    <Typography variant=\"body2\">{aiSuggestion}</Typography>\n                    <Stack direction=\"row\" spacing={1} mt={1}>\n                      <Button\n                        size=\"small\"\n                        variant=\"contained\"\n                        onClick={() => {\n                          setMessage(aiSuggestion);\n                          setShowAIPanel(false);\n                        }}\n                      >\n                        Use This\n                      </Button>\n                      <Button\n                        size=\"small\"\n                        variant=\"outlined\"\n                        onClick={() => handleGetAISuggestion()}\n                      >\n                        Try Another\n                      </Button>\n                    </Stack>\n                  </Box>\n                  <IconButton\n                    size=\"small\"\n                    onClick={() => setShowAIPanel(false)}\n                  >\n                    <CloseIcon fontSize=\"small\" />\n                  </IconButton>\n                </Stack>\n              </Paper>\n            </Fade>\n\n            {/* Message Input */}\n            <Paper\n              sx={{\n                p: 2,\n                borderRadius: 0,\n                borderTop: 1,\n                borderColor: 'divider',\n              }}\n              elevation={0}\n            >\n              <Stack spacing={1}>\n                {/* Formatting toolbar */}\n                <Stack direction=\"row\" spacing={0.5}>\n                  <IconButton size=\"small\">\n                    <BoldIcon fontSize=\"small\" />\n                  </IconButton>\n                  <IconButton size=\"small\">\n                    <ItalicIcon fontSize=\"small\" />\n                  </IconButton>\n                  <IconButton size=\"small\">\n                    <CodeIcon fontSize=\"small\" />\n                  </IconButton>\n                  <IconButton size=\"small\">\n                    <LinkIcon fontSize=\"small\" />\n                  </IconButton>\n                  <Divider orientation=\"vertical\" flexItem sx={{ mx: 1 }} />\n                  <Tooltip title=\"AI Suggest\">\n                    <IconButton\n                      size=\"small\"\n                      color={aiLoading ? 'default' : 'primary'}\n                      onClick={handleGetAISuggestion}\n                      disabled={!message.trim() || aiLoading}\n                    >\n                      {aiLoading ? (\n                        <CircularProgress size={18} />\n                      ) : (\n                        <SuggestIcon fontSize=\"small\" />\n                      )}\n                    </IconButton>\n                  </Tooltip>\n                  <Tooltip title=\"Improve Message\">\n                    <IconButton\n                      size=\"small\"\n                      onClick={handleImproveMessage}\n                      disabled={!message.trim()}\n                    >\n                      <AIIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n                  <Tooltip title=\"Quick Replies\">\n                    <IconButton\n                      size=\"small\"\n                      onClick={(e) => setQuickReplyAnchor(e.currentTarget)}\n                    >\n                      <QuickReplyIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n                  <IconButton size=\"small\">\n                    <AttachIcon fontSize=\"small\" />\n                  </IconButton>\n                  <IconButton size=\"small\">\n                    <EmojiIcon fontSize=\"small\" />\n                  </IconButton>\n                </Stack>\n\n                {/* Message input */}\n                <Stack direction=\"row\" spacing={1}>\n                  <TextField\n                    fullWidth\n                    multiline\n                    maxRows={4}\n                    placeholder=\"Type a message...\"\n                    value={message}\n                    onChange={(e) => setMessage(e.target.value)}\n                    onKeyPress={(e) => {\n                      if (e.key === 'Enter' && !e.shiftKey) {\n                        e.preventDefault();\n                        handleSendMessage();\n                      }\n                    }}\n                    size=\"small\"\n                  />\n                  <Button\n                    variant=\"contained\"\n                    endIcon={<SendIcon />}\n                    onClick={handleSendMessage}\n                    disabled={!message.trim() || sending}\n                  >\n                    {sending ? 'Sending...' : 'Send'}\n                  </Button>\n                </Stack>\n              </Stack>\n            </Paper>\n          </>\n        ) : (\n          <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            height=\"100%\"\n          >\n            <Typography variant=\"h6\" color=\"text.secondary\">\n              Select a channel to start messaging\n            </Typography>\n          </Box>\n        )}\n      </Box>\n\n      {/* Quick Reply Menu */}\n      <Menu\n        anchorEl={quickReplyAnchor}\n        open={Boolean(quickReplyAnchor)}\n        onClose={() => setQuickReplyAnchor(null)}\n      >\n        <MenuItem disabled>\n          <Typography variant=\"subtitle2\">Quick Replies</Typography>\n        </MenuItem>\n        {templates\n          ?.filter((t: any) => t.platform === 'slack' || t.platform === 'all')\n          .slice(0, 5)\n          .map((template: any) => (\n            <MenuItem\n              key={template.id}\n              onClick={() => handleApplyTemplate(template.content)}\n            >\n              {template.name}\n            </MenuItem>\n          ))}\n        <Divider />\n        <MenuItem onClick={() => setQuickReplyAnchor(null)}>\n          <Typography variant=\"caption\">Manage Templates...</Typography>\n        </MenuItem>\n      </Menu>\n    </Box>\n  );\n};","// This file is a workaround for a bug in web browsers' \"native\"\n// ES6 importing system which is uncapable of importing \"*.json\" files.\n// https://github.com/catamphetamine/libphonenumber-js/issues/239\nexport default {\"version\":4,\"country_calling_codes\":{\"1\":[\"US\",\"AG\",\"AI\",\"AS\",\"BB\",\"BM\",\"BS\",\"CA\",\"DM\",\"DO\",\"GD\",\"GU\",\"JM\",\"KN\",\"KY\",\"LC\",\"MP\",\"MS\",\"PR\",\"SX\",\"TC\",\"TT\",\"VC\",\"VG\",\"VI\"],\"7\":[\"RU\",\"KZ\"],\"20\":[\"EG\"],\"27\":[\"ZA\"],\"30\":[\"GR\"],\"31\":[\"NL\"],\"32\":[\"BE\"],\"33\":[\"FR\"],\"34\":[\"ES\"],\"36\":[\"HU\"],\"39\":[\"IT\",\"VA\"],\"40\":[\"RO\"],\"41\":[\"CH\"],\"43\":[\"AT\"],\"44\":[\"GB\",\"GG\",\"IM\",\"JE\"],\"45\":[\"DK\"],\"46\":[\"SE\"],\"47\":[\"NO\",\"SJ\"],\"48\":[\"PL\"],\"49\":[\"DE\"],\"51\":[\"PE\"],\"52\":[\"MX\"],\"53\":[\"CU\"],\"54\":[\"AR\"],\"55\":[\"BR\"],\"56\":[\"CL\"],\"57\":[\"CO\"],\"58\":[\"VE\"],\"60\":[\"MY\"],\"61\":[\"AU\",\"CC\",\"CX\"],\"62\":[\"ID\"],\"63\":[\"PH\"],\"64\":[\"NZ\"],\"65\":[\"SG\"],\"66\":[\"TH\"],\"81\":[\"JP\"],\"82\":[\"KR\"],\"84\":[\"VN\"],\"86\":[\"CN\"],\"90\":[\"TR\"],\"91\":[\"IN\"],\"92\":[\"PK\"],\"93\":[\"AF\"],\"94\":[\"LK\"],\"95\":[\"MM\"],\"98\":[\"IR\"],\"211\":[\"SS\"],\"212\":[\"MA\",\"EH\"],\"213\":[\"DZ\"],\"216\":[\"TN\"],\"218\":[\"LY\"],\"220\":[\"GM\"],\"221\":[\"SN\"],\"222\":[\"MR\"],\"223\":[\"ML\"],\"224\":[\"GN\"],\"225\":[\"CI\"],\"226\":[\"BF\"],\"227\":[\"NE\"],\"228\":[\"TG\"],\"229\":[\"BJ\"],\"230\":[\"MU\"],\"231\":[\"LR\"],\"232\":[\"SL\"],\"233\":[\"GH\"],\"234\":[\"NG\"],\"235\":[\"TD\"],\"236\":[\"CF\"],\"237\":[\"CM\"],\"238\":[\"CV\"],\"239\":[\"ST\"],\"240\":[\"GQ\"],\"241\":[\"GA\"],\"242\":[\"CG\"],\"243\":[\"CD\"],\"244\":[\"AO\"],\"245\":[\"GW\"],\"246\":[\"IO\"],\"247\":[\"AC\"],\"248\":[\"SC\"],\"249\":[\"SD\"],\"250\":[\"RW\"],\"251\":[\"ET\"],\"252\":[\"SO\"],\"253\":[\"DJ\"],\"254\":[\"KE\"],\"255\":[\"TZ\"],\"256\":[\"UG\"],\"257\":[\"BI\"],\"258\":[\"MZ\"],\"260\":[\"ZM\"],\"261\":[\"MG\"],\"262\":[\"RE\",\"YT\"],\"263\":[\"ZW\"],\"264\":[\"NA\"],\"265\":[\"MW\"],\"266\":[\"LS\"],\"267\":[\"BW\"],\"268\":[\"SZ\"],\"269\":[\"KM\"],\"290\":[\"SH\",\"TA\"],\"291\":[\"ER\"],\"297\":[\"AW\"],\"298\":[\"FO\"],\"299\":[\"GL\"],\"350\":[\"GI\"],\"351\":[\"PT\"],\"352\":[\"LU\"],\"353\":[\"IE\"],\"354\":[\"IS\"],\"355\":[\"AL\"],\"356\":[\"MT\"],\"357\":[\"CY\"],\"358\":[\"FI\",\"AX\"],\"359\":[\"BG\"],\"370\":[\"LT\"],\"371\":[\"LV\"],\"372\":[\"EE\"],\"373\":[\"MD\"],\"374\":[\"AM\"],\"375\":[\"BY\"],\"376\":[\"AD\"],\"377\":[\"MC\"],\"378\":[\"SM\"],\"380\":[\"UA\"],\"381\":[\"RS\"],\"382\":[\"ME\"],\"383\":[\"XK\"],\"385\":[\"HR\"],\"386\":[\"SI\"],\"387\":[\"BA\"],\"389\":[\"MK\"],\"420\":[\"CZ\"],\"421\":[\"SK\"],\"423\":[\"LI\"],\"500\":[\"FK\"],\"501\":[\"BZ\"],\"502\":[\"GT\"],\"503\":[\"SV\"],\"504\":[\"HN\"],\"505\":[\"NI\"],\"506\":[\"CR\"],\"507\":[\"PA\"],\"508\":[\"PM\"],\"509\":[\"HT\"],\"590\":[\"GP\",\"BL\",\"MF\"],\"591\":[\"BO\"],\"592\":[\"GY\"],\"593\":[\"EC\"],\"594\":[\"GF\"],\"595\":[\"PY\"],\"596\":[\"MQ\"],\"597\":[\"SR\"],\"598\":[\"UY\"],\"599\":[\"CW\",\"BQ\"],\"670\":[\"TL\"],\"672\":[\"NF\"],\"673\":[\"BN\"],\"674\":[\"NR\"],\"675\":[\"PG\"],\"676\":[\"TO\"],\"677\":[\"SB\"],\"678\":[\"VU\"],\"679\":[\"FJ\"],\"680\":[\"PW\"],\"681\":[\"WF\"],\"682\":[\"CK\"],\"683\":[\"NU\"],\"685\":[\"WS\"],\"686\":[\"KI\"],\"687\":[\"NC\"],\"688\":[\"TV\"],\"689\":[\"PF\"],\"690\":[\"TK\"],\"691\":[\"FM\"],\"692\":[\"MH\"],\"850\":[\"KP\"],\"852\":[\"HK\"],\"853\":[\"MO\"],\"855\":[\"KH\"],\"856\":[\"LA\"],\"880\":[\"BD\"],\"886\":[\"TW\"],\"960\":[\"MV\"],\"961\":[\"LB\"],\"962\":[\"JO\"],\"963\":[\"SY\"],\"964\":[\"IQ\"],\"965\":[\"KW\"],\"966\":[\"SA\"],\"967\":[\"YE\"],\"968\":[\"OM\"],\"970\":[\"PS\"],\"971\":[\"AE\"],\"972\":[\"IL\"],\"973\":[\"BH\"],\"974\":[\"QA\"],\"975\":[\"BT\"],\"976\":[\"MN\"],\"977\":[\"NP\"],\"992\":[\"TJ\"],\"993\":[\"TM\"],\"994\":[\"AZ\"],\"995\":[\"GE\"],\"996\":[\"KG\"],\"998\":[\"UZ\"]},\"countries\":{\"AC\":[\"247\",\"00\",\"(?:[01589]\\\\d|[46])\\\\d{4}\",[5,6]],\"AD\":[\"376\",\"00\",\"(?:1|6\\\\d)\\\\d{7}|[135-9]\\\\d{5}\",[6,8,9],[[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"[135-9]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"1\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6\"]]]],\"AE\":[\"971\",\"00\",\"(?:[4-7]\\\\d|9[0-689])\\\\d{7}|800\\\\d{2,9}|[2-4679]\\\\d{7}\",[5,6,7,8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{2,9})\",\"$1 $2\",[\"60|8\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[236]|[479][2-8]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{5})\",\"$1 $2 $3\",[\"[479]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"5\"],\"0$1\"]],\"0\"],\"AF\":[\"93\",\"00\",\"[2-7]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-7]\"],\"0$1\"]],\"0\"],\"AG\":[\"1\",\"011\",\"(?:268|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([457]\\\\d{6})$|1\",\"268$1\",0,\"268\"],\"AI\":[\"1\",\"011\",\"(?:264|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2457]\\\\d{6})$|1\",\"264$1\",0,\"264\"],\"AL\":[\"355\",\"00\",\"(?:700\\\\d\\\\d|900)\\\\d{3}|8\\\\d{5,7}|(?:[2-5]|6\\\\d)\\\\d{7}\",[6,7,8,9],[[\"(\\\\d{3})(\\\\d{3,4})\",\"$1 $2\",[\"80|9\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"4[2-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2358][2-5]|4\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[23578]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"6\"],\"0$1\"]],\"0\"],\"AM\":[\"374\",\"00\",\"(?:[1-489]\\\\d|55|60|77)\\\\d{6}\",[8],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[89]0\"],\"0 $1\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"2|3[12]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"1|47\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[3-9]\"],\"0$1\"]],\"0\"],\"AO\":[\"244\",\"00\",\"[29]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[29]\"]]]],\"AR\":[\"54\",\"00\",\"(?:11|[89]\\\\d\\\\d)\\\\d{8}|[2368]\\\\d{9}\",[10,11],[[\"(\\\\d{4})(\\\\d{2})(\\\\d{4})\",\"$1 $2-$3\",[\"2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9])\",\"2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8]))|2(?:2[24-9]|3[1-59]|47)\",\"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5[56][46]|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]\",\"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|58|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|54(?:4|5[13-7]|6[89])|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:454|85[56])[46]|3(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]\"],\"0$1\",1],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2-$3\",[\"1\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[68]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2-$3\",[\"[23]\"],\"0$1\",1],[\"(\\\\d)(\\\\d{4})(\\\\d{2})(\\\\d{4})\",\"$2 15-$3-$4\",[\"9(?:2[2-469]|3[3-578])\",\"9(?:2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9]))\",\"9(?:2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8])))|92(?:2[24-9]|3[1-59]|47)\",\"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5(?:[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]\",\"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|5(?:4(?:4|5[13-7]|6[89])|[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]\"],\"0$1\",0,\"$1 $2 $3-$4\"],[\"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$2 15-$3-$4\",[\"91\"],\"0$1\",0,\"$1 $2 $3-$4\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\",\"$1-$2-$3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$2 15-$3-$4\",[\"9\"],\"0$1\",0,\"$1 $2 $3-$4\"]],\"0\",0,\"0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))15)?\",\"9$1\"],\"AS\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|684|900)\\\\d{7}\",[10],0,\"1\",0,\"([267]\\\\d{6})$|1\",\"684$1\",0,\"684\"],\"AT\":[\"43\",\"00\",\"1\\\\d{3,12}|2\\\\d{6,12}|43(?:(?:0\\\\d|5[02-9])\\\\d{3,9}|2\\\\d{4,5}|[3467]\\\\d{4}|8\\\\d{4,6}|9\\\\d{4,7})|5\\\\d{4,12}|8\\\\d{7,12}|9\\\\d{8,12}|(?:[367]\\\\d|4[0-24-9])\\\\d{4,11}\",[4,5,6,7,8,9,10,11,12,13],[[\"(\\\\d)(\\\\d{3,12})\",\"$1 $2\",[\"1(?:11|[2-9])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})\",\"$1 $2\",[\"517\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,5})\",\"$1 $2\",[\"5[079]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,10})\",\"$1 $2\",[\"(?:31|4)6|51|6(?:48|5[0-3579]|[6-9])|7(?:20|32|8)|[89]\",\"(?:31|4)6|51|6(?:485|5[0-3579]|[6-9])|7(?:20|32|8)|[89]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3,9})\",\"$1 $2\",[\"[2-467]|5[2-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"5\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4,7})\",\"$1 $2 $3\",[\"5\"],\"0$1\"]],\"0\"],\"AU\":[\"61\",\"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\",\"1(?:[0-79]\\\\d{7}(?:\\\\d(?:\\\\d{2})?)?|8[0-24-9]\\\\d{7})|[2-478]\\\\d{8}|1\\\\d{4,7}\",[5,6,7,8,9,10,12],[[\"(\\\\d{2})(\\\\d{3,4})\",\"$1 $2\",[\"16\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,4})\",\"$1 $2 $3\",[\"16\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"14|4\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[2378]\"],\"(0$1)\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1(?:30|[89])\"]]],\"0\",0,\"(183[12])|0\",0,0,0,[[\"(?:(?:2(?:(?:[0-26-9]\\\\d|3[0-8]|5[0135-9])\\\\d|4(?:[02-9]\\\\d|10))|3(?:(?:[0-3589]\\\\d|6[1-9]|7[0-35-9])\\\\d|4(?:[0-578]\\\\d|90))|7(?:[013-57-9]\\\\d|2[0-8])\\\\d)\\\\d\\\\d|8(?:51(?:0(?:0[03-9]|[12479]\\\\d|3[2-9]|5[0-8]|6[1-9]|8[0-7])|1(?:[0235689]\\\\d|1[0-69]|4[0-589]|7[0-47-9])|2(?:0[0-79]|[18][13579]|2[14-9]|3[0-46-9]|[4-6]\\\\d|7[89]|9[0-4])|[34]\\\\d\\\\d)|(?:6[0-8]|[78]\\\\d)\\\\d{3}|9(?:[02-9]\\\\d{3}|1(?:(?:[0-58]\\\\d|6[0135-9])\\\\d|7(?:0[0-24-9]|[1-9]\\\\d)|9(?:[0-46-9]\\\\d|5[0-79])))))\\\\d{3}\",[9]],[\"4(?:79[01]|83[0-389]|94[0-478])\\\\d{5}|4(?:[0-36]\\\\d|4[047-9]|5[0-25-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\\\d{6}\",[9]],[\"180(?:0\\\\d{3}|2)\\\\d{3}\",[7,10]],[\"190[0-26]\\\\d{6}\",[10]],0,0,0,[\"163\\\\d{2,6}\",[5,6,7,8,9]],[\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\",[9]],[\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\",[6,8,10,12]]],\"0011\"],\"AW\":[\"297\",\"00\",\"(?:[25-79]\\\\d\\\\d|800)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[25-9]\"]]]],\"AX\":[\"358\",\"00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))\",\"2\\\\d{4,9}|35\\\\d{4,5}|(?:60\\\\d\\\\d|800)\\\\d{4,6}|7\\\\d{5,11}|(?:[14]\\\\d|3[0-46-9]|50)\\\\d{4,8}\",[5,6,7,8,9,10,11,12],0,\"0\",0,0,0,0,\"18\",0,\"00\"],\"AZ\":[\"994\",\"00\",\"365\\\\d{6}|(?:[124579]\\\\d|60|88)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"90\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"1[28]|2|365|46\",\"1[28]|2|365[45]|46\",\"1[28]|2|365(?:4|5[02])|46\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[13-9]\"],\"0$1\"]],\"0\"],\"BA\":[\"387\",\"00\",\"6\\\\d{8}|(?:[35689]\\\\d|49|70)\\\\d{6}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6[1-3]|[7-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2-$3\",[\"[3-5]|6[56]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"6\"],\"0$1\"]],\"0\"],\"BB\":[\"1\",\"011\",\"(?:246|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"246$1\",0,\"246\"],\"BD\":[\"880\",\"00\",\"[1-469]\\\\d{9}|8[0-79]\\\\d{7,8}|[2-79]\\\\d{8}|[2-9]\\\\d{7}|[3-9]\\\\d{6}|[57-9]\\\\d{5}\",[6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{4,6})\",\"$1-$2\",[\"31[5-8]|[459]1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,7})\",\"$1-$2\",[\"3(?:[67]|8[013-9])|4(?:6[168]|7|[89][18])|5(?:6[128]|9)|6(?:[15]|28|4[14])|7[2-589]|8(?:0[014-9]|[12])|9[358]|(?:3[2-5]|4[235]|5[2-578]|6[0389]|76|8[3-7]|9[24])1|(?:44|66)[01346-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3,6})\",\"$1-$2\",[\"[13-9]|2[23]\"],\"0$1\"],[\"(\\\\d)(\\\\d{7,8})\",\"$1-$2\",[\"2\"],\"0$1\"]],\"0\"],\"BE\":[\"32\",\"00\",\"4\\\\d{8}|[1-9]\\\\d{7}\",[8,9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"(?:80|9)0\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[239]|4[23]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[15-8]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"4\"],\"0$1\"]],\"0\"],\"BF\":[\"226\",\"00\",\"[025-7]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[025-7]\"]]]],\"BG\":[\"359\",\"00\",\"00800\\\\d{7}|[2-7]\\\\d{6,7}|[89]\\\\d{6,8}|2\\\\d{5}\",[6,7,8,9,12],[[\"(\\\\d)(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"43[1-6]|70[1-9]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\"$1 $2 $3\",[\"[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"(?:70|8)0\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3\",[\"43[1-7]|7\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[48]|9[08]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"],\"0$1\"]],\"0\"],\"BH\":[\"973\",\"00\",\"[136-9]\\\\d{7}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[13679]|8[02-4679]\"]]]],\"BI\":[\"257\",\"00\",\"(?:[267]\\\\d|31)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2367]\"]]]],\"BJ\":[\"229\",\"00\",\"(?:01\\\\d|[24-689])\\\\d{7}\",[8,10],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[24-689]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"0\"]]]],\"BL\":[\"590\",\"00\",\"(?:590\\\\d|7090)\\\\d{5}|(?:69|80|9\\\\d)\\\\d{7}\",[9],0,\"0\",0,0,0,0,0,[[\"590(?:2[7-9]|3[3-7]|5[12]|87)\\\\d{4}\"],[\"(?:69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5])|4(?:0[89]|1[2-6]|9\\\\d)|6(?:1[016-9]|5[0-4]|[67]\\\\d))|7090[0-4])\\\\d{4}\"],[\"80[0-5]\\\\d{6}\"],0,0,0,0,0,[\"9(?:(?:39[5-7]|76[018])\\\\d|475[0-6])\\\\d{4}\"]]],\"BM\":[\"1\",\"011\",\"(?:441|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"441$1\",0,\"441\"],\"BN\":[\"673\",\"00\",\"[2-578]\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-578]\"]]]],\"BO\":[\"591\",\"00(?:1\\\\d)?\",\"8001\\\\d{5}|(?:[2-467]\\\\d|50)\\\\d{6}\",[8,9],[[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"[235]|4[46]\"]],[\"(\\\\d{8})\",\"$1\",[\"[67]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]]],\"0\",0,\"0(1\\\\d)?\"],\"BQ\":[\"599\",\"00\",\"(?:[34]1|7\\\\d)\\\\d{5}\",[7],0,0,0,0,0,0,\"[347]\"],\"BR\":[\"55\",\"00(?:1[245]|2[1-35]|31|4[13]|[56]5|99)\",\"[1-467]\\\\d{9,10}|55[0-46-9]\\\\d{8}|[34]\\\\d{7}|55\\\\d{7,8}|(?:5[0-46-9]|[89]\\\\d)\\\\d{7,9}\",[8,9,10,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"300|4(?:0[02]|37|86)\",\"300|4(?:0(?:0|20)|370|864)\"]],[\"(\\\\d{3})(\\\\d{2,3})(\\\\d{4})\",\"$1 $2 $3\",[\"(?:[358]|90)0\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2-$3\",[\"(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-57]\"],\"($1)\"],[\"(\\\\d{2})(\\\\d{5})(\\\\d{4})\",\"$1 $2-$3\",[\"[16][1-9]|[2-57-9]\"],\"($1)\"]],\"0\",0,\"(?:0|90)(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\\\d{10,11}))?\",\"$2\"],\"BS\":[\"1\",\"011\",\"(?:242|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([3-8]\\\\d{6})$|1\",\"242$1\",0,\"242\"],\"BT\":[\"975\",\"00\",\"[17]\\\\d{7}|[2-8]\\\\d{6}\",[7,8],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-68]|7[246]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"1[67]|7\"]]]],\"BW\":[\"267\",\"00\",\"(?:0800|(?:[37]|800)\\\\d)\\\\d{6}|(?:[2-6]\\\\d|90)\\\\d{5}\",[7,8,10],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"90\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[24-6]|3[15-9]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[37]\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"0\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]]]],\"BY\":[\"375\",\"810\",\"(?:[12]\\\\d|33|44|902)\\\\d{7}|8(?:0[0-79]\\\\d{5,7}|[1-7]\\\\d{9})|8(?:1[0-489]|[5-79]\\\\d)\\\\d{7}|8[1-79]\\\\d{6,7}|8[0-79]\\\\d{5}|8\\\\d{5}\",[6,7,8,9,10,11],[[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"800\"],\"8 $1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,4})\",\"$1 $2 $3\",[\"800\"],\"8 $1\"],[\"(\\\\d{4})(\\\\d{2})(\\\\d{3})\",\"$1 $2-$3\",[\"1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])\",\"1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])\"],\"8 0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"1(?:[56]|7[467])|2[1-3]\"],\"8 0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"[1-4]\"],\"8 0$1\"],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"],\"8 $1\"]],\"8\",0,\"0|80?\",0,0,0,0,\"8~10\"],\"BZ\":[\"501\",\"00\",\"(?:0800\\\\d|[2-8])\\\\d{6}\",[7,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[2-8]\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})(\\\\d{3})\",\"$1-$2-$3-$4\",[\"0\"]]]],\"CA\":[\"1\",\"011\",\"[2-9]\\\\d{9}|3\\\\d{6}\",[7,10],0,\"1\",0,0,0,0,0,[[\"(?:2(?:04|[23]6|[48]9|5[07]|63)|3(?:06|43|54|6[578]|82)|4(?:03|1[68]|[26]8|3[178]|50|74)|5(?:06|1[49]|48|79|8[147])|6(?:04|[18]3|39|47|72)|7(?:0[59]|42|53|78|8[02])|8(?:[06]7|19|25|7[39])|9(?:0[25]|42))[2-9]\\\\d{6}\",[10]],[\"\",[10]],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",[10]],[\"900[2-9]\\\\d{6}\",[10]],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|(?:5(?:2[125-9]|33|44|66|77|88)|6(?:22|33))[2-9]\\\\d{6}\",[10]],0,[\"310\\\\d{4}\",[7]],0,[\"600[2-9]\\\\d{6}\",[10]]]],\"CC\":[\"61\",\"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\",\"1(?:[0-79]\\\\d{8}(?:\\\\d{2})?|8[0-24-9]\\\\d{7})|[148]\\\\d{8}|1\\\\d{5,7}\",[6,7,8,9,10,12],0,\"0\",0,\"([59]\\\\d{7})$|0\",\"8$1\",0,0,[[\"8(?:51(?:0(?:02|31|60|89)|1(?:18|76)|223)|91(?:0(?:1[0-2]|29)|1(?:[28]2|50|79)|2(?:10|64)|3(?:[06]8|22)|4[29]8|62\\\\d|70[23]|959))\\\\d{3}\",[9]],[\"4(?:79[01]|83[0-389]|94[0-478])\\\\d{5}|4(?:[0-36]\\\\d|4[047-9]|5[0-25-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\\\d{6}\",[9]],[\"180(?:0\\\\d{3}|2)\\\\d{3}\",[7,10]],[\"190[0-26]\\\\d{6}\",[10]],0,0,0,0,[\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\",[9]],[\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\",[6,8,10,12]]],\"0011\"],\"CD\":[\"243\",\"00\",\"(?:(?:[189]|5\\\\d)\\\\d|2)\\\\d{7}|[1-68]\\\\d{6}\",[7,8,9,10],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"88\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"[1-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"5\"],\"0$1\"]],\"0\"],\"CF\":[\"236\",\"00\",\"(?:[27]\\\\d{3}|8776)\\\\d{4}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[278]\"]]]],\"CG\":[\"242\",\"00\",\"222\\\\d{6}|(?:0\\\\d|80)\\\\d{7}\",[9],[[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[02]\"]]]],\"CH\":[\"41\",\"00\",\"8\\\\d{11}|[2-9]\\\\d{8}\",[9,12],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8[047]|90\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-79]|81\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"8\"],\"0$1\"]],\"0\"],\"CI\":[\"225\",\"00\",\"[02]\\\\d{9}\",[10],[[\"(\\\\d{2})(\\\\d{2})(\\\\d)(\\\\d{5})\",\"$1 $2 $3 $4\",[\"2\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"0\"]]]],\"CK\":[\"682\",\"00\",\"[2-578]\\\\d{4}\",[5],[[\"(\\\\d{2})(\\\\d{3})\",\"$1 $2\",[\"[2-578]\"]]]],\"CL\":[\"56\",\"(?:0|1(?:1[0-69]|2[02-5]|5[13-58]|69|7[0167]|8[018]))0\",\"12300\\\\d{6}|6\\\\d{9,10}|[2-9]\\\\d{8}\",[9,10,11],[[\"(\\\\d{5})(\\\\d{4})\",\"$1 $2\",[\"219\",\"2196\"],\"($1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"44\"]],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2[1-36]\"],\"($1)\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"9[2-9]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"3[2-5]|[47]|5[1-3578]|6[13-57]|8(?:0[1-9]|[1-9])\"],\"($1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"60|8\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"60\"]]]],\"CM\":[\"237\",\"00\",\"[26]\\\\d{8}|88\\\\d{6,7}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"88\"]],[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"[26]|88\"]]]],\"CN\":[\"86\",\"00|1(?:[12]\\\\d|79)\\\\d\\\\d00\",\"(?:(?:1[03-689]|2\\\\d)\\\\d\\\\d|6)\\\\d{8}|1\\\\d{10}|[126]\\\\d{6}(?:\\\\d(?:\\\\d{2})?)?|86\\\\d{5,6}|(?:[3-579]\\\\d|8[0-57-9])\\\\d{5,9}\",[7,8,9,10,11,12],[[\"(\\\\d{2})(\\\\d{5,6})\",\"$1 $2\",[\"(?:10|2[0-57-9])[19]|3(?:[157]|35|49|9[1-68])|4(?:1[124-9]|2[179]|6[47-9]|7|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:07|1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3|4[13]|5[1-5]|7[0-79]|9[0-35-9])|(?:4[35]|59|85)[1-9]\",\"(?:10|2[0-57-9])(?:1[02]|9[56])|8078|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\\\d|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))1\",\"10(?:1(?:0|23)|9[56])|2[0-57-9](?:1(?:00|23)|9[56])|80781|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\\\d|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))12\",\"10(?:1(?:0|23)|9[56])|2[0-57-9](?:1(?:00|23)|9[56])|807812|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\\\d|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))123\",\"10(?:1(?:0|23)|9[56])|2[0-57-9](?:1(?:00|23)|9[56])|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:1[124-9]|2[179]|[35][1-9]|6[47-9]|7\\\\d|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:078|1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|3\\\\d|4[13]|5[1-5]|7[0-79]|9[0-35-9]))123\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"3(?:[157]|35|49|9[1-68])|4(?:[17]|2[179]|6[47-9]|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])|(?:4[35]|59|85)[1-9]\",\"(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))[19]\",\"85[23](?:10|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:10|9[56])\",\"85[23](?:100|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:100|9[56])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"(?:4|80)0\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"10|2(?:[02-57-9]|1[1-9])\",\"10|2(?:[02-57-9]|1[1-9])\",\"10[0-79]|2(?:[02-57-9]|1[1-79])|(?:10|21)8(?:0[1-9]|[1-9])\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"3(?:[3-59]|7[02-68])|4(?:[26-8]|3[3-9]|5[2-9])|5(?:3[03-9]|[468]|7[028]|9[2-46-9])|6|7(?:[0-247]|3[04-9]|5[0-4689]|6[2368])|8(?:[1-358]|9[1-7])|9(?:[013479]|5[1-5])|(?:[34]1|55|79|87)[02-9]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{7,8})\",\"$1 $2\",[\"9\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"80\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[3-578]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"1[3-9]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"[12]\"],\"0$1\",1]],\"0\",0,\"(1(?:[12]\\\\d|79)\\\\d\\\\d)|0\",0,0,0,0,\"00\"],\"CO\":[\"57\",\"00(?:4(?:[14]4|56)|[579])\",\"(?:46|60\\\\d\\\\d)\\\\d{6}|(?:1\\\\d|[39])\\\\d{9}\",[8,10,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"46\"]],[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"6|90\"],\"($1)\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"3[0-357]|9[14]\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{7})\",\"$1-$2-$3\",[\"1\"],\"0$1\",0,\"$1 $2 $3\"]],\"0\",0,\"0([3579]|4(?:[14]4|56))?\"],\"CR\":[\"506\",\"00\",\"(?:8\\\\d|90)\\\\d{8}|(?:[24-8]\\\\d{3}|3005)\\\\d{4}\",[8,10],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2-7]|8[3-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[89]\"]]],0,0,\"(19(?:0[0-2468]|1[09]|20|66|77|99))\"],\"CU\":[\"53\",\"119\",\"(?:[2-7]|8\\\\d\\\\d)\\\\d{7}|[2-47]\\\\d{6}|[34]\\\\d{5}\",[6,7,8,10],[[\"(\\\\d{2})(\\\\d{4,6})\",\"$1 $2\",[\"2[1-4]|[34]\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{6,7})\",\"$1 $2\",[\"7\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"[56]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"8\"],\"0$1\"]],\"0\"],\"CV\":[\"238\",\"0\",\"(?:[2-59]\\\\d\\\\d|800)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[2-589]\"]]]],\"CW\":[\"599\",\"00\",\"(?:[34]1|60|(?:7|9\\\\d)\\\\d)\\\\d{5}\",[7,8],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[3467]\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"9[4-8]\"]]],0,0,0,0,0,\"[69]\"],\"CX\":[\"61\",\"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\",\"1(?:[0-79]\\\\d{8}(?:\\\\d{2})?|8[0-24-9]\\\\d{7})|[148]\\\\d{8}|1\\\\d{5,7}\",[6,7,8,9,10,12],0,\"0\",0,\"([59]\\\\d{7})$|0\",\"8$1\",0,0,[[\"8(?:51(?:0(?:01|30|59|88)|1(?:17|46|75)|2(?:22|35))|91(?:00[6-9]|1(?:[28]1|49|78)|2(?:09|63)|3(?:12|26|75)|4(?:56|97)|64\\\\d|7(?:0[01]|1[0-2])|958))\\\\d{3}\",[9]],[\"4(?:79[01]|83[0-389]|94[0-478])\\\\d{5}|4(?:[0-36]\\\\d|4[047-9]|5[0-25-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\\\d{6}\",[9]],[\"180(?:0\\\\d{3}|2)\\\\d{3}\",[7,10]],[\"190[0-26]\\\\d{6}\",[10]],0,0,0,0,[\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\",[9]],[\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\",[6,8,10,12]]],\"0011\"],\"CY\":[\"357\",\"00\",\"(?:[279]\\\\d|[58]0)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[257-9]\"]]]],\"CZ\":[\"420\",\"00\",\"(?:[2-578]\\\\d|60)\\\\d{7}|9\\\\d{8,11}\",[9,10,11,12],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-8]|9[015-7]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"96\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"9\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"9\"]]]],\"DE\":[\"49\",\"00\",\"[2579]\\\\d{5,14}|49(?:[34]0|69|8\\\\d)\\\\d\\\\d?|49(?:37|49|60|7[089]|9\\\\d)\\\\d{1,3}|49(?:2[024-9]|3[2-689]|7[1-7])\\\\d{1,8}|(?:1|[368]\\\\d|4[0-8])\\\\d{3,13}|49(?:[015]\\\\d|2[13]|31|[46][1-8])\\\\d{1,9}\",[4,5,6,7,8,9,10,11,12,13,14,15],[[\"(\\\\d{2})(\\\\d{3,13})\",\"$1 $2\",[\"3[02]|40|[68]9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,12})\",\"$1 $2\",[\"2(?:0[1-389]|1[124]|2[18]|3[14])|3(?:[35-9][15]|4[015])|906|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1\",\"2(?:0[1-389]|12[0-8])|3(?:[35-9][15]|4[015])|906|2(?:[13][14]|2[18])|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{2,11})\",\"$1 $2\",[\"[24-6]|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]\",\"[24-6]|3(?:3(?:0[1-467]|2[127-9]|3[124578]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|4[13578]|9[1346])|5(?:0[14]|2[1-3589]|6[1-4]|7[13468]|8[13568])|6(?:2[1-489]|3[124-6]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|6|7[1467]|8[136])|9(?:0[12479]|2[1358]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]|3[68]4[1347]|3(?:47|60)[1356]|3(?:3[46]|46|5[49])[1246]|3[4579]3[1357]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"138\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{2,10})\",\"$1 $2\",[\"3\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5,11})\",\"$1 $2\",[\"181\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{4,10})\",\"$1 $2 $3\",[\"1(?:3|80)|9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7,8})\",\"$1 $2\",[\"1[67]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7,12})\",\"$1 $2\",[\"8\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{6})\",\"$1 $2\",[\"185\",\"1850\",\"18500\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{7})\",\"$1 $2\",[\"18[68]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{7})\",\"$1 $2\",[\"15[1279]\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{6})\",\"$1 $2\",[\"15[03568]\",\"15(?:[0568]|31)\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{8})\",\"$1 $2\",[\"18\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{7,8})\",\"$1 $2 $3\",[\"1(?:6[023]|7)\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{2})(\\\\d{7})\",\"$1 $2 $3\",[\"15[279]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{8})\",\"$1 $2 $3\",[\"15\"],\"0$1\"]],\"0\"],\"DJ\":[\"253\",\"00\",\"(?:2\\\\d|77)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[27]\"]]]],\"DK\":[\"45\",\"00\",\"[2-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-9]\"]]]],\"DM\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|767|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-7]\\\\d{6})$|1\",\"767$1\",0,\"767\"],\"DO\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,0,0,0,\"8001|8[024]9\"],\"DZ\":[\"213\",\"00\",\"(?:[1-4]|[5-79]\\\\d|80)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[1-4]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[5-8]\"],\"0$1\"]],\"0\"],\"EC\":[\"593\",\"00\",\"1\\\\d{9,10}|(?:[2-7]|9\\\\d)\\\\d{7}\",[8,9,10,11],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2-$3\",[\"[2-7]\"],\"(0$1)\",0,\"$1-$2-$3\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"1\"]]],\"0\"],\"EE\":[\"372\",\"00\",\"8\\\\d{9}|[4578]\\\\d{7}|(?:[3-8]\\\\d|90)\\\\d{5}\",[7,8,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]|88\",\"[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]|88\"]],[\"(\\\\d{4})(\\\\d{3,4})\",\"$1 $2\",[\"[45]|8(?:00|[1-49])\",\"[45]|8(?:00[1-9]|[1-49])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]]]],\"EG\":[\"20\",\"00\",\"[189]\\\\d{8,9}|[24-6]\\\\d{8}|[135]\\\\d{7}\",[8,9,10],[[\"(\\\\d)(\\\\d{7,8})\",\"$1 $2\",[\"[23]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{6,7})\",\"$1 $2\",[\"1[35]|[4-6]|8[2468]|9[235-7]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{8})\",\"$1 $2\",[\"1\"],\"0$1\"]],\"0\"],\"EH\":[\"212\",\"00\",\"[5-8]\\\\d{8}\",[9],0,\"0\",0,0,0,0,\"528[89]\"],\"ER\":[\"291\",\"00\",\"[178]\\\\d{6}\",[7],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[178]\"],\"0$1\"]],\"0\"],\"ES\":[\"34\",\"00\",\"[5-9]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[89]00\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[5-9]\"]]]],\"ET\":[\"251\",\"00\",\"(?:11|[2-579]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-579]\"],\"0$1\"]],\"0\"],\"FI\":[\"358\",\"00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))\",\"[1-35689]\\\\d{4}|7\\\\d{10,11}|(?:[124-7]\\\\d|3[0-46-9])\\\\d{8}|[1-9]\\\\d{5,8}\",[5,6,7,8,9,10,11,12],[[\"(\\\\d{5})\",\"$1\",[\"20[2-59]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,7})\",\"$1 $2\",[\"(?:[1-3]0|[68])0|70[07-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4,8})\",\"$1 $2\",[\"[14]|2[09]|50|7[135]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{6,10})\",\"$1 $2\",[\"7\"],\"0$1\"],[\"(\\\\d)(\\\\d{4,9})\",\"$1 $2\",[\"(?:19|[2568])[1-8]|3(?:0[1-9]|[1-9])|9\"],\"0$1\"]],\"0\",0,0,0,0,\"1[03-79]|[2-9]\",0,\"00\"],\"FJ\":[\"679\",\"0(?:0|52)\",\"45\\\\d{5}|(?:0800\\\\d|[235-9])\\\\d{6}\",[7,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[235-9]|45\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"0\"]]],0,0,0,0,0,0,0,\"00\"],\"FK\":[\"500\",\"00\",\"[2-7]\\\\d{4}\",[5]],\"FM\":[\"691\",\"00\",\"(?:[39]\\\\d\\\\d|820)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[389]\"]]]],\"FO\":[\"298\",\"00\",\"[2-9]\\\\d{5}\",[6],[[\"(\\\\d{6})\",\"$1\",[\"[2-9]\"]]],0,0,\"(10(?:01|[12]0|88))\"],\"FR\":[\"33\",\"00\",\"[1-9]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0 $1\"],[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"[1-79]\"],\"0$1\"]],\"0\"],\"GA\":[\"241\",\"00\",\"(?:[067]\\\\d|11)\\\\d{6}|[2-7]\\\\d{6}\",[7,8],[[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-7]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"0\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"11|[67]\"],\"0$1\"]],0,0,\"0(11\\\\d{6}|60\\\\d{6}|61\\\\d{6}|6[256]\\\\d{6}|7[467]\\\\d{6})\",\"$1\"],\"GB\":[\"44\",\"00\",\"[1-357-9]\\\\d{9}|[18]\\\\d{8}|8\\\\d{6}\",[7,9,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"800\",\"8001\",\"80011\",\"800111\",\"8001111\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"845\",\"8454\",\"84546\",\"845464\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"800\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{4,5})\",\"$1 $2\",[\"1(?:38|5[23]|69|76|94)\",\"1(?:(?:38|69)7|5(?:24|39)|768|946)\",\"1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5,6})\",\"$1 $2\",[\"1(?:[2-69][02-9]|[78])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[25]|7(?:0|6[02-9])\",\"[25]|7(?:0|6(?:[03-9]|2[356]))\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"7\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1389]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:1(?:1(?:3(?:[0-58]\\\\d\\\\d|73[0-35])|4(?:(?:[0-5]\\\\d|70)\\\\d|69[7-9])|(?:(?:5[0-26-9]|[78][0-49])\\\\d|6(?:[0-4]\\\\d|50))\\\\d)|(?:2(?:(?:0[024-9]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-47-9]|7[013-9]|9\\\\d)\\\\d|1(?:[0-7]\\\\d|8[0-3]))|(?:3(?:0\\\\d|1[0-8]|[25][02-9]|3[02-579]|[468][0-46-9]|7[1-35-79]|9[2-578])|4(?:0[03-9]|[137]\\\\d|[28][02-57-9]|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1-35-9]|[16]\\\\d|2[024-9]|3[015689]|4[02-9]|5[03-9]|7[0-35-9]|8[0-468]|9[0-57-9])|6(?:0[034689]|1\\\\d|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0-24578])|7(?:0[0246-9]|2\\\\d|3[0236-8]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-57-9]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\\\d|8[02-9]|9[02569])|9(?:0[02-589]|[18]\\\\d|2[02-689]|3[1-57-9]|4[2-9]|5[0-579]|6[2-47-9]|7[0-24578]|9[2-57]))\\\\d)\\\\d)|2(?:0[013478]|3[0189]|4[017]|8[0-46-9]|9[0-2])\\\\d{3})\\\\d{4}|1(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-47-9]|8[3-5])))|3(?:6(?:38[2-5]|47[23])|8(?:47[04-9]|64[0157-9]))|4(?:044[1-7]|20(?:2[23]|8\\\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[1-3]))|5(?:2(?:4(?:3[2-79]|6\\\\d)|76\\\\d)|6(?:26[06-9]|686))|6(?:06(?:4\\\\d|7[4-79])|295[5-7]|35[34]\\\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|9(?:55[0-4]|77[23]))|7(?:26(?:6[13-9]|7[0-7])|(?:442|688)\\\\d|50(?:2[0-3]|[3-68]2|76))|8(?:27[56]\\\\d|37(?:5[2-5]|8[239])|843[2-58])|9(?:0(?:0(?:6[1-8]|85)|52\\\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\\\d{3}\",[9,10]],[\"7(?:457[0-57-9]|700[01]|911[028])\\\\d{5}|7(?:[1-3]\\\\d\\\\d|4(?:[0-46-9]\\\\d|5[0-689])|5(?:0[0-8]|[13-9]\\\\d|2[0-35-9])|7(?:0[1-9]|[1-7]\\\\d|8[02-9]|9[0-689])|8(?:[014-9]\\\\d|[23][0-8])|9(?:[024-9]\\\\d|1[02-9]|3[0-689]))\\\\d{6}\",[10]],[\"80[08]\\\\d{7}|800\\\\d{6}|8001111\"],[\"(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\\\d|8[2-49]))\\\\d{7}|845464\\\\d\",[7,10]],[\"70\\\\d{8}\",[10]],0,[\"(?:3[0347]|55)\\\\d{8}\",[10]],[\"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\",[10]],[\"56\\\\d{8}\",[10]]],0,\" x\"],\"GD\":[\"1\",\"011\",\"(?:473|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"473$1\",0,\"473\"],\"GE\":[\"995\",\"00\",\"(?:[3-57]\\\\d\\\\d|800)\\\\d{6}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"70\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"32\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[57]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[348]\"],\"0$1\"]],\"0\"],\"GF\":[\"594\",\"00\",\"(?:[56]94\\\\d|7093)\\\\d{5}|(?:80|9\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[5-7]|9[47]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[89]\"],\"0$1\"]],\"0\"],\"GG\":[\"44\",\"00\",\"(?:1481|[357-9]\\\\d{3})\\\\d{6}|8\\\\d{6}(?:\\\\d{2})?\",[7,9,10],0,\"0\",0,\"([25-9]\\\\d{5})$|0\",\"1481$1\",0,0,[[\"1481[25-9]\\\\d{5}\",[10]],[\"7(?:(?:781|839)\\\\d|911[17])\\\\d{5}\",[10]],[\"80[08]\\\\d{7}|800\\\\d{6}|8001111\"],[\"(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\\\d|8[0-3]))\\\\d{7}|845464\\\\d\",[7,10]],[\"70\\\\d{8}\",[10]],0,[\"(?:3[0347]|55)\\\\d{8}\",[10]],[\"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\",[10]],[\"56\\\\d{8}\",[10]]]],\"GH\":[\"233\",\"00\",\"(?:[235]\\\\d{3}|800)\\\\d{5}\",[8,9],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[235]\"],\"0$1\"]],\"0\"],\"GI\":[\"350\",\"00\",\"(?:[25]\\\\d|60)\\\\d{6}\",[8],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"2\"]]]],\"GL\":[\"299\",\"00\",\"(?:19|[2-689]\\\\d|70)\\\\d{4}\",[6],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"19|[2-9]\"]]]],\"GM\":[\"220\",\"00\",\"[2-9]\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-9]\"]]]],\"GN\":[\"224\",\"00\",\"722\\\\d{6}|(?:3|6\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"3\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[67]\"]]]],\"GP\":[\"590\",\"00\",\"(?:590\\\\d|7090)\\\\d{5}|(?:69|80|9\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[5-79]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"590(?:0[1-68]|[14][0-24-9]|2[0-68]|3[1-9]|5[3-579]|[68][0-689]|7[08]|9\\\\d)\\\\d{4}\"],[\"(?:69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5])|4(?:0[89]|1[2-6]|9\\\\d)|6(?:1[016-9]|5[0-4]|[67]\\\\d))|7090[0-4])\\\\d{4}\"],[\"80[0-5]\\\\d{6}\"],0,0,0,0,0,[\"9(?:(?:39[5-7]|76[018])\\\\d|475[0-6])\\\\d{4}\"]]],\"GQ\":[\"240\",\"00\",\"222\\\\d{6}|(?:3\\\\d|55|[89]0)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[235]\"]],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"[89]\"]]]],\"GR\":[\"30\",\"00\",\"5005000\\\\d{3}|8\\\\d{9,11}|(?:[269]\\\\d|70)\\\\d{8}\",[10,11,12],[[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"21|7\"]],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"2(?:2|3[2-57-9]|4[2-469]|5[2-59]|6[2-9]|7[2-69]|8[2-49])|5\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2689]\"]],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{5})\",\"$1 $2 $3\",[\"8\"]]]],\"GT\":[\"502\",\"00\",\"80\\\\d{6}|(?:1\\\\d{3}|[2-7])\\\\d{7}\",[8,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2-8]\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]]]],\"GU\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|671|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"671$1\",0,\"671\"],\"GW\":[\"245\",\"00\",\"[49]\\\\d{8}|4\\\\d{6}\",[7,9],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"40\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[49]\"]]]],\"GY\":[\"592\",\"001\",\"(?:[2-8]\\\\d{3}|9008)\\\\d{3}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-9]\"]]]],\"HK\":[\"852\",\"00(?:30|5[09]|[126-9]?)\",\"8[0-46-9]\\\\d{6,7}|9\\\\d{4,7}|(?:[2-7]|9\\\\d{3})\\\\d{7}\",[5,6,7,8,9,11],[[\"(\\\\d{3})(\\\\d{2,5})\",\"$1 $2\",[\"900\",\"9003\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2-7]|8[1-4]|9(?:0[1-9]|[1-8])\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"9\"]]],0,0,0,0,0,0,0,\"00\"],\"HN\":[\"504\",\"00\",\"8\\\\d{10}|[237-9]\\\\d{7}\",[8,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"[237-9]\"]]]],\"HR\":[\"385\",\"00\",\"[2-69]\\\\d{8}|80\\\\d{5,7}|[1-79]\\\\d{7}|6\\\\d{6}\",[7,8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"6[01]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"6|7[245]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-57]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"],\"0$1\"]],\"0\"],\"HT\":[\"509\",\"00\",\"(?:[2-489]\\\\d|55)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-589]\"]]]],\"HU\":[\"36\",\"00\",\"[235-7]\\\\d{8}|[1-9]\\\\d{7}\",[8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"(06 $1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[27][2-9]|3[2-7]|4[24-9]|5[2-79]|6|8[2-57-9]|9[2-69]\"],\"(06 $1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-9]\"],\"06 $1\"]],\"06\"],\"ID\":[\"62\",\"00[89]\",\"00[1-9]\\\\d{9,14}|(?:[1-36]|8\\\\d{5})\\\\d{6}|00\\\\d{9}|[1-9]\\\\d{8,10}|[2-9]\\\\d{7}\",[7,8,9,10,11,12,13,14,15,16,17],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"15\"]],[\"(\\\\d{2})(\\\\d{5,9})\",\"$1 $2\",[\"2[124]|[36]1\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{5,7})\",\"$1 $2\",[\"800\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5,8})\",\"$1 $2\",[\"[2-79]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{3})\",\"$1-$2-$3\",[\"8[1-35-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6,8})\",\"$1 $2\",[\"1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"804\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"80\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\",\"$1-$2-$3\",[\"8\"],\"0$1\"]],\"0\"],\"IE\":[\"353\",\"00\",\"(?:1\\\\d|[2569])\\\\d{6,8}|4\\\\d{6,9}|7\\\\d{8}|8\\\\d{8,9}\",[7,8,9,10],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"2[24-9]|47|58|6[237-9]|9[35-9]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[45]0\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2569]|4[1-69]|7[14]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"70\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"81\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[78]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"4\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"IL\":[\"972\",\"0(?:0|1[2-9])\",\"1\\\\d{6}(?:\\\\d{3,5})?|[57]\\\\d{8}|[1-489]\\\\d{7}\",[7,8,9,10,11,12],[[\"(\\\\d{4})(\\\\d{3})\",\"$1-$2\",[\"125\"]],[\"(\\\\d{4})(\\\\d{2})(\\\\d{2})\",\"$1-$2-$3\",[\"121\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[2-489]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[57]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1-$2-$3\",[\"12\"]],[\"(\\\\d{4})(\\\\d{6})\",\"$1-$2\",[\"159\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1-$2-$3-$4\",[\"1[7-9]\"]],[\"(\\\\d{3})(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3-$4\",[\"15\"]]],\"0\"],\"IM\":[\"44\",\"00\",\"1624\\\\d{6}|(?:[3578]\\\\d|90)\\\\d{8}\",[10],0,\"0\",0,\"([25-8]\\\\d{5})$|0\",\"1624$1\",0,\"74576|(?:16|7[56])24\"],\"IN\":[\"91\",\"00\",\"(?:000800|[2-9]\\\\d\\\\d)\\\\d{7}|1\\\\d{7,12}\",[8,9,10,11,12,13],[[\"(\\\\d{8})\",\"$1\",[\"5(?:0|2[23]|3[03]|[67]1|88)\",\"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|888)\",\"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|8888)\"],0,1],[\"(\\\\d{4})(\\\\d{4,5})\",\"$1 $2\",[\"180\",\"1800\"],0,1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"140\"],0,1],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"11|2[02]|33|4[04]|79[1-7]|80[2-46]\",\"11|2[02]|33|4[04]|79(?:[1-6]|7[19])|80(?:[2-4]|6[0-589])\",\"11|2[02]|33|4[04]|79(?:[124-6]|3(?:[02-9]|1[0-24-9])|7(?:1|9[1-6]))|80(?:[2-4]|6[0-589])\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1(?:2[0-249]|3[0-25]|4[145]|[68]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1)|6(?:12|[2-4]1|5[17]|6[13]|80)|7(?:12|3[134]|4[47]|61|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)|(?:43|59|75)[15]|(?:1[59]|29|67|72)[14]\",\"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|674|7(?:(?:2[14]|3[34]|5[15])[2-6]|61[346]|88[0-8])|8(?:70[2-6]|84[235-7]|91[3-7])|(?:1(?:29|60|8[06])|261|552|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))[2-7]\",\"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12(?:[2-6]|7[0-8])|74[2-7])|7(?:(?:2[14]|5[15])[2-6]|3171|61[346]|88(?:[2-7]|82))|8(?:70[2-6]|84(?:[2356]|7[19])|91(?:[3-6]|7[19]))|73[134][2-6]|(?:74[47]|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[2-6]|7[19])|(?:1(?:29|60|8[06])|261|552|6(?:[2-4]1|5[17]|6[13]|7(?:1|4[0189])|80)|7(?:12|88[01]))[2-7]\"],\"0$1\",1],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2[2457-9]|3[2-5]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1[013-9]|28|3[129]|4[1-35689]|5[29]|6[02-5]|70)|807\",\"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1(?:[013-8]|9[6-9])|28[6-8]|3(?:17|2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4|5[0-367])|70[13-7])|807[19]\",\"1(?:[2-479]|5(?:[0236-9]|5[013-9]))|[2-5]|6(?:2(?:84|95)|355|83)|73179|807(?:1|9[1-3])|(?:1552|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])\\\\d|7(?:1(?:[013-8]\\\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\\\d|5[0-367])|70[13-7]))[2-7]\"],\"0$1\",1],[\"(\\\\d{5})(\\\\d{5})\",\"$1 $2\",[\"[6-9]\"],\"0$1\",1],[\"(\\\\d{4})(\\\\d{2,4})(\\\\d{4})\",\"$1 $2 $3\",[\"1(?:6|8[06])\",\"1(?:6|8[06]0)\"],0,1],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"18\"],0,1]],\"0\"],\"IO\":[\"246\",\"00\",\"3\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"3\"]]]],\"IQ\":[\"964\",\"00\",\"(?:1|7\\\\d\\\\d)\\\\d{7}|[2-6]\\\\d{7,8}\",[8,9,10],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-6]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\"],\"IR\":[\"98\",\"00\",\"[1-9]\\\\d{9}|(?:[1-8]\\\\d\\\\d|9)\\\\d{3,4}\",[4,5,6,7,10],[[\"(\\\\d{4,5})\",\"$1\",[\"96\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4,5})\",\"$1 $2\",[\"(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])[12689]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-8]\"],\"0$1\"]],\"0\"],\"IS\":[\"354\",\"00|1(?:0(?:01|[12]0)|100)\",\"(?:38\\\\d|[4-9])\\\\d{6}\",[7,9],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[4-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"3\"]]],0,0,0,0,0,0,0,\"00\"],\"IT\":[\"39\",\"00\",\"0\\\\d{5,10}|1\\\\d{8,10}|3(?:[0-8]\\\\d{7,10}|9\\\\d{7,8})|(?:43|55|70)\\\\d{8}|8\\\\d{5}(?:\\\\d{2,4})?\",[6,7,8,9,10,11,12],[[\"(\\\\d{2})(\\\\d{4,6})\",\"$1 $2\",[\"0[26]\"]],[\"(\\\\d{3})(\\\\d{3,6})\",\"$1 $2\",[\"0[13-57-9][0159]|8(?:03|4[17]|9[2-5])\",\"0[13-57-9][0159]|8(?:03|4[17]|9(?:2|3[04]|[45][0-4]))\"]],[\"(\\\\d{4})(\\\\d{2,6})\",\"$1 $2\",[\"0(?:[13-579][2-46-8]|8[236-8])\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"894\"]],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"0[26]|5\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"1(?:44|[679])|[378]|43\"]],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"0[13-57-9][0159]|14\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{5})\",\"$1 $2 $3\",[\"0[26]\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"0\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\",\"$1 $2 $3\",[\"3\"]]],0,0,0,0,0,0,[[\"0669[0-79]\\\\d{1,6}|0(?:1(?:[0159]\\\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|2\\\\d\\\\d|3(?:[0159]\\\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|6(?:[0-57-9]\\\\d|6[0-8])|7(?:[0159]\\\\d|2[12]|3[1-7]|4[2-46]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\\\d|2[3-578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\\\d{2,7}\",[6,7,8,9,10,11]],[\"3[2-9]\\\\d{7,8}|(?:31|43)\\\\d{8}\",[9,10]],[\"80(?:0\\\\d{3}|3)\\\\d{3}\",[6,9]],[\"(?:0878\\\\d{3}|89(?:2\\\\d|3[04]|4(?:[0-4]|[5-9]\\\\d\\\\d)|5[0-4]))\\\\d\\\\d|(?:1(?:44|6[346])|89(?:38|5[5-9]|9))\\\\d{6}\",[6,8,9,10]],[\"1(?:78\\\\d|99)\\\\d{6}\",[9,10]],[\"3[2-8]\\\\d{9,10}\",[11,12]],0,0,[\"55\\\\d{8}\",[10]],[\"84(?:[08]\\\\d{3}|[17])\\\\d{3}\",[6,9]]]],\"JE\":[\"44\",\"00\",\"1534\\\\d{6}|(?:[3578]\\\\d|90)\\\\d{8}\",[10],0,\"0\",0,\"([0-24-8]\\\\d{5})$|0\",\"1534$1\",0,0,[[\"1534[0-24-8]\\\\d{5}\"],[\"7(?:(?:(?:50|82)9|937)\\\\d|7(?:00[378]|97\\\\d))\\\\d{5}\"],[\"80(?:07(?:35|81)|8901)\\\\d{4}\"],[\"(?:8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|90(?:066[59]|1810|71(?:07|55)))\\\\d{4}\"],[\"701511\\\\d{4}\"],0,[\"(?:3(?:0(?:07(?:35|81)|8901)|3\\\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|55\\\\d{4})\\\\d{4}\"],[\"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\"],[\"56\\\\d{8}\"]]],\"JM\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|658|900)\\\\d{7}\",[10],0,\"1\",0,0,0,0,\"658|876\"],\"JO\":[\"962\",\"00\",\"(?:(?:[2689]|7\\\\d)\\\\d|32|53)\\\\d{6}\",[8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2356]|87\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"70\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\"],\"JP\":[\"81\",\"010\",\"00[1-9]\\\\d{6,14}|[257-9]\\\\d{9}|(?:00|[1-9]\\\\d\\\\d)\\\\d{6}\",[8,9,10,11,12,13,14,15,16,17],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1-$2-$3\",[\"(?:12|57|99)0\"],\"0$1\"],[\"(\\\\d{4})(\\\\d)(\\\\d{4})\",\"$1-$2-$3\",[\"1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51)|9(?:80|9[16])\",\"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[7-9]|96)|477|51[2-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]\",\"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[7-9]|96[2457-9])|477|51[2-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"60\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1-$2-$3\",[\"[36]|4(?:2[09]|7[01])\",\"[36]|4(?:2(?:0|9[02-69])|7(?:0[019]|1))\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"1(?:1|5[45]|77|88|9[69])|2(?:2[1-37]|3[0-269]|4[59]|5|6[24]|7[1-358]|8[1369]|9[0-38])|4(?:[28][1-9]|3[0-57]|[45]|6[248]|7[2-579]|9[29])|5(?:2|3[0459]|4[0-369]|5[29]|8[02389]|9[0-389])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9[2-6])|8(?:2[124589]|3[26-9]|49|51|6|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9[1-489])\",\"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:[127]|3[014-9])|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9[19])|62|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|8[1-9]|9[29])|5(?:2|3(?:[045]|9[0-8])|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0-2469])|3(?:[29]|60)|49|51|6(?:[0-24]|36|5[0-3589]|7[23]|9[01459])|7[0-468]|8[68])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3[34]|4[0178]))|(?:264|837)[016-9]|2(?:57|93)[015-9]|(?:25[0468]|422|838)[01]|(?:47[59]|59[89]|8(?:6[68]|9))[019]\",\"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3(?:[045]|9(?:[0-58]|6[4-9]|7[0-35689]))|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0169])|3(?:[29]|60|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[2-57-9]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|7(?:2[2-468]|3[78])|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:8294|96)[1-3]|2(?:57|93)[015-9]|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|8292|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1-$2-$3\",[\"[14]|[289][2-9]|5[3-9]|7[2-4679]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"800\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1-$2-$3\",[\"[257-9]\"],\"0$1\"]],\"0\",0,\"(000[259]\\\\d{6})$|(?:(?:003768)0?)|0\",\"$1\"],\"KE\":[\"254\",\"000\",\"(?:[17]\\\\d\\\\d|900)\\\\d{6}|(?:2|80)0\\\\d{6,7}|[4-6]\\\\d{6,8}\",[7,8,9,10],[[\"(\\\\d{2})(\\\\d{5,7})\",\"$1 $2\",[\"[24-6]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"[17]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"]],\"0\"],\"KG\":[\"996\",\"00\",\"8\\\\d{9}|[235-9]\\\\d{8}\",[9,10],[[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"3(?:1[346]|[24-79])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[235-79]|88\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d)(\\\\d{2,3})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"KH\":[\"855\",\"00[14-9]\",\"1\\\\d{9}|[1-9]\\\\d{7,8}\",[8,9,10],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[1-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]]],\"0\"],\"KI\":[\"686\",\"00\",\"(?:[37]\\\\d|6[0-79])\\\\d{6}|(?:[2-48]\\\\d|50)\\\\d{3}\",[5,8],0,\"0\"],\"KM\":[\"269\",\"00\",\"[3478]\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[3478]\"]]]],\"KN\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-7]\\\\d{6})$|1\",\"869$1\",0,\"869\"],\"KP\":[\"850\",\"00|99\",\"85\\\\d{6}|(?:19\\\\d|[2-7])\\\\d{7}\",[8,10],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-7]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"]],\"0\"],\"KR\":[\"82\",\"00(?:[125689]|3(?:[46]5|91)|7(?:00|27|3|55|6[126]))\",\"00[1-9]\\\\d{8,11}|(?:[12]|5\\\\d{3})\\\\d{7}|[13-6]\\\\d{9}|(?:[1-6]\\\\d|80)\\\\d{7}|[3-6]\\\\d{4,5}|(?:00|7)0\\\\d{8}\",[5,6,8,9,10,11,12,13,14],[[\"(\\\\d{2})(\\\\d{3,4})\",\"$1-$2\",[\"(?:3[1-3]|[46][1-4]|5[1-5])1\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"1\"]],[\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\",\"$1-$2-$3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[36]0|8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1-$2-$3\",[\"[1346]|5[1-5]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1-$2-$3\",[\"[57]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5})(\\\\d{4})\",\"$1-$2-$3\",[\"5\"],\"0$1\"]],\"0\",0,\"0(8(?:[1-46-8]|5\\\\d\\\\d))?\"],\"KW\":[\"965\",\"00\",\"18\\\\d{5}|(?:[2569]\\\\d|41)\\\\d{6}\",[7,8],[[\"(\\\\d{4})(\\\\d{3,4})\",\"$1 $2\",[\"[169]|2(?:[235]|4[1-35-9])|52\"]],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[245]\"]]]],\"KY\":[\"1\",\"011\",\"(?:345|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"345$1\",0,\"345\"],\"KZ\":[\"7\",\"810\",\"(?:33622|8\\\\d{8})\\\\d{5}|[78]\\\\d{9}\",[10,14],0,\"8\",0,0,0,0,\"33|7\",0,\"8~10\"],\"LA\":[\"856\",\"00\",\"[23]\\\\d{9}|3\\\\d{8}|(?:[235-8]\\\\d|41)\\\\d{6}\",[8,9,10],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2[13]|3[14]|[4-8]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"3\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"[23]\"],\"0$1\"]],\"0\"],\"LB\":[\"961\",\"00\",\"[27-9]\\\\d{7}|[13-9]\\\\d{6}\",[7,8],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[13-69]|7(?:[2-57]|62|8[0-6]|9[04-9])|8[02-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[27-9]\"]]],\"0\"],\"LC\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|758|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-8]\\\\d{6})$|1\",\"758$1\",0,\"758\"],\"LI\":[\"423\",\"00\",\"[68]\\\\d{8}|(?:[2378]\\\\d|90)\\\\d{5}\",[7,9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[2379]|8(?:0[09]|7)\",\"[2379]|8(?:0(?:02|9)|7)\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"69\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6\"]]],\"0\",0,\"(1001)|0\"],\"LK\":[\"94\",\"00\",\"[1-9]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[1-689]\"],\"0$1\"]],\"0\"],\"LR\":[\"231\",\"00\",\"(?:[2457]\\\\d|33|88)\\\\d{7}|(?:2\\\\d|[4-6])\\\\d{6}\",[7,8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"4[67]|[56]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-578]\"],\"0$1\"]],\"0\"],\"LS\":[\"266\",\"00\",\"(?:[256]\\\\d\\\\d|800)\\\\d{5}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2568]\"]]]],\"LT\":[\"370\",\"00\",\"(?:[3469]\\\\d|52|[78]0)\\\\d{6}\",[8],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"52[0-7]\"],\"(0-$1)\",1],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[7-9]\"],\"0 $1\",1],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"37|4(?:[15]|6[1-8])\"],\"(0-$1)\",1],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[3-6]\"],\"(0-$1)\",1]],\"0\",0,\"[08]\"],\"LU\":[\"352\",\"00\",\"35[013-9]\\\\d{4,8}|6\\\\d{8}|35\\\\d{2,4}|(?:[2457-9]\\\\d|3[0-46-9])\\\\d{2,9}\",[4,5,6,7,8,9,10,11],[[\"(\\\\d{2})(\\\\d{3})\",\"$1 $2\",[\"2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"20[2-689]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\",\"$1 $2 $3 $4\",[\"2(?:[0367]|4[3-8])\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"80[01]|90[015]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"20\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\",\"$1 $2 $3 $4 $5\",[\"2(?:[0367]|4[3-8])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,5})\",\"$1 $2 $3 $4\",[\"[3-57]|8[13-9]|9(?:0[89]|[2-579])|(?:2|80)[2-9]\"]]],0,0,\"(15(?:0[06]|1[12]|[35]5|4[04]|6[26]|77|88|99)\\\\d)\"],\"LV\":[\"371\",\"00\",\"(?:[268]\\\\d|90)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[269]|8[01]\"]]]],\"LY\":[\"218\",\"00\",\"[2-9]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{7})\",\"$1-$2\",[\"[2-9]\"],\"0$1\"]],\"0\"],\"MA\":[\"212\",\"00\",\"[5-8]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"5[45]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5})\",\"$1-$2\",[\"5(?:2[2-46-9]|3[3-9]|9)|8(?:0[89]|92)\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1-$2\",[\"8\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1-$2\",[\"[5-7]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"5(?:2(?:[0-25-79]\\\\d|3[1-578]|4[02-46-8]|8[0235-7])|3(?:[0-47]\\\\d|5[02-9]|6[02-8]|8[014-9]|9[3-9])|(?:4[067]|5[03])\\\\d)\\\\d{5}\"],[\"(?:6(?:[0-79]\\\\d|8[0-247-9])|7(?:[0167]\\\\d|2[0-467]|5[0-3]|8[0-7]))\\\\d{6}\"],[\"80[0-7]\\\\d{6}\"],[\"89\\\\d{7}\"],0,0,0,0,[\"(?:592(?:4[0-2]|93)|80[89]\\\\d\\\\d)\\\\d{4}\"]]],\"MC\":[\"377\",\"00\",\"(?:[3489]|6\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"4\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[389]\"]],[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"6\"],\"0$1\"]],\"0\"],\"MD\":[\"373\",\"00\",\"(?:[235-7]\\\\d|[89]0)\\\\d{6}\",[8],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"22|3\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[25-7]\"],\"0$1\"]],\"0\"],\"ME\":[\"382\",\"00\",\"(?:20|[3-79]\\\\d)\\\\d{6}|80\\\\d{6,7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-9]\"],\"0$1\"]],\"0\"],\"MF\":[\"590\",\"00\",\"(?:590\\\\d|7090)\\\\d{5}|(?:69|80|9\\\\d)\\\\d{7}\",[9],0,\"0\",0,0,0,0,0,[[\"590(?:0[079]|[14]3|[27][79]|3[03-7]|5[0-268]|87)\\\\d{4}\"],[\"(?:69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5])|4(?:0[89]|1[2-6]|9\\\\d)|6(?:1[016-9]|5[0-4]|[67]\\\\d))|7090[0-4])\\\\d{4}\"],[\"80[0-5]\\\\d{6}\"],0,0,0,0,0,[\"9(?:(?:39[5-7]|76[018])\\\\d|475[0-6])\\\\d{4}\"]]],\"MG\":[\"261\",\"00\",\"[23]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[23]\"],\"0$1\"]],\"0\",0,\"([24-9]\\\\d{6})$|0\",\"20$1\"],\"MH\":[\"692\",\"011\",\"329\\\\d{4}|(?:[256]\\\\d|45)\\\\d{5}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[2-6]\"]]],\"1\"],\"MK\":[\"389\",\"00\",\"[2-578]\\\\d{7}\",[8],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2|34[47]|4(?:[37]7|5[47]|64)\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[347]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[58]\"],\"0$1\"]],\"0\"],\"ML\":[\"223\",\"00\",\"[24-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[24-9]\"]]]],\"MM\":[\"95\",\"00\",\"1\\\\d{5,7}|95\\\\d{6}|(?:[4-7]|9[0-46-9])\\\\d{6,8}|(?:2|8\\\\d)\\\\d{5,8}\",[6,7,8,9,10],[[\"(\\\\d)(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"16|2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"4(?:[2-46]|5[3-5])|5|6(?:[1-689]|7[235-7])|7(?:[0-4]|5[2-7])|8[1-5]|(?:60|86)[23]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[12]|452|678|86\",\"[12]|452|6788|86\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[4-7]|8[1-35]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4,6})\",\"$1 $2 $3\",[\"9(?:2[0-4]|[35-9]|4[137-9])\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"92\"],\"0$1\"],[\"(\\\\d)(\\\\d{5})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"]],\"0\"],\"MN\":[\"976\",\"001\",\"[12]\\\\d{7,9}|[5-9]\\\\d{7}\",[8,9,10],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[12]1\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[5-9]\"]],[\"(\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"[12]2[1-3]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5,6})\",\"$1 $2\",[\"[12](?:27|3[2-8]|4[2-68]|5[1-4689])\",\"[12](?:27|3[2-8]|4[2-68]|5[1-4689])[0-3]\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{4,5})\",\"$1 $2\",[\"[12]\"],\"0$1\"]],\"0\"],\"MO\":[\"853\",\"00\",\"0800\\\\d{3}|(?:28|[68]\\\\d)\\\\d{6}\",[7,8],[[\"(\\\\d{4})(\\\\d{3})\",\"$1 $2\",[\"0\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[268]\"]]]],\"MP\":[\"1\",\"011\",\"[58]\\\\d{9}|(?:67|90)0\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"670$1\",0,\"670\"],\"MQ\":[\"596\",\"00\",\"(?:596\\\\d|7091)\\\\d{5}|(?:69|[89]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[5-79]|8(?:0[6-9]|[36])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"MR\":[\"222\",\"00\",\"(?:[2-4]\\\\d\\\\d|800)\\\\d{5}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-48]\"]]]],\"MS\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|664|900)\\\\d{7}\",[10],0,\"1\",0,\"([34]\\\\d{6})$|1\",\"664$1\",0,\"664\"],\"MT\":[\"356\",\"00\",\"3550\\\\d{4}|(?:[2579]\\\\d\\\\d|800)\\\\d{5}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2357-9]\"]]]],\"MU\":[\"230\",\"0(?:0|[24-7]0|3[03])\",\"(?:[57]|8\\\\d\\\\d)\\\\d{7}|[2-468]\\\\d{6}\",[7,8,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-46]|8[013]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[57]\"]],[\"(\\\\d{5})(\\\\d{5})\",\"$1 $2\",[\"8\"]]],0,0,0,0,0,0,0,\"020\"],\"MV\":[\"960\",\"0(?:0|19)\",\"(?:800|9[0-57-9]\\\\d)\\\\d{7}|[34679]\\\\d{6}\",[7,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[34679]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"]]],0,0,0,0,0,0,0,\"00\"],\"MW\":[\"265\",\"00\",\"(?:[1289]\\\\d|31|77)\\\\d{7}|1\\\\d{6}\",[7,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1[2-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[137-9]\"],\"0$1\"]],\"0\"],\"MX\":[\"52\",\"0[09]\",\"[2-9]\\\\d{9}\",[10],[[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"33|5[56]|81\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-9]\"]]],0,0,0,0,0,0,0,\"00\"],\"MY\":[\"60\",\"00\",\"1\\\\d{8,9}|(?:3\\\\d|[4-9])\\\\d{7}\",[8,9,10],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3\",[\"[4-79]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1-$2 $3\",[\"1(?:[02469]|[378][1-9]|53)|8\",\"1(?:[02469]|[37][1-9]|53|8(?:[1-46-9]|5[7-9]))|8\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1-$2 $3\",[\"3\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1-$2-$3-$4\",[\"1(?:[367]|80)\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3\",[\"15\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1-$2 $3\",[\"1\"],\"0$1\"]],\"0\"],\"MZ\":[\"258\",\"00\",\"(?:2|8\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2|8[2-79]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]]]],\"NA\":[\"264\",\"00\",\"[68]\\\\d{7,8}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"88\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"6\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"87\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"],\"0$1\"]],\"0\"],\"NC\":[\"687\",\"00\",\"(?:050|[2-57-9]\\\\d\\\\d)\\\\d{3}\",[6],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1.$2.$3\",[\"[02-57-9]\"]]]],\"NE\":[\"227\",\"00\",\"[027-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"08\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[089]|2[013]|7[0467]\"]]]],\"NF\":[\"672\",\"00\",\"[13]\\\\d{5}\",[6],[[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"1[0-3]\"]],[\"(\\\\d)(\\\\d{5})\",\"$1 $2\",[\"[13]\"]]],0,0,\"([0-258]\\\\d{4})$\",\"3$1\"],\"NG\":[\"234\",\"009\",\"(?:20|9\\\\d)\\\\d{8}|[78]\\\\d{9,13}\",[10,11,12,13,14],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[7-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"20[129]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\",\"$1 $2 $3\",[\"[78]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5})(\\\\d{5,6})\",\"$1 $2 $3\",[\"[78]\"],\"0$1\"]],\"0\"],\"NI\":[\"505\",\"00\",\"(?:1800|[25-8]\\\\d{3})\\\\d{4}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[125-8]\"]]]],\"NL\":[\"31\",\"00\",\"(?:[124-7]\\\\d\\\\d|3(?:[02-9]\\\\d|1[0-8]))\\\\d{6}|8\\\\d{6,9}|9\\\\d{6,10}|1\\\\d{4,5}\",[5,6,7,8,9,10,11],[[\"(\\\\d{3})(\\\\d{4,7})\",\"$1 $2\",[\"[89]0\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"66\"],\"0$1\"],[\"(\\\\d)(\\\\d{8})\",\"$1 $2\",[\"6\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1[16-8]|2[259]|3[124]|4[17-9]|5[124679]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-578]|91\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\",\"$1 $2 $3\",[\"9\"],\"0$1\"]],\"0\"],\"NO\":[\"47\",\"00\",\"(?:0|[2-9]\\\\d{3})\\\\d{4}\",[5,8],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-79]\"]]],0,0,0,0,0,\"[02-689]|7[0-8]\"],\"NP\":[\"977\",\"00\",\"(?:1\\\\d|9)\\\\d{9}|[1-9]\\\\d{7}\",[8,10,11],[[\"(\\\\d)(\\\\d{7})\",\"$1-$2\",[\"1[2-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1-$2\",[\"1[01]|[2-8]|9(?:[1-59]|[67][2-6])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1-$2\",[\"9\"]]],\"0\"],\"NR\":[\"674\",\"00\",\"(?:222|444|(?:55|8\\\\d)\\\\d|666|777|999)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[24-9]\"]]]],\"NU\":[\"683\",\"00\",\"(?:[4-7]|888\\\\d)\\\\d{3}\",[4,7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"8\"]]]],\"NZ\":[\"64\",\"0(?:0|161)\",\"[1289]\\\\d{9}|50\\\\d{5}(?:\\\\d{2,3})?|[27-9]\\\\d{7,8}|(?:[34]\\\\d|6[0-35-9])\\\\d{6}|8\\\\d{4,6}\",[5,6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{3,8})\",\"$1 $2\",[\"8[1-79]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"50[036-8]|8|90\",\"50(?:[0367]|88)|8|90\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"24|[346]|7[2-57-9]|9[2-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2(?:10|74)|[589]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"1|2[028]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,5})\",\"$1 $2 $3\",[\"2(?:[169]|7[0-35-9])|7\"],\"0$1\"]],\"0\",0,0,0,0,0,0,\"00\"],\"OM\":[\"968\",\"00\",\"(?:1505|[279]\\\\d{3}|500)\\\\d{4}|800\\\\d{5,6}\",[7,8,9],[[\"(\\\\d{3})(\\\\d{4,6})\",\"$1 $2\",[\"[58]\"]],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"2\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[179]\"]]]],\"PA\":[\"507\",\"00\",\"(?:00800|8\\\\d{3})\\\\d{6}|[68]\\\\d{7}|[1-57-9]\\\\d{6}\",[7,8,10,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[1-57-9]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"[68]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]]]],\"PE\":[\"51\",\"00|19(?:1[124]|77|90)00\",\"(?:[14-8]|9\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"80\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"1\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[4-8]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"]]],\"0\",0,0,0,0,0,0,\"00\",\" Anexo \"],\"PF\":[\"689\",\"00\",\"4\\\\d{5}(?:\\\\d{2})?|8\\\\d{7,8}\",[6,8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"44\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"4|8[7-9]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"]]]],\"PG\":[\"675\",\"00|140[1-3]\",\"(?:180|[78]\\\\d{3})\\\\d{4}|(?:[2-589]\\\\d|64)\\\\d{5}\",[7,8],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"18|[2-69]|85\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[78]\"]]],0,0,0,0,0,0,0,\"00\"],\"PH\":[\"63\",\"00\",\"(?:[2-7]|9\\\\d)\\\\d{8}|2\\\\d{5}|(?:1800|8)\\\\d{7,9}\",[6,8,9,10,11,12,13],[[\"(\\\\d)(\\\\d{5})\",\"$1 $2\",[\"2\"],\"(0$1)\"],[\"(\\\\d{4})(\\\\d{4,6})\",\"$1 $2\",[\"3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|544|88[245]|(?:52|64|86)2\",\"3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))\"],\"(0$1)\"],[\"(\\\\d{5})(\\\\d{4})\",\"$1 $2\",[\"346|4(?:27|9[35])|883\",\"3469|4(?:279|9(?:30|56))|8834\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[3-7]|8[2-8]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d{4})(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"1\"]]],\"0\"],\"PK\":[\"92\",\"00\",\"122\\\\d{6}|[24-8]\\\\d{10,11}|9(?:[013-9]\\\\d{8,10}|2(?:[01]\\\\d\\\\d|2(?:[06-8]\\\\d|1[01]))\\\\d{7})|(?:[2-8]\\\\d{3}|92(?:[0-7]\\\\d|8[1-9]))\\\\d{6}|[24-9]\\\\d{8}|[89]\\\\d{7}\",[8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{2,7})\",\"$1 $2 $3\",[\"[89]0\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"1\"]],[\"(\\\\d{3})(\\\\d{6,7})\",\"$1 $2\",[\"2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8])\",\"9(?:2[3-8]|98)|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:22|3[27-9]|4[2-6]|6[3569]|9[25-7]))[2-9]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{7,8})\",\"$1 $2\",[\"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]\"],\"(0$1)\"],[\"(\\\\d{5})(\\\\d{5})\",\"$1 $2\",[\"58\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"3\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"[24-9]\"],\"(0$1)\"]],\"0\"],\"PL\":[\"48\",\"00\",\"(?:6|8\\\\d\\\\d)\\\\d{7}|[1-9]\\\\d{6}(?:\\\\d{2})?|[26]\\\\d{5}\",[6,7,8,9,10],[[\"(\\\\d{5})\",\"$1\",[\"19\"]],[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"11|20|64\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])1\",\"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])19\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"64\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"21|39|45|5[0137]|6[0469]|7[02389]|8(?:0[14]|8)\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"1[2-8]|[2-7]|8[1-79]|9[145]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"8\"]]]],\"PM\":[\"508\",\"00\",\"[45]\\\\d{5}|(?:708|8\\\\d\\\\d)\\\\d{6}\",[6,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[45]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"7\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"PR\":[\"1\",\"011\",\"(?:[589]\\\\d\\\\d|787)\\\\d{7}\",[10],0,\"1\",0,0,0,0,\"787|939\"],\"PS\":[\"970\",\"00\",\"[2489]2\\\\d{6}|(?:1\\\\d|5)\\\\d{8}\",[8,9,10],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2489]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"5\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]]],\"0\"],\"PT\":[\"351\",\"00\",\"1693\\\\d{5}|(?:[26-9]\\\\d|30)\\\\d{7}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2[12]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"16|[236-9]\"]]]],\"PW\":[\"680\",\"01[12]\",\"(?:[24-8]\\\\d\\\\d|345|900)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-9]\"]]]],\"PY\":[\"595\",\"00\",\"59\\\\d{4,6}|9\\\\d{5,10}|(?:[2-46-8]\\\\d|5[0-8])\\\\d{4,7}\",[6,7,8,9,10,11],[[\"(\\\\d{3})(\\\\d{3,6})\",\"$1 $2\",[\"[2-9]0\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{4,5})\",\"$1 $2\",[\"2[279]|3[13-5]|4[359]|5|6(?:[34]|7[1-46-8])|7[46-8]|85\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2[14-68]|3[26-9]|4[1246-8]|6(?:1|75)|7[1-35]|8[1-36]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"87\"]],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"9(?:[5-79]|8[1-7])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-8]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"]]],\"0\"],\"QA\":[\"974\",\"00\",\"800\\\\d{4}|(?:2|800)\\\\d{6}|(?:0080|[3-7])\\\\d{7}\",[7,8,9,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"2[136]|8\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[3-7]\"]]]],\"RE\":[\"262\",\"00\",\"709\\\\d{6}|(?:26|[689]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[26-9]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"26(?:2\\\\d\\\\d|3(?:0\\\\d|1[0-6]))\\\\d{4}\"],[\"(?:69(?:2\\\\d\\\\d|3(?:[06][0-6]|1[0-3]|2[0-2]|3[0-39]|4\\\\d|5[0-5]|7[0-37]|8[0-8]|9[0-479]))|7092[0-3])\\\\d{4}\"],[\"80\\\\d{7}\"],[\"89[1-37-9]\\\\d{6}\"],0,0,0,0,[\"9(?:399[0-3]|479[0-6]|76(?:2[278]|3[0-37]))\\\\d{4}\"],[\"8(?:1[019]|2[0156]|84|90)\\\\d{6}\"]]],\"RO\":[\"40\",\"00\",\"(?:[236-8]\\\\d|90)\\\\d{7}|[23]\\\\d{5}\",[6,9],[[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"2[3-6]\",\"2[3-6]\\\\d9\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"219|31\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[23]1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[236-9]\"],\"0$1\"]],\"0\",0,0,0,0,0,0,0,\" int \"],\"RS\":[\"381\",\"00\",\"38[02-9]\\\\d{6,9}|6\\\\d{7,9}|90\\\\d{4,8}|38\\\\d{5,6}|(?:7\\\\d\\\\d|800)\\\\d{3,9}|(?:[12]\\\\d|3[0-79])\\\\d{5,10}\",[6,7,8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{3,9})\",\"$1 $2\",[\"(?:2[389]|39)0|[7-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5,10})\",\"$1 $2\",[\"[1-36]\"],\"0$1\"]],\"0\"],\"RU\":[\"7\",\"810\",\"8\\\\d{13}|[347-9]\\\\d{9}\",[10,14],[[\"(\\\\d{4})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"7(?:1[0-8]|2[1-9])\",\"7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:1[23]|[2-9]2))\",\"7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:13[03-69]|62[013-9]))|72[1-57-9]2\"],\"8 ($1)\",1],[\"(\\\\d{5})(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"7(?:1[0-68]|2[1-9])\",\"7(?:1(?:[06][3-6]|[18]|2[35]|[3-5][3-5])|2(?:[13][3-5]|[24-689]|7[457]))\",\"7(?:1(?:0(?:[356]|4[023])|[18]|2(?:3[013-9]|5)|3[45]|43[013-79]|5(?:3[1-8]|4[1-7]|5)|6(?:3[0-35-9]|[4-6]))|2(?:1(?:3[178]|[45])|[24-689]|3[35]|7[457]))|7(?:14|23)4[0-8]|71(?:33|45)[1-79]\"],\"8 ($1)\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"8 ($1)\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"[349]|8(?:[02-7]|1[1-8])\"],\"8 ($1)\",1],[\"(\\\\d{4})(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"8\"],\"8 ($1)\"]],\"8\",0,0,0,0,\"3[04-689]|[489]\",0,\"8~10\"],\"RW\":[\"250\",\"00\",\"(?:06|[27]\\\\d\\\\d|[89]00)\\\\d{6}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"0\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[7-9]\"],\"0$1\"]],\"0\"],\"SA\":[\"966\",\"00\",\"(?:[15]\\\\d|800|92)\\\\d{7}\",[9,10],[[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"9\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"5\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]]],\"0\"],\"SB\":[\"677\",\"0[01]\",\"[6-9]\\\\d{6}|[1-6]\\\\d{4}\",[5,7],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"6[89]|7|8[4-9]|9(?:[1-8]|9[0-8])\"]]]],\"SC\":[\"248\",\"010|0[0-2]\",\"(?:[2489]\\\\d|64)\\\\d{5}\",[7],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[246]|9[57]\"]]],0,0,0,0,0,0,0,\"00\"],\"SD\":[\"249\",\"00\",\"[19]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[19]\"],\"0$1\"]],\"0\"],\"SE\":[\"46\",\"00\",\"(?:[26]\\\\d\\\\d|9)\\\\d{9}|[1-9]\\\\d{8}|[1-689]\\\\d{7}|[1-4689]\\\\d{6}|2\\\\d{5}\",[6,7,8,9,10,12],[[\"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})\",\"$1-$2 $3\",[\"20\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"9(?:00|39|44|9)\"],\"0$1\",0,\"$1 $2\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})\",\"$1-$2 $3\",[\"[12][136]|3[356]|4[0246]|6[03]|90[1-9]\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d)(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"8\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2,3})(\\\\d{2})\",\"$1-$2 $3\",[\"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[125689]|4[02-57]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d{3})(\\\\d{2,3})(\\\\d{3})\",\"$1-$2 $3\",[\"9(?:00|39|44)\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"1[13689]|2[0136]|3[1356]|4[0246]|54|6[03]|90[1-9]\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"10|7\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"8\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"[13-5]|2(?:[247-9]|5[0138])|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1-$2 $3 $4\",[\"9\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4 $5\",[\"[26]\"],\"0$1\",0,\"$1 $2 $3 $4 $5\"]],\"0\"],\"SG\":[\"65\",\"0[0-3]\\\\d\",\"(?:(?:1\\\\d|8)\\\\d\\\\d|7000)\\\\d{7}|[3689]\\\\d{7}\",[8,10,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[369]|8(?:0[1-9]|[1-9])\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{4})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"7\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]]]],\"SH\":[\"290\",\"00\",\"(?:[256]\\\\d|8)\\\\d{3}\",[4,5],0,0,0,0,0,0,\"[256]\"],\"SI\":[\"386\",\"00|10(?:22|66|88|99)\",\"[1-7]\\\\d{7}|8\\\\d{4,7}|90\\\\d{4,6}\",[5,6,7,8],[[\"(\\\\d{2})(\\\\d{3,6})\",\"$1 $2\",[\"8[09]|9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"59|8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[37][01]|4[0139]|51|6\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[1-57]\"],\"(0$1)\"]],\"0\",0,0,0,0,0,0,\"00\"],\"SJ\":[\"47\",\"00\",\"0\\\\d{4}|(?:[489]\\\\d|79)\\\\d{6}\",[5,8],0,0,0,0,0,0,\"79\"],\"SK\":[\"421\",\"00\",\"[2-689]\\\\d{8}|[2-59]\\\\d{6}|[2-5]\\\\d{5}\",[6,7,9],[[\"(\\\\d)(\\\\d{2})(\\\\d{3,4})\",\"$1 $2 $3\",[\"21\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"[3-5][1-8]1\",\"[3-5][1-8]1[67]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1/$2 $3 $4\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[689]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1/$2 $3 $4\",[\"[3-5]\"],\"0$1\"]],\"0\"],\"SL\":[\"232\",\"00\",\"(?:[237-9]\\\\d|66)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[236-9]\"],\"(0$1)\"]],\"0\"],\"SM\":[\"378\",\"00\",\"(?:0549|[5-7]\\\\d)\\\\d{6}\",[8,10],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[5-7]\"]],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"0\"]]],0,0,\"([89]\\\\d{5})$\",\"0549$1\"],\"SN\":[\"221\",\"00\",\"(?:[378]\\\\d|93)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[379]\"]]]],\"SO\":[\"252\",\"00\",\"[346-9]\\\\d{8}|[12679]\\\\d{7}|[1-5]\\\\d{6}|[1348]\\\\d{5}\",[6,7,8,9],[[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"8[125]\"]],[\"(\\\\d{6})\",\"$1\",[\"[134]\"]],[\"(\\\\d)(\\\\d{6})\",\"$1 $2\",[\"[15]|2[0-79]|3[0-46-8]|4[0-7]\"]],[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"(?:2|90)4|[67]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[348]|64|79|90\"]],[\"(\\\\d{2})(\\\\d{5,7})\",\"$1 $2\",[\"1|28|6[0-35-9]|7[67]|9[2-9]\"]]],\"0\"],\"SR\":[\"597\",\"00\",\"(?:[2-5]|68|[78]\\\\d|90)\\\\d{5}\",[6,7],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1-$2-$3\",[\"56\"]],[\"(\\\\d{3})(\\\\d{3})\",\"$1-$2\",[\"[2-5]\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[6-9]\"]]]],\"SS\":[\"211\",\"00\",\"[19]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[19]\"],\"0$1\"]],\"0\"],\"ST\":[\"239\",\"00\",\"(?:22|9\\\\d)\\\\d{5}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[29]\"]]]],\"SV\":[\"503\",\"00\",\"[267]\\\\d{7}|(?:80\\\\d|900)\\\\d{4}(?:\\\\d{4})?\",[7,8,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[89]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[267]\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"]]]],\"SX\":[\"1\",\"011\",\"7215\\\\d{6}|(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"(5\\\\d{6})$|1\",\"721$1\",0,\"721\"],\"SY\":[\"963\",\"00\",\"[1-39]\\\\d{8}|[1-5]\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[1-5]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"],\"0$1\",1]],\"0\"],\"SZ\":[\"268\",\"00\",\"0800\\\\d{4}|(?:[237]\\\\d|900)\\\\d{6}\",[8,9],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[0237]\"]],[\"(\\\\d{5})(\\\\d{4})\",\"$1 $2\",[\"9\"]]]],\"TA\":[\"290\",\"00\",\"8\\\\d{3}\",[4],0,0,0,0,0,0,\"8\"],\"TC\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|649|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-479]\\\\d{6})$|1\",\"649$1\",0,\"649\"],\"TD\":[\"235\",\"00|16\",\"(?:22|[689]\\\\d|77)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[26-9]\"]]],0,0,0,0,0,0,0,\"00\"],\"TG\":[\"228\",\"00\",\"[279]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[279]\"]]]],\"TH\":[\"66\",\"00[1-9]\",\"(?:001800|[2-57]|[689]\\\\d)\\\\d{7}|1\\\\d{7,9}\",[8,9,10,13],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[13-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]]],\"0\"],\"TJ\":[\"992\",\"810\",\"[0-57-9]\\\\d{8}\",[9],[[\"(\\\\d{6})(\\\\d)(\\\\d{2})\",\"$1 $2 $3\",[\"331\",\"3317\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"44[02-479]|[34]7\"]],[\"(\\\\d{4})(\\\\d)(\\\\d{4})\",\"$1 $2 $3\",[\"3(?:[1245]|3[12])\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[0-57-9]\"]]],0,0,0,0,0,0,0,\"8~10\"],\"TK\":[\"690\",\"00\",\"[2-47]\\\\d{3,6}\",[4,5,6,7]],\"TL\":[\"670\",\"00\",\"7\\\\d{7}|(?:[2-47]\\\\d|[89]0)\\\\d{5}\",[7,8],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-489]|70\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"7\"]]]],\"TM\":[\"993\",\"810\",\"(?:[1-6]\\\\d|71)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"12\"],\"(8 $1)\"],[\"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"[1-5]\"],\"(8 $1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[67]\"],\"8 $1\"]],\"8\",0,0,0,0,0,0,\"8~10\"],\"TN\":[\"216\",\"00\",\"[2-57-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-57-9]\"]]]],\"TO\":[\"676\",\"00\",\"(?:0800|(?:[5-8]\\\\d\\\\d|999)\\\\d)\\\\d{3}|[2-8]\\\\d{4}\",[5,7],[[\"(\\\\d{2})(\\\\d{3})\",\"$1-$2\",[\"[2-4]|50|6[09]|7[0-24-69]|8[05]\"]],[\"(\\\\d{4})(\\\\d{3})\",\"$1 $2\",[\"0\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[5-9]\"]]]],\"TR\":[\"90\",\"00\",\"4\\\\d{6}|8\\\\d{11,12}|(?:[2-58]\\\\d\\\\d|900)\\\\d{7}\",[7,10,12,13],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"512|8[01589]|90\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"5(?:[0-59]|61)\",\"5(?:[0-59]|61[06])\",\"5(?:[0-59]|61[06]1)\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[24][1-8]|3[1-9]\"],\"(0$1)\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{6,7})\",\"$1 $2 $3\",[\"80\"],\"0$1\",1]],\"0\"],\"TT\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-46-8]\\\\d{6})$|1\",\"868$1\",0,\"868\"],\"TV\":[\"688\",\"00\",\"(?:2|7\\\\d\\\\d|90)\\\\d{4}\",[5,6,7],[[\"(\\\\d{2})(\\\\d{3})\",\"$1 $2\",[\"2\"]],[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"90\"]],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"7\"]]]],\"TW\":[\"886\",\"0(?:0[25-79]|19)\",\"[2-689]\\\\d{8}|7\\\\d{9,10}|[2-8]\\\\d{7}|2\\\\d{6}\",[7,8,9,10,11],[[\"(\\\\d{2})(\\\\d)(\\\\d{4})\",\"$1 $2 $3\",[\"202\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[258]0\"],\"0$1\"],[\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"[23568]|4(?:0[02-48]|[1-47-9])|7[1-9]\",\"[23568]|4(?:0[2-48]|[1-47-9])|(?:400|7)[1-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[49]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4,5})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\",0,0,0,0,0,0,0,\"#\"],\"TZ\":[\"255\",\"00[056]\",\"(?:[25-8]\\\\d|41|90)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[24]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"5\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[67]\"],\"0$1\"]],\"0\"],\"UA\":[\"380\",\"00\",\"[89]\\\\d{9}|[3-9]\\\\d{8}\",[9,10],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6[12][29]|(?:3[1-8]|4[136-8]|5[12457]|6[49])2|(?:56|65)[24]\",\"6[12][29]|(?:35|4[1378]|5[12457]|6[49])2|(?:56|65)[24]|(?:3[1-46-8]|46)2[013-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6[0135689]|7[4-6])|6(?:[12][3-7]|[459])\",\"3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6(?:[015689]|3[02389])|7[4-6])|6(?:[12][3-7]|[459])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[3-7]|89|9[1-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"]],\"0\",0,0,0,0,0,0,\"0~0\"],\"UG\":[\"256\",\"00[057]\",\"800\\\\d{6}|(?:[29]0|[347]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"202\",\"2024\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"[27-9]|4(?:6[45]|[7-9])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"[34]\"],\"0$1\"]],\"0\"],\"US\":[\"1\",\"011\",\"[2-9]\\\\d{9}|3\\\\d{6}\",[10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"310\"],0,1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",[\"[2-9]\"],0,1,\"$1-$2-$3\"]],\"1\",0,0,0,0,0,[[\"(?:3052(?:0[0-8]|[1-9]\\\\d)|5056(?:[0-35-9]\\\\d|4[0-68]))\\\\d{4}|(?:2742|305[3-9]|472[247-9]|505[2-57-9]|983[2-47-9])\\\\d{6}|(?:2(?:0[1-35-9]|1[02-9]|2[03-57-9]|3[1459]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-47-9]|1[02-9]|2[0135-79]|3[0-24679]|4[167]|5[0-2]|6[01349]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[023578]|58|6[349]|7[0589]|8[04])|5(?:0[1-47-9]|1[0235-8]|20|3[0149]|4[01]|5[179]|6[1-47]|7[0-5]|8[0256])|6(?:0[1-35-9]|1[024-9]|2[03689]|3[016]|4[0156]|5[01679]|6[0-279]|78|8[0-29])|7(?:0[1-46-8]|1[2-9]|2[04-8]|3[0-247]|4[037]|5[47]|6[02359]|7[0-59]|8[156])|8(?:0[1-68]|1[02-8]|2[0168]|3[0-2589]|4[03578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[01357-9]|5[12469]|7[0-389]|8[04-69]))[2-9]\\\\d{6}\"],[\"\"],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\"],[\"900[2-9]\\\\d{6}\"],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\"],0,0,0,[\"305209\\\\d{4}\"]]],\"UY\":[\"598\",\"0(?:0|1[3-9]\\\\d)\",\"0004\\\\d{2,9}|[1249]\\\\d{7}|(?:[49]\\\\d|80)\\\\d{5}\",[6,7,8,9,10,11,12,13],[[\"(\\\\d{3})(\\\\d{3,4})\",\"$1 $2\",[\"0\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[49]0|8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[124]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2,4})\",\"$1 $2 $3\",[\"0\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{2,4})\",\"$1 $2 $3 $4\",[\"0\"]]],\"0\",0,0,0,0,0,0,\"00\",\" int. \"],\"UZ\":[\"998\",\"00\",\"(?:20|33|[5-9]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[235-9]\"]]]],\"VA\":[\"39\",\"00\",\"0\\\\d{5,10}|3[0-8]\\\\d{7,10}|55\\\\d{8}|8\\\\d{5}(?:\\\\d{2,4})?|(?:1\\\\d|39)\\\\d{7,8}\",[6,7,8,9,10,11,12],0,0,0,0,0,0,\"06698\"],\"VC\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|784|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-7]\\\\d{6})$|1\",\"784$1\",0,\"784\"],\"VE\":[\"58\",\"00\",\"[68]00\\\\d{7}|(?:[24]\\\\d|[59]0)\\\\d{8}\",[10],[[\"(\\\\d{3})(\\\\d{7})\",\"$1-$2\",[\"[24-689]\"],\"0$1\"]],\"0\"],\"VG\":[\"1\",\"011\",\"(?:284|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-578]\\\\d{6})$|1\",\"284$1\",0,\"284\"],\"VI\":[\"1\",\"011\",\"[58]\\\\d{9}|(?:34|90)0\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"340$1\",0,\"340\"],\"VN\":[\"84\",\"00\",\"[12]\\\\d{9}|[135-9]\\\\d{8}|[16]\\\\d{7}|[16-8]\\\\d{6}\",[7,8,9,10],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"80\"],\"0$1\",1],[\"(\\\\d{4})(\\\\d{4,6})\",\"$1 $2\",[\"1\"],0,1],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"6\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[357-9]\"],\"0$1\",1],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2[48]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"],\"0$1\",1]],\"0\"],\"VU\":[\"678\",\"00\",\"[57-9]\\\\d{6}|(?:[238]\\\\d|48)\\\\d{3}\",[5,7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[57-9]\"]]]],\"WF\":[\"681\",\"00\",\"(?:40|72|8\\\\d{4})\\\\d{4}|[89]\\\\d{5}\",[6,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[47-9]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"]]]],\"WS\":[\"685\",\"0\",\"(?:[2-6]|8\\\\d{5})\\\\d{4}|[78]\\\\d{6}|[68]\\\\d{5}\",[5,6,7,10],[[\"(\\\\d{5})\",\"$1\",[\"[2-5]|6[1-9]\"]],[\"(\\\\d{3})(\\\\d{3,7})\",\"$1 $2\",[\"[68]\"]],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"7\"]]]],\"XK\":[\"383\",\"00\",\"2\\\\d{7,8}|3\\\\d{7,11}|(?:4\\\\d\\\\d|[89]00)\\\\d{5}\",[8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-4]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2|39\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7,10})\",\"$1 $2\",[\"3\"],\"0$1\"]],\"0\"],\"YE\":[\"967\",\"00\",\"(?:1|7\\\\d)\\\\d{7}|[1-7]\\\\d{6}\",[7,8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[1-6]|7(?:[24-6]|8[0-7])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\"],\"YT\":[\"262\",\"00\",\"7093\\\\d{5}|(?:80|9\\\\d)\\\\d{7}|(?:26|63)9\\\\d{6}\",[9],0,\"0\",0,0,0,0,0,[[\"269(?:0[0-467]|15|5[0-4]|6\\\\d|[78]0)\\\\d{4}\"],[\"(?:639(?:0[0-79]|1[019]|[267]\\\\d|3[09]|40|5[05-9]|9[04-79])|7093[5-7])\\\\d{4}\"],[\"80\\\\d{7}\"],0,0,0,0,0,[\"9(?:(?:39|47)8[01]|769\\\\d)\\\\d{4}\"]]],\"ZA\":[\"27\",\"00\",\"[1-79]\\\\d{8}|8\\\\d{4,9}\",[5,6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{3,4})\",\"$1 $2\",[\"8[1-4]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\"$1 $2 $3\",[\"8[1-4]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"860\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"],\"0$1\"]],\"0\"],\"ZM\":[\"260\",\"00\",\"800\\\\d{6}|(?:21|[579]\\\\d|63)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[28]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"[579]\"],\"0$1\"]],\"0\"],\"ZW\":[\"263\",\"00\",\"2(?:[0-57-9]\\\\d{6,8}|6[0-24-9]\\\\d{6,7})|[38]\\\\d{9}|[35-8]\\\\d{8}|[3-6]\\\\d{7}|[1-689]\\\\d{6}|[1-3569]\\\\d{5}|[1356]\\\\d{4}\",[5,6,7,8,9,10],[[\"(\\\\d{3})(\\\\d{3,5})\",\"$1 $2\",[\"2(?:0[45]|2[278]|[49]8)|3(?:[09]8|17)|6(?:[29]8|37|75)|[23][78]|(?:33|5[15]|6[68])[78]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2,4})\",\"$1 $2 $3\",[\"[49]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"80\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"24|8[13-59]|(?:2[05-79]|39|5[45]|6[15-8])2\",\"2(?:02[014]|4|[56]20|[79]2)|392|5(?:42|525)|6(?:[16-8]21|52[013])|8[13-59]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2(?:1[39]|2[0157]|[378]|[56][14])|3(?:12|29)\",\"2(?:1[39]|2[0157]|[378]|[56][14])|3(?:123|29)\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,5})\",\"$1 $2\",[\"1|2(?:0[0-36-9]|12|29|[56])|3(?:1[0-689]|[24-6])|5(?:[0236-9]|1[2-4])|6(?:[013-59]|7[0-46-9])|(?:33|55|6[68])[0-69]|(?:29|3[09]|62)[0-79]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"29[013-9]|39|54\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3,5})\",\"$1 $2\",[\"(?:25|54)8\",\"258|5483\"],\"0$1\"]],\"0\"]},\"nonGeographic\":{\"800\":[\"800\",0,\"(?:00|[1-9]\\\\d)\\\\d{6}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"\\\\d\"]]],0,0,0,0,0,0,[0,0,[\"(?:00|[1-9]\\\\d)\\\\d{6}\"]]],\"808\":[\"808\",0,\"[1-9]\\\\d{7}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[1-9]\"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,0,[\"[1-9]\\\\d{7}\"]]],\"870\":[\"870\",0,\"7\\\\d{11}|[235-7]\\\\d{8}\",[9,12],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[235-7]\"]]],0,0,0,0,0,0,[0,[\"(?:[356]|774[45])\\\\d{8}|7[6-8]\\\\d{7}\"],0,0,0,0,0,0,[\"2\\\\d{8}\",[9]]]],\"878\":[\"878\",0,\"10\\\\d{10}\",[12],[[\"(\\\\d{2})(\\\\d{5})(\\\\d{5})\",\"$1 $2 $3\",[\"1\"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,[\"10\\\\d{10}\"]]],\"881\":[\"881\",0,\"6\\\\d{9}|[0-36-9]\\\\d{8}\",[9,10],[[\"(\\\\d)(\\\\d{3})(\\\\d{5})\",\"$1 $2 $3\",[\"[0-37-9]\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{5,6})\",\"$1 $2 $3\",[\"6\"]]],0,0,0,0,0,0,[0,[\"6\\\\d{9}|[0-36-9]\\\\d{8}\"]]],\"882\":[\"882\",0,\"[13]\\\\d{6}(?:\\\\d{2,5})?|[19]\\\\d{7}|(?:[25]\\\\d\\\\d|4)\\\\d{7}(?:\\\\d{2})?\",[7,8,9,10,11,12],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"16|342\"]],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"49\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"1[36]|9\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"3[23]\"]],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"16\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"10|23|3(?:[15]|4[57])|4|51\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"34\"]],[\"(\\\\d{2})(\\\\d{4,5})(\\\\d{5})\",\"$1 $2 $3\",[\"[1-35]\"]]],0,0,0,0,0,0,[0,[\"342\\\\d{4}|(?:337|49)\\\\d{6}|(?:3(?:2|47|7\\\\d{3})|50\\\\d{3})\\\\d{7}\",[7,8,9,10,12]],0,0,0,[\"348[57]\\\\d{7}\",[11]],0,0,[\"1(?:3(?:0[0347]|[13][0139]|2[035]|4[013568]|6[0459]|7[06]|8[15-8]|9[0689])\\\\d{4}|6\\\\d{5,10})|(?:345\\\\d|9[89])\\\\d{6}|(?:10|2(?:3|85\\\\d)|3(?:[15]|[69]\\\\d\\\\d)|4[15-8]|51)\\\\d{8}\"]]],\"883\":[\"883\",0,\"(?:[1-4]\\\\d|51)\\\\d{6,10}\",[8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{2,8})\",\"$1 $2 $3\",[\"[14]|2[24-689]|3[02-689]|51[24-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"510\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"21\"]],[\"(\\\\d{4})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"51[13]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"[235]\"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,[\"(?:2(?:00\\\\d\\\\d|10)|(?:370[1-9]|51\\\\d0)\\\\d)\\\\d{7}|51(?:00\\\\d{5}|[24-9]0\\\\d{4,7})|(?:1[0-79]|2[24-689]|3[02-689]|4[0-4])0\\\\d{5,9}\"]]],\"888\":[\"888\",0,\"\\\\d{11}\",[11],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\",\"$1 $2 $3\"]],0,0,0,0,0,0,[0,0,0,0,0,0,[\"\\\\d{11}\"]]],\"979\":[\"979\",0,\"[1359]\\\\d{8}\",[9],[[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[1359]\"]]],0,0,0,0,0,0,[0,0,0,[\"[1359]\\\\d{8}\"]]]}}","// Importing from a \".js\" file is a workaround for Node.js \"ES Modules\"\r\n// importing system which is even uncapable of importing \"*.json\" files.\r\nimport metadata from '../../metadata.min.json.js'\r\n\r\nexport default function withMetadataArgument(func, _arguments) {\r\n\tvar args = Array.prototype.slice.call(_arguments)\r\n\targs.push(metadata)\r\n\treturn func.apply(this, args)\r\n}","// Copy-pasted from:\n// https://github.com/substack/semver-compare/blob/master/index.js\n//\n// Inlining this function because some users reported issues with\n// importing from `semver-compare` in a browser with ES6 \"native\" modules.\n//\n// Fixes `semver-compare` not being able to compare versions with alpha/beta/etc \"tags\".\n// https://github.com/catamphetamine/libphonenumber-js/issues/381\nexport default function (a, b) {\n  a = a.split('-');\n  b = b.split('-');\n  var pa = a[0].split('.');\n  var pb = b[0].split('.');\n\n  for (var i = 0; i < 3; i++) {\n    var na = Number(pa[i]);\n    var nb = Number(pb[i]);\n    if (na > nb) return 1;\n    if (nb > na) return -1;\n    if (!isNaN(na) && isNaN(nb)) return 1;\n    if (isNaN(na) && !isNaN(nb)) return -1;\n  }\n\n  if (a[1] && b[1]) {\n    return a[1] > b[1] ? 1 : a[1] < b[1] ? -1 : 0;\n  }\n\n  return !a[1] && b[1] ? 1 : a[1] && !b[1] ? -1 : 0;\n}\n//# sourceMappingURL=semver-compare.js.map","var objectConstructor = {}.constructor;\nexport default function isObject(object) {\n  return object !== undefined && object !== null && object.constructor === objectConstructor;\n}\n//# sourceMappingURL=isObject.js.map","function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nimport compare from './tools/semver-compare.js';\nimport isObject from './helpers/isObject.js'; // Added \"possibleLengths\" and renamed\n// \"country_phone_code_to_countries\" to \"country_calling_codes\".\n\nvar V2 = '1.0.18'; // Added \"idd_prefix\" and \"default_idd_prefix\".\n\nvar V3 = '1.2.0'; // Moved `001` country code to \"nonGeographic\" section of metadata.\n\nvar V4 = '1.7.35';\nvar DEFAULT_EXT_PREFIX = ' ext. ';\nvar CALLING_CODE_REG_EXP = /^\\d+$/;\n/**\r\n * See: https://gitlab.com/catamphetamine/libphonenumber-js/blob/master/METADATA.md\r\n */\n\nvar Metadata = /*#__PURE__*/function () {\n  function Metadata(metadata) {\n    _classCallCheck(this, Metadata);\n\n    validateMetadata(metadata);\n    this.metadata = metadata;\n    setVersion.call(this, metadata);\n  }\n\n  _createClass(Metadata, [{\n    key: \"getCountries\",\n    value: function getCountries() {\n      return Object.keys(this.metadata.countries).filter(function (_) {\n        return _ !== '001';\n      });\n    }\n  }, {\n    key: \"getCountryMetadata\",\n    value: function getCountryMetadata(countryCode) {\n      return this.metadata.countries[countryCode];\n    }\n  }, {\n    key: \"nonGeographic\",\n    value: function nonGeographic() {\n      if (this.v1 || this.v2 || this.v3) return; // `nonGeographical` was a typo.\n      // It's present in metadata generated from `1.7.35` to `1.7.37`.\n      // The test case could be found by searching for \"nonGeographical\".\n\n      return this.metadata.nonGeographic || this.metadata.nonGeographical;\n    }\n  }, {\n    key: \"hasCountry\",\n    value: function hasCountry(country) {\n      return this.getCountryMetadata(country) !== undefined;\n    }\n  }, {\n    key: \"hasCallingCode\",\n    value: function hasCallingCode(callingCode) {\n      if (this.getCountryCodesForCallingCode(callingCode)) {\n        return true;\n      }\n\n      if (this.nonGeographic()) {\n        if (this.nonGeographic()[callingCode]) {\n          return true;\n        }\n      } else {\n        // A hacky workaround for old custom metadata (generated before V4).\n        var countryCodes = this.countryCallingCodes()[callingCode];\n\n        if (countryCodes && countryCodes.length === 1 && countryCodes[0] === '001') {\n          return true;\n        }\n      }\n    }\n  }, {\n    key: \"isNonGeographicCallingCode\",\n    value: function isNonGeographicCallingCode(callingCode) {\n      if (this.nonGeographic()) {\n        return this.nonGeographic()[callingCode] ? true : false;\n      } else {\n        return this.getCountryCodesForCallingCode(callingCode) ? false : true;\n      }\n    } // Deprecated.\n\n  }, {\n    key: \"country\",\n    value: function country(countryCode) {\n      return this.selectNumberingPlan(countryCode);\n    }\n  }, {\n    key: \"selectNumberingPlan\",\n    value: function selectNumberingPlan(countryCode, callingCode) {\n      // Supports just passing `callingCode` as the first argument.\n      if (countryCode && CALLING_CODE_REG_EXP.test(countryCode)) {\n        callingCode = countryCode;\n        countryCode = null;\n      }\n\n      if (countryCode && countryCode !== '001') {\n        if (!this.hasCountry(countryCode)) {\n          throw new Error(\"Unknown country: \".concat(countryCode));\n        }\n\n        this.numberingPlan = new NumberingPlan(this.getCountryMetadata(countryCode), this);\n      } else if (callingCode) {\n        if (!this.hasCallingCode(callingCode)) {\n          throw new Error(\"Unknown calling code: \".concat(callingCode));\n        }\n\n        this.numberingPlan = new NumberingPlan(this.getNumberingPlanMetadata(callingCode), this);\n      } else {\n        this.numberingPlan = undefined;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"getCountryCodesForCallingCode\",\n    value: function getCountryCodesForCallingCode(callingCode) {\n      var countryCodes = this.countryCallingCodes()[callingCode];\n\n      if (countryCodes) {\n        // Metadata before V4 included \"non-geographic entity\" calling codes\n        // inside `country_calling_codes` (for example, `\"881\":[\"001\"]`).\n        // Now the semantics of `country_calling_codes` has changed:\n        // it's specifically for \"countries\" now.\n        // Older versions of custom metadata will simply skip parsing\n        // \"non-geographic entity\" phone numbers with new versions\n        // of this library: it's not considered a bug,\n        // because such numbers are extremely rare,\n        // and developers extremely rarely use custom metadata.\n        if (countryCodes.length === 1 && countryCodes[0].length === 3) {\n          return;\n        }\n\n        return countryCodes;\n      }\n    }\n  }, {\n    key: \"getCountryCodeForCallingCode\",\n    value: function getCountryCodeForCallingCode(callingCode) {\n      var countryCodes = this.getCountryCodesForCallingCode(callingCode);\n\n      if (countryCodes) {\n        return countryCodes[0];\n      }\n    }\n  }, {\n    key: \"getNumberingPlanMetadata\",\n    value: function getNumberingPlanMetadata(callingCode) {\n      var countryCode = this.getCountryCodeForCallingCode(callingCode);\n\n      if (countryCode) {\n        return this.getCountryMetadata(countryCode);\n      }\n\n      if (this.nonGeographic()) {\n        var metadata = this.nonGeographic()[callingCode];\n\n        if (metadata) {\n          return metadata;\n        }\n      } else {\n        // A hacky workaround for old custom metadata (generated before V4).\n        // In that metadata, there was no concept of \"non-geographic\" metadata\n        // so metadata for `001` country code was stored along with other countries.\n        // The test case can be found by searching for:\n        // \"should work around `nonGeographic` metadata not existing\".\n        var countryCodes = this.countryCallingCodes()[callingCode];\n\n        if (countryCodes && countryCodes.length === 1 && countryCodes[0] === '001') {\n          return this.metadata.countries['001'];\n        }\n      }\n    } // Deprecated.\n\n  }, {\n    key: \"countryCallingCode\",\n    value: function countryCallingCode() {\n      return this.numberingPlan.callingCode();\n    } // Deprecated.\n\n  }, {\n    key: \"IDDPrefix\",\n    value: function IDDPrefix() {\n      return this.numberingPlan.IDDPrefix();\n    } // Deprecated.\n\n  }, {\n    key: \"defaultIDDPrefix\",\n    value: function defaultIDDPrefix() {\n      return this.numberingPlan.defaultIDDPrefix();\n    } // Deprecated.\n\n  }, {\n    key: \"nationalNumberPattern\",\n    value: function nationalNumberPattern() {\n      return this.numberingPlan.nationalNumberPattern();\n    } // Deprecated.\n\n  }, {\n    key: \"possibleLengths\",\n    value: function possibleLengths() {\n      return this.numberingPlan.possibleLengths();\n    } // Deprecated.\n\n  }, {\n    key: \"formats\",\n    value: function formats() {\n      return this.numberingPlan.formats();\n    } // Deprecated.\n\n  }, {\n    key: \"nationalPrefixForParsing\",\n    value: function nationalPrefixForParsing() {\n      return this.numberingPlan.nationalPrefixForParsing();\n    } // Deprecated.\n\n  }, {\n    key: \"nationalPrefixTransformRule\",\n    value: function nationalPrefixTransformRule() {\n      return this.numberingPlan.nationalPrefixTransformRule();\n    } // Deprecated.\n\n  }, {\n    key: \"leadingDigits\",\n    value: function leadingDigits() {\n      return this.numberingPlan.leadingDigits();\n    } // Deprecated.\n\n  }, {\n    key: \"hasTypes\",\n    value: function hasTypes() {\n      return this.numberingPlan.hasTypes();\n    } // Deprecated.\n\n  }, {\n    key: \"type\",\n    value: function type(_type) {\n      return this.numberingPlan.type(_type);\n    } // Deprecated.\n\n  }, {\n    key: \"ext\",\n    value: function ext() {\n      return this.numberingPlan.ext();\n    }\n  }, {\n    key: \"countryCallingCodes\",\n    value: function countryCallingCodes() {\n      if (this.v1) return this.metadata.country_phone_code_to_countries;\n      return this.metadata.country_calling_codes;\n    } // Deprecated.\n\n  }, {\n    key: \"chooseCountryByCountryCallingCode\",\n    value: function chooseCountryByCountryCallingCode(callingCode) {\n      return this.selectNumberingPlan(callingCode);\n    }\n  }, {\n    key: \"hasSelectedNumberingPlan\",\n    value: function hasSelectedNumberingPlan() {\n      return this.numberingPlan !== undefined;\n    }\n  }]);\n\n  return Metadata;\n}();\n\nexport { Metadata as default };\n\nvar NumberingPlan = /*#__PURE__*/function () {\n  function NumberingPlan(metadata, globalMetadataObject) {\n    _classCallCheck(this, NumberingPlan);\n\n    this.globalMetadataObject = globalMetadataObject;\n    this.metadata = metadata;\n    setVersion.call(this, globalMetadataObject.metadata);\n  }\n\n  _createClass(NumberingPlan, [{\n    key: \"callingCode\",\n    value: function callingCode() {\n      return this.metadata[0];\n    } // Formatting information for regions which share\n    // a country calling code is contained by only one region\n    // for performance reasons. For example, for NANPA region\n    // (\"North American Numbering Plan Administration\",\n    //  which includes USA, Canada, Cayman Islands, Bahamas, etc)\n    // it will be contained in the metadata for `US`.\n\n  }, {\n    key: \"getDefaultCountryMetadataForRegion\",\n    value: function getDefaultCountryMetadataForRegion() {\n      return this.globalMetadataObject.getNumberingPlanMetadata(this.callingCode());\n    } // Is always present.\n\n  }, {\n    key: \"IDDPrefix\",\n    value: function IDDPrefix() {\n      if (this.v1 || this.v2) return;\n      return this.metadata[1];\n    } // Is only present when a country supports multiple IDD prefixes.\n\n  }, {\n    key: \"defaultIDDPrefix\",\n    value: function defaultIDDPrefix() {\n      if (this.v1 || this.v2) return;\n      return this.metadata[12];\n    }\n  }, {\n    key: \"nationalNumberPattern\",\n    value: function nationalNumberPattern() {\n      if (this.v1 || this.v2) return this.metadata[1];\n      return this.metadata[2];\n    } // \"possible length\" data is always present in Google's metadata.\n\n  }, {\n    key: \"possibleLengths\",\n    value: function possibleLengths() {\n      if (this.v1) return;\n      return this.metadata[this.v2 ? 2 : 3];\n    }\n  }, {\n    key: \"_getFormats\",\n    value: function _getFormats(metadata) {\n      return metadata[this.v1 ? 2 : this.v2 ? 3 : 4];\n    } // For countries of the same region (e.g. NANPA)\n    // formats are all stored in the \"main\" country for that region.\n    // E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\n\n  }, {\n    key: \"formats\",\n    value: function formats() {\n      var _this = this;\n\n      var formats = this._getFormats(this.metadata) || this._getFormats(this.getDefaultCountryMetadataForRegion()) || [];\n      return formats.map(function (_) {\n        return new Format(_, _this);\n      });\n    }\n  }, {\n    key: \"nationalPrefix\",\n    value: function nationalPrefix() {\n      return this.metadata[this.v1 ? 3 : this.v2 ? 4 : 5];\n    }\n  }, {\n    key: \"_getNationalPrefixFormattingRule\",\n    value: function _getNationalPrefixFormattingRule(metadata) {\n      return metadata[this.v1 ? 4 : this.v2 ? 5 : 6];\n    } // For countries of the same region (e.g. NANPA)\n    // national prefix formatting rule is stored in the \"main\" country for that region.\n    // E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\n\n  }, {\n    key: \"nationalPrefixFormattingRule\",\n    value: function nationalPrefixFormattingRule() {\n      return this._getNationalPrefixFormattingRule(this.metadata) || this._getNationalPrefixFormattingRule(this.getDefaultCountryMetadataForRegion());\n    }\n  }, {\n    key: \"_nationalPrefixForParsing\",\n    value: function _nationalPrefixForParsing() {\n      return this.metadata[this.v1 ? 5 : this.v2 ? 6 : 7];\n    }\n  }, {\n    key: \"nationalPrefixForParsing\",\n    value: function nationalPrefixForParsing() {\n      // If `national_prefix_for_parsing` is not set explicitly,\n      // then infer it from `national_prefix` (if any)\n      return this._nationalPrefixForParsing() || this.nationalPrefix();\n    }\n  }, {\n    key: \"nationalPrefixTransformRule\",\n    value: function nationalPrefixTransformRule() {\n      return this.metadata[this.v1 ? 6 : this.v2 ? 7 : 8];\n    }\n  }, {\n    key: \"_getNationalPrefixIsOptionalWhenFormatting\",\n    value: function _getNationalPrefixIsOptionalWhenFormatting() {\n      return !!this.metadata[this.v1 ? 7 : this.v2 ? 8 : 9];\n    } // For countries of the same region (e.g. NANPA)\n    // \"national prefix is optional when formatting\" flag is\n    // stored in the \"main\" country for that region.\n    // E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\n\n  }, {\n    key: \"nationalPrefixIsOptionalWhenFormattingInNationalFormat\",\n    value: function nationalPrefixIsOptionalWhenFormattingInNationalFormat() {\n      return this._getNationalPrefixIsOptionalWhenFormatting(this.metadata) || this._getNationalPrefixIsOptionalWhenFormatting(this.getDefaultCountryMetadataForRegion());\n    }\n  }, {\n    key: \"leadingDigits\",\n    value: function leadingDigits() {\n      return this.metadata[this.v1 ? 8 : this.v2 ? 9 : 10];\n    }\n  }, {\n    key: \"types\",\n    value: function types() {\n      return this.metadata[this.v1 ? 9 : this.v2 ? 10 : 11];\n    }\n  }, {\n    key: \"hasTypes\",\n    value: function hasTypes() {\n      // Versions 1.2.0 - 1.2.4: can be `[]`.\n\n      /* istanbul ignore next */\n      if (this.types() && this.types().length === 0) {\n        return false;\n      } // Versions <= 1.2.4: can be `undefined`.\n      // Version >= 1.2.5: can be `0`.\n\n\n      return !!this.types();\n    }\n  }, {\n    key: \"type\",\n    value: function type(_type2) {\n      if (this.hasTypes() && getType(this.types(), _type2)) {\n        return new Type(getType(this.types(), _type2), this);\n      }\n    }\n  }, {\n    key: \"ext\",\n    value: function ext() {\n      if (this.v1 || this.v2) return DEFAULT_EXT_PREFIX;\n      return this.metadata[13] || DEFAULT_EXT_PREFIX;\n    }\n  }]);\n\n  return NumberingPlan;\n}();\n\nvar Format = /*#__PURE__*/function () {\n  function Format(format, metadata) {\n    _classCallCheck(this, Format);\n\n    this._format = format;\n    this.metadata = metadata;\n  }\n\n  _createClass(Format, [{\n    key: \"pattern\",\n    value: function pattern() {\n      return this._format[0];\n    }\n  }, {\n    key: \"format\",\n    value: function format() {\n      return this._format[1];\n    }\n  }, {\n    key: \"leadingDigitsPatterns\",\n    value: function leadingDigitsPatterns() {\n      return this._format[2] || [];\n    }\n  }, {\n    key: \"nationalPrefixFormattingRule\",\n    value: function nationalPrefixFormattingRule() {\n      return this._format[3] || this.metadata.nationalPrefixFormattingRule();\n    }\n  }, {\n    key: \"nationalPrefixIsOptionalWhenFormattingInNationalFormat\",\n    value: function nationalPrefixIsOptionalWhenFormattingInNationalFormat() {\n      return !!this._format[4] || this.metadata.nationalPrefixIsOptionalWhenFormattingInNationalFormat();\n    }\n  }, {\n    key: \"nationalPrefixIsMandatoryWhenFormattingInNationalFormat\",\n    value: function nationalPrefixIsMandatoryWhenFormattingInNationalFormat() {\n      // National prefix is omitted if there's no national prefix formatting rule\n      // set for this country, or when the national prefix formatting rule\n      // contains no national prefix itself, or when this rule is set but\n      // national prefix is optional for this phone number format\n      // (and it is not enforced explicitly)\n      return this.usesNationalPrefix() && !this.nationalPrefixIsOptionalWhenFormattingInNationalFormat();\n    } // Checks whether national prefix formatting rule contains national prefix.\n\n  }, {\n    key: \"usesNationalPrefix\",\n    value: function usesNationalPrefix() {\n      return this.nationalPrefixFormattingRule() && // Check that national prefix formatting rule is not a \"dummy\" one.\n      !FIRST_GROUP_ONLY_PREFIX_PATTERN.test(this.nationalPrefixFormattingRule()) // In compressed metadata, `this.nationalPrefixFormattingRule()` is `0`\n      // when `national_prefix_formatting_rule` is not present.\n      // So, `true` or `false` are returned explicitly here, so that\n      // `0` number isn't returned.\n      ? true : false;\n    }\n  }, {\n    key: \"internationalFormat\",\n    value: function internationalFormat() {\n      return this._format[5] || this.format();\n    }\n  }]);\n\n  return Format;\n}();\n/**\r\n * A pattern that is used to determine if the national prefix formatting rule\r\n * has the first group only, i.e., does not start with the national prefix.\r\n * Note that the pattern explicitly allows for unbalanced parentheses.\r\n */\n\n\nvar FIRST_GROUP_ONLY_PREFIX_PATTERN = /^\\(?\\$1\\)?$/;\n\nvar Type = /*#__PURE__*/function () {\n  function Type(type, metadata) {\n    _classCallCheck(this, Type);\n\n    this.type = type;\n    this.metadata = metadata;\n  }\n\n  _createClass(Type, [{\n    key: \"pattern\",\n    value: function pattern() {\n      if (this.metadata.v1) return this.type;\n      return this.type[0];\n    }\n  }, {\n    key: \"possibleLengths\",\n    value: function possibleLengths() {\n      if (this.metadata.v1) return;\n      return this.type[1] || this.metadata.possibleLengths();\n    }\n  }]);\n\n  return Type;\n}();\n\nfunction getType(types, type) {\n  switch (type) {\n    case 'FIXED_LINE':\n      return types[0];\n\n    case 'MOBILE':\n      return types[1];\n\n    case 'TOLL_FREE':\n      return types[2];\n\n    case 'PREMIUM_RATE':\n      return types[3];\n\n    case 'PERSONAL_NUMBER':\n      return types[4];\n\n    case 'VOICEMAIL':\n      return types[5];\n\n    case 'UAN':\n      return types[6];\n\n    case 'PAGER':\n      return types[7];\n\n    case 'VOIP':\n      return types[8];\n\n    case 'SHARED_COST':\n      return types[9];\n  }\n}\n\nexport function validateMetadata(metadata) {\n  if (!metadata) {\n    throw new Error('[libphonenumber-js] `metadata` argument not passed. Check your arguments.');\n  } // `country_phone_code_to_countries` was renamed to `country_calling_codes` in `1.0.18`.\n  // For that reason, it's not used in this detection algorithm.\n  // Instead, it detects by `countries: {}` property existence.\n\n\n  if (!isObject(metadata) || !isObject(metadata.countries)) {\n    throw new Error(\"[libphonenumber-js] `metadata` argument was passed but it's not a valid metadata. Must be an object having `.countries` child object property. Got \".concat(isObject(metadata) ? 'an object of shape: { ' + Object.keys(metadata).join(', ') + ' }' : 'a ' + typeOf(metadata) + ': ' + metadata, \".\"));\n  }\n} // Babel transforms `typeof` into some \"branches\"\n// so istanbul will show this as \"branch not covered\".\n\n/* istanbul ignore next */\n\nvar typeOf = function typeOf(_) {\n  return _typeof(_);\n};\n/**\r\n * Returns extension prefix for a country.\r\n * @param  {string} country\r\n * @param  {object} metadata\r\n * @return {string?}\r\n * @example\r\n * // Returns \" ext. \"\r\n * getExtPrefix(\"US\")\r\n */\n\n\nexport function getExtPrefix(country, metadata) {\n  metadata = new Metadata(metadata);\n\n  if (metadata.hasCountry(country)) {\n    return metadata.country(country).ext();\n  }\n\n  return DEFAULT_EXT_PREFIX;\n}\n/**\r\n * Returns \"country calling code\" for a country.\r\n * Throws an error if the country doesn't exist or isn't supported by this library.\r\n * @param  {string} country\r\n * @param  {object} metadata\r\n * @return {string}\r\n * @example\r\n * // Returns \"44\"\r\n * getCountryCallingCode(\"GB\")\r\n */\n\nexport function getCountryCallingCode(country, metadata) {\n  metadata = new Metadata(metadata);\n\n  if (metadata.hasCountry(country)) {\n    return metadata.country(country).countryCallingCode();\n  }\n\n  throw new Error(\"Unknown country: \".concat(country));\n}\nexport function isSupportedCountry(country, metadata) {\n  // metadata = new Metadata(metadata)\n  // return metadata.hasCountry(country)\n  return metadata.countries.hasOwnProperty(country);\n}\n\nfunction setVersion(metadata) {\n  var version = metadata.version;\n\n  if (typeof version === 'number') {\n    this.v1 = version === 1;\n    this.v2 = version === 2;\n    this.v3 = version === 3;\n    this.v4 = version === 4;\n  } else {\n    if (!version) {\n      this.v1 = true;\n    } else if (compare(version, V3) === -1) {\n      this.v2 = true;\n    } else if (compare(version, V4) === -1) {\n      this.v3 = true;\n    } else {\n      this.v4 = true;\n    }\n  }\n} // const ISO_COUNTRY_CODE = /^[A-Z]{2}$/\n// function isCountryCode(countryCode) {\n// \treturn ISO_COUNTRY_CODE.test(countryCodeOrCountryCallingCode)\n// }\n//# sourceMappingURL=metadata.js.map","function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\r\n * Merges two arrays.\r\n * @param  {*} a\r\n * @param  {*} b\r\n * @return {*}\r\n */\nexport default function mergeArrays(a, b) {\n  var merged = a.slice();\n\n  for (var _iterator = _createForOfIteratorHelperLoose(b), _step; !(_step = _iterator()).done;) {\n    var element = _step.value;\n\n    if (a.indexOf(element) < 0) {\n      merged.push(element);\n    }\n  }\n\n  return merged.sort(function (a, b) {\n    return a - b;\n  }); // ES6 version, requires Set polyfill.\n  // let merged = new Set(a)\n  // for (const element of b) {\n  // \tmerged.add(i)\n  // }\n  // return Array.from(merged).sort((a, b) => a - b)\n}\n//# sourceMappingURL=mergeArrays.js.map","import mergeArrays from './mergeArrays.js';\nexport default function checkNumberLength(nationalNumber, metadata) {\n  return checkNumberLengthForType(nationalNumber, undefined, metadata);\n} // Checks whether a number is possible for the country based on its length.\n// Should only be called for the \"new\" metadata which has \"possible lengths\".\n\nexport function checkNumberLengthForType(nationalNumber, type, metadata) {\n  var type_info = metadata.type(type); // There should always be \"<possiblePengths/>\" set for every type element.\n  // This is declared in the XML schema.\n  // For size efficiency, where a sub-description (e.g. fixed-line)\n  // has the same \"<possiblePengths/>\" as the \"general description\", this is missing,\n  // so we fall back to the \"general description\". Where no numbers of the type\n  // exist at all, there is one possible length (-1) which is guaranteed\n  // not to match the length of any real phone number.\n\n  var possible_lengths = type_info && type_info.possibleLengths() || metadata.possibleLengths(); // let local_lengths    = type_info && type.possibleLengthsLocal() || metadata.possibleLengthsLocal()\n  // Metadata before version `1.0.18` didn't contain `possible_lengths`.\n\n  if (!possible_lengths) {\n    return 'IS_POSSIBLE';\n  }\n\n  if (type === 'FIXED_LINE_OR_MOBILE') {\n    // No such country in metadata.\n\n    /* istanbul ignore next */\n    if (!metadata.type('FIXED_LINE')) {\n      // The rare case has been encountered where no fixedLine data is available\n      // (true for some non-geographic entities), so we just check mobile.\n      return checkNumberLengthForType(nationalNumber, 'MOBILE', metadata);\n    }\n\n    var mobile_type = metadata.type('MOBILE');\n\n    if (mobile_type) {\n      // Merge the mobile data in if there was any. \"Concat\" creates a new\n      // array, it doesn't edit possible_lengths in place, so we don't need a copy.\n      // Note that when adding the possible lengths from mobile, we have\n      // to again check they aren't empty since if they are this indicates\n      // they are the same as the general desc and should be obtained from there.\n      possible_lengths = mergeArrays(possible_lengths, mobile_type.possibleLengths()); // The current list is sorted; we need to merge in the new list and\n      // re-sort (duplicates are okay). Sorting isn't so expensive because\n      // the lists are very small.\n      // if (local_lengths) {\n      // \tlocal_lengths = mergeArrays(local_lengths, mobile_type.possibleLengthsLocal())\n      // } else {\n      // \tlocal_lengths = mobile_type.possibleLengthsLocal()\n      // }\n    }\n  } // If the type doesn't exist then return 'INVALID_LENGTH'.\n  else if (type && !type_info) {\n    return 'INVALID_LENGTH';\n  }\n\n  var actual_length = nationalNumber.length; // In `libphonenumber-js` all \"local-only\" formats are dropped for simplicity.\n  // // This is safe because there is never an overlap beween the possible lengths\n  // // and the local-only lengths; this is checked at build time.\n  // if (local_lengths && local_lengths.indexOf(nationalNumber.length) >= 0)\n  // {\n  // \treturn 'IS_POSSIBLE_LOCAL_ONLY'\n  // }\n\n  var minimum_length = possible_lengths[0];\n\n  if (minimum_length === actual_length) {\n    return 'IS_POSSIBLE';\n  }\n\n  if (minimum_length > actual_length) {\n    return 'TOO_SHORT';\n  }\n\n  if (possible_lengths[possible_lengths.length - 1] < actual_length) {\n    return 'TOO_LONG';\n  } // We skip the first element since we've already checked it.\n\n\n  return possible_lengths.indexOf(actual_length, 1) >= 0 ? 'IS_POSSIBLE' : 'INVALID_LENGTH';\n}\n//# sourceMappingURL=checkNumberLength.js.map","import Metadata from './metadata.js';\nimport checkNumberLength from './helpers/checkNumberLength.js';\n/**\r\n * Checks if a phone number is \"possible\" (basically just checks its length).\r\n *\r\n * isPossible(phoneNumberInstance, { ..., v2: true }, metadata)\r\n *\r\n * isPossible({ phone: '8005553535', country: 'RU' }, { ... }, metadata)\r\n * isPossible({ phone: '8005553535', country: 'RU' }, undefined, metadata)\r\n *\r\n * @param  {object|PhoneNumber} input — If `options.v2: true` flag is passed, the `input` should be a `PhoneNumber` instance. Otherwise, it should be an object of shape `{ phone: '...', country: '...' }`.\r\n * @param  {object} [options]\r\n * @param  {object} metadata\r\n * @return {string}\r\n */\n\nexport default function isPossiblePhoneNumber(input, options, metadata) {\n  /* istanbul ignore if */\n  if (options === undefined) {\n    options = {};\n  }\n\n  metadata = new Metadata(metadata);\n\n  if (options.v2) {\n    if (!input.countryCallingCode) {\n      throw new Error('Invalid phone number object passed');\n    }\n\n    metadata.selectNumberingPlan(input.countryCallingCode);\n  } else {\n    if (!input.phone) {\n      return false;\n    }\n\n    if (input.country) {\n      if (!metadata.hasCountry(input.country)) {\n        throw new Error(\"Unknown country: \".concat(input.country));\n      }\n\n      metadata.country(input.country);\n    } else {\n      if (!input.countryCallingCode) {\n        throw new Error('Invalid phone number object passed');\n      }\n\n      metadata.selectNumberingPlan(input.countryCallingCode);\n    }\n  } // Old metadata (< 1.0.18) had no \"possible length\" data.\n\n\n  if (metadata.possibleLengths()) {\n    return isPossibleNumber(input.phone || input.nationalNumber, metadata);\n  } else {\n    // There was a bug between `1.7.35` and `1.7.37` where \"possible_lengths\"\n    // were missing for \"non-geographical\" numbering plans.\n    // Just assume the number is possible in such cases:\n    // it's unlikely that anyone generated their custom metadata\n    // in that short period of time (one day).\n    // This code can be removed in some future major version update.\n    if (input.countryCallingCode && metadata.isNonGeographicCallingCode(input.countryCallingCode)) {\n      // \"Non-geographic entities\" did't have `possibleLengths`\n      // due to a bug in metadata generation process.\n      return true;\n    } else {\n      throw new Error('Missing \"possibleLengths\" in metadata. Perhaps the metadata has been generated before v1.0.18.');\n    }\n  }\n}\nexport function isPossibleNumber(nationalNumber, metadata) {\n  //, isInternational) {\n  switch (checkNumberLength(nationalNumber, metadata)) {\n    case 'IS_POSSIBLE':\n      return true;\n    // This library ignores \"local-only\" phone numbers (for simplicity).\n    // See the readme for more info on what are \"local-only\" phone numbers.\n    // case 'IS_POSSIBLE_LOCAL_ONLY':\n    // \treturn !isInternational\n\n    default:\n      return false;\n  }\n}\n//# sourceMappingURL=isPossible.js.map","/**\r\n * Checks whether the entire input sequence can be matched\r\n * against the regular expression.\r\n * @return {boolean}\r\n */\nexport default function matchesEntirely(text, regular_expression) {\n  // If assigning the `''` default value is moved to the arguments above,\n  // code coverage would decrease for some weird reason.\n  text = text || '';\n  return new RegExp('^(?:' + regular_expression + ')$').test(text);\n}\n//# sourceMappingURL=matchesEntirely.js.map","function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport Metadata from '../metadata.js';\nimport matchesEntirely from './matchesEntirely.js';\nvar NON_FIXED_LINE_PHONE_TYPES = ['MOBILE', 'PREMIUM_RATE', 'TOLL_FREE', 'SHARED_COST', 'VOIP', 'PERSONAL_NUMBER', 'PAGER', 'UAN', 'VOICEMAIL']; // Finds out national phone number type (fixed line, mobile, etc)\n\nexport default function getNumberType(input, options, metadata) {\n  // If assigning the `{}` default value is moved to the arguments above,\n  // code coverage would decrease for some weird reason.\n  options = options || {}; // When `parse()` returns an empty object — `{}` —\n  // that means that the phone number is malformed,\n  // so it can't possibly be valid.\n\n  if (!input.country && !input.countryCallingCode) {\n    return;\n  }\n\n  metadata = new Metadata(metadata);\n  metadata.selectNumberingPlan(input.country, input.countryCallingCode);\n  var nationalNumber = options.v2 ? input.nationalNumber : input.phone; // The following is copy-pasted from the original function:\n  // https://github.com/googlei18n/libphonenumber/blob/3ea547d4fbaa2d0b67588904dfa5d3f2557c27ff/javascript/i18n/phonenumbers/phonenumberutil.js#L2835\n  // Is this national number even valid for this country\n\n  if (!matchesEntirely(nationalNumber, metadata.nationalNumberPattern())) {\n    return;\n  } // Is it fixed line number\n\n\n  if (isNumberTypeEqualTo(nationalNumber, 'FIXED_LINE', metadata)) {\n    // Because duplicate regular expressions are removed\n    // to reduce metadata size, if \"mobile\" pattern is \"\"\n    // then it means it was removed due to being a duplicate of the fixed-line pattern.\n    //\n    if (metadata.type('MOBILE') && metadata.type('MOBILE').pattern() === '') {\n      return 'FIXED_LINE_OR_MOBILE';\n    } // `MOBILE` type pattern isn't included if it matched `FIXED_LINE` one.\n    // For example, for \"US\" country.\n    // Old metadata (< `1.0.18`) had a specific \"types\" data structure\n    // that happened to be `undefined` for `MOBILE` in that case.\n    // Newer metadata (>= `1.0.18`) has another data structure that is\n    // not `undefined` for `MOBILE` in that case (it's just an empty array).\n    // So this `if` is just for backwards compatibility with old metadata.\n\n\n    if (!metadata.type('MOBILE')) {\n      return 'FIXED_LINE_OR_MOBILE';\n    } // Check if the number happens to qualify as both fixed line and mobile.\n    // (no such country in the minimal metadata set)\n\n    /* istanbul ignore if */\n\n\n    if (isNumberTypeEqualTo(nationalNumber, 'MOBILE', metadata)) {\n      return 'FIXED_LINE_OR_MOBILE';\n    }\n\n    return 'FIXED_LINE';\n  }\n\n  for (var _iterator = _createForOfIteratorHelperLoose(NON_FIXED_LINE_PHONE_TYPES), _step; !(_step = _iterator()).done;) {\n    var type = _step.value;\n\n    if (isNumberTypeEqualTo(nationalNumber, type, metadata)) {\n      return type;\n    }\n  }\n}\nexport function isNumberTypeEqualTo(nationalNumber, type, metadata) {\n  type = metadata.type(type);\n\n  if (!type || !type.pattern()) {\n    return false;\n  } // Check if any possible number lengths are present;\n  // if so, we use them to avoid checking\n  // the validation pattern if they don't match.\n  // If they are absent, this means they match\n  // the general description, which we have\n  // already checked before a specific number type.\n\n\n  if (type.possibleLengths() && type.possibleLengths().indexOf(nationalNumber.length) < 0) {\n    return false;\n  }\n\n  return matchesEntirely(nationalNumber, type.pattern());\n}\n//# sourceMappingURL=getNumberType.js.map","import Metadata from './metadata.js';\nimport matchesEntirely from './helpers/matchesEntirely.js';\nimport getNumberType from './helpers/getNumberType.js';\n/**\r\n * Checks if a given phone number is valid.\r\n *\r\n * isValid(phoneNumberInstance, { ..., v2: true }, metadata)\r\n *\r\n * isPossible({ phone: '8005553535', country: 'RU' }, { ... }, metadata)\r\n * isPossible({ phone: '8005553535', country: 'RU' }, undefined, metadata)\r\n *\r\n * If the `number` is a string, it will be parsed to an object,\r\n * but only if it contains only valid phone number characters (including punctuation).\r\n * If the `number` is an object, it is used as is.\r\n *\r\n * The optional `defaultCountry` argument is the default country.\r\n * I.e. it does not restrict to just that country,\r\n * e.g. in those cases where several countries share\r\n * the same phone numbering rules (NANPA, Britain, etc).\r\n * For example, even though the number `07624 369230`\r\n * belongs to the Isle of Man (\"IM\" country code)\r\n * calling `isValidNumber('07624369230', 'GB', metadata)`\r\n * still returns `true` because the country is not restricted to `GB`,\r\n * it's just that `GB` is the default one for the phone numbering rules.\r\n * For restricting the country see `isValidNumberForRegion()`\r\n * though restricting a country might not be a good idea.\r\n * https://github.com/googlei18n/libphonenumber/blob/master/FAQ.md#when-should-i-use-isvalidnumberforregion\r\n *\r\n * Examples:\r\n *\r\n * ```js\r\n * isValidNumber('+78005553535', metadata)\r\n * isValidNumber('8005553535', 'RU', metadata)\r\n * isValidNumber('88005553535', 'RU', metadata)\r\n * isValidNumber({ phone: '8005553535', country: 'RU' }, metadata)\r\n * ```\r\n */\n\nexport default function isValidNumber(input, options, metadata) {\n  // If assigning the `{}` default value is moved to the arguments above,\n  // code coverage would decrease for some weird reason.\n  options = options || {};\n  metadata = new Metadata(metadata);\n  metadata.selectNumberingPlan(input.country, input.countryCallingCode); // By default, countries only have type regexps when it's required for\n  // distinguishing different countries having the same `countryCallingCode`.\n\n  if (metadata.hasTypes()) {\n    return getNumberType(input, options, metadata.metadata) !== undefined;\n  } // If there are no type regexps for this country in metadata then use\n  // `nationalNumberPattern` as a \"better than nothing\" replacement.\n\n\n  var nationalNumber = options.v2 ? input.nationalNumber : input.phone;\n  return matchesEntirely(nationalNumber, metadata.nationalNumberPattern());\n}\n//# sourceMappingURL=isValid.js.map","import Metadata from '../metadata.js';\n/**\r\n * Returns a list of countries that the phone number could potentially belong to.\r\n * @param  {string} callingCode — Calling code.\r\n * @param  {string} nationalNumber — National (significant) number.\r\n * @param  {object} metadata — Metadata.\r\n * @return {string[]} A list of possible countries.\r\n */\n\nexport default function getPossibleCountriesForNumber(callingCode, nationalNumber, metadata) {\n  var _metadata = new Metadata(metadata);\n\n  var possibleCountries = _metadata.getCountryCodesForCallingCode(callingCode);\n\n  if (!possibleCountries) {\n    return [];\n  }\n\n  return possibleCountries.filter(function (country) {\n    return couldNationalNumberBelongToCountry(nationalNumber, country, metadata);\n  });\n}\n\nfunction couldNationalNumberBelongToCountry(nationalNumber, country, metadata) {\n  var _metadata = new Metadata(metadata);\n\n  _metadata.selectNumberingPlan(country);\n\n  if (_metadata.numberingPlan.possibleLengths().indexOf(nationalNumber.length) >= 0) {\n    return true;\n  }\n\n  return false;\n}\n//# sourceMappingURL=getPossibleCountriesForNumber.js.map","// The minimum length of the national significant number.\nexport var MIN_LENGTH_FOR_NSN = 2; // The ITU says the maximum length should be 15,\n// but one can find longer numbers in Germany.\n\nexport var MAX_LENGTH_FOR_NSN = 17; // The maximum length of the country calling code.\n\nexport var MAX_LENGTH_COUNTRY_CODE = 3; // Digits accepted in phone numbers\n// (ascii, fullwidth, arabic-indic, and eastern arabic digits).\n\nexport var VALID_DIGITS = \"0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9\"; // `DASHES` will be right after the opening square bracket of the \"character class\"\n\nvar DASHES = \"-\\u2010-\\u2015\\u2212\\u30FC\\uFF0D\";\nvar SLASHES = \"\\uFF0F/\";\nvar DOTS = \"\\uFF0E.\";\nexport var WHITESPACE = \" \\xA0\\xAD\\u200B\\u2060\\u3000\";\nvar BRACKETS = \"()\\uFF08\\uFF09\\uFF3B\\uFF3D\\\\[\\\\]\"; // export const OPENING_BRACKETS = '(\\uFF08\\uFF3B\\\\\\['\n\nvar TILDES = \"~\\u2053\\u223C\\uFF5E\"; // Regular expression of acceptable punctuation found in phone numbers. This\n// excludes punctuation found as a leading character only. This consists of dash\n// characters, white space characters, full stops, slashes, square brackets,\n// parentheses and tildes. Full-width variants are also present.\n\nexport var VALID_PUNCTUATION = \"\".concat(DASHES).concat(SLASHES).concat(DOTS).concat(WHITESPACE).concat(BRACKETS).concat(TILDES);\nexport var PLUS_CHARS = \"+\\uFF0B\"; // const LEADING_PLUS_CHARS_PATTERN = new RegExp('^[' + PLUS_CHARS + ']+')\n//# sourceMappingURL=constants.js.map","import Metadata from '../metadata.js';\nimport { VALID_DIGITS } from '../constants.js';\nvar CAPTURING_DIGIT_PATTERN = new RegExp('([' + VALID_DIGITS + '])');\nexport default function stripIddPrefix(number, country, callingCode, metadata) {\n  if (!country) {\n    return;\n  } // Check if the number is IDD-prefixed.\n\n\n  var countryMetadata = new Metadata(metadata);\n  countryMetadata.selectNumberingPlan(country, callingCode);\n  var IDDPrefixPattern = new RegExp(countryMetadata.IDDPrefix());\n\n  if (number.search(IDDPrefixPattern) !== 0) {\n    return;\n  } // Strip IDD prefix.\n\n\n  number = number.slice(number.match(IDDPrefixPattern)[0].length); // If there're any digits after an IDD prefix,\n  // then those digits are a country calling code.\n  // Since no country code starts with a `0`,\n  // the code below validates that the next digit (if present) is not `0`.\n\n  var matchedGroups = number.match(CAPTURING_DIGIT_PATTERN);\n\n  if (matchedGroups && matchedGroups[1] != null && matchedGroups[1].length > 0) {\n    if (matchedGroups[1] === '0') {\n      return;\n    }\n  }\n\n  return number;\n}\n//# sourceMappingURL=stripIddPrefix.js.map","/**\r\n * Strips any national prefix (such as 0, 1) present in a\r\n * (possibly incomplete) number provided.\r\n * \"Carrier codes\" are only used  in Colombia and Brazil,\r\n * and only when dialing within those countries from a mobile phone to a fixed line number.\r\n * Sometimes it won't actually strip national prefix\r\n * and will instead prepend some digits to the `number`:\r\n * for example, when number `2345678` is passed with `VI` country selected,\r\n * it will return `{ number: \"3402345678\" }`, because `340` area code is prepended.\r\n * @param {string} number — National number digits.\r\n * @param {object} metadata — Metadata with country selected.\r\n * @return {object} `{ nationalNumber: string, nationalPrefix: string? carrierCode: string? }`. Even if a national prefix was extracted, it's not necessarily present in the returned object, so don't rely on its presence in the returned object in order to find out whether a national prefix has been extracted or not.\r\n */\nexport default function extractNationalNumberFromPossiblyIncompleteNumber(number, metadata) {\n  if (number && metadata.numberingPlan.nationalPrefixForParsing()) {\n    // See METADATA.md for the description of\n    // `national_prefix_for_parsing` and `national_prefix_transform_rule`.\n    // Attempt to parse the first digits as a national prefix.\n    var prefixPattern = new RegExp('^(?:' + metadata.numberingPlan.nationalPrefixForParsing() + ')');\n    var prefixMatch = prefixPattern.exec(number);\n\n    if (prefixMatch) {\n      var nationalNumber;\n      var carrierCode; // https://gitlab.com/catamphetamine/libphonenumber-js/-/blob/master/METADATA.md#national_prefix_for_parsing--national_prefix_transform_rule\n      // If a `national_prefix_for_parsing` has any \"capturing groups\"\n      // then it means that the national (significant) number is equal to\n      // those \"capturing groups\" transformed via `national_prefix_transform_rule`,\n      // and nothing could be said about the actual national prefix:\n      // what is it and was it even there.\n      // If a `national_prefix_for_parsing` doesn't have any \"capturing groups\",\n      // then everything it matches is a national prefix.\n      // To determine whether `national_prefix_for_parsing` matched any\n      // \"capturing groups\", the value of the result of calling `.exec()`\n      // is looked at, and if it has non-undefined values where there're\n      // \"capturing groups\" in the regular expression, then it means\n      // that \"capturing groups\" have been matched.\n      // It's not possible to tell whether there'll be any \"capturing gropus\"\n      // before the matching process, because a `national_prefix_for_parsing`\n      // could exhibit both behaviors.\n\n      var capturedGroupsCount = prefixMatch.length - 1;\n      var hasCapturedGroups = capturedGroupsCount > 0 && prefixMatch[capturedGroupsCount];\n\n      if (metadata.nationalPrefixTransformRule() && hasCapturedGroups) {\n        nationalNumber = number.replace(prefixPattern, metadata.nationalPrefixTransformRule()); // If there's more than one captured group,\n        // then carrier code is the second one.\n\n        if (capturedGroupsCount > 1) {\n          carrierCode = prefixMatch[1];\n        }\n      } // If there're no \"capturing groups\",\n      // or if there're \"capturing groups\" but no\n      // `national_prefix_transform_rule`,\n      // then just strip the national prefix from the number,\n      // and possibly a carrier code.\n      // Seems like there could be more.\n      else {\n        // `prefixBeforeNationalNumber` is the whole substring matched by\n        // the `national_prefix_for_parsing` regular expression.\n        // There seem to be no guarantees that it's just a national prefix.\n        // For example, if there's a carrier code, it's gonna be a\n        // part of `prefixBeforeNationalNumber` too.\n        var prefixBeforeNationalNumber = prefixMatch[0];\n        nationalNumber = number.slice(prefixBeforeNationalNumber.length); // If there's at least one captured group,\n        // then carrier code is the first one.\n\n        if (hasCapturedGroups) {\n          carrierCode = prefixMatch[1];\n        }\n      } // Tries to guess whether a national prefix was present in the input.\n      // This is not something copy-pasted from Google's library:\n      // they don't seem to have an equivalent for that.\n      // So this isn't an \"officially approved\" way of doing something like that.\n      // But since there seems no other existing method, this library uses it.\n\n\n      var nationalPrefix;\n\n      if (hasCapturedGroups) {\n        var possiblePositionOfTheFirstCapturedGroup = number.indexOf(prefixMatch[1]);\n        var possibleNationalPrefix = number.slice(0, possiblePositionOfTheFirstCapturedGroup); // Example: an Argentinian (AR) phone number `0111523456789`.\n        // `prefixMatch[0]` is `01115`, and `$1` is `11`,\n        // and the rest of the phone number is `23456789`.\n        // The national number is transformed via `9$1` to `91123456789`.\n        // National prefix `0` is detected being present at the start.\n        // if (possibleNationalPrefix.indexOf(metadata.numberingPlan.nationalPrefix()) === 0) {\n\n        if (possibleNationalPrefix === metadata.numberingPlan.nationalPrefix()) {\n          nationalPrefix = metadata.numberingPlan.nationalPrefix();\n        }\n      } else {\n        nationalPrefix = prefixMatch[0];\n      }\n\n      return {\n        nationalNumber: nationalNumber,\n        nationalPrefix: nationalPrefix,\n        carrierCode: carrierCode\n      };\n    }\n  }\n\n  return {\n    nationalNumber: number\n  };\n}\n//# sourceMappingURL=extractNationalNumberFromPossiblyIncompleteNumber.js.map","import extractNationalNumberFromPossiblyIncompleteNumber from './extractNationalNumberFromPossiblyIncompleteNumber.js';\nimport matchesEntirely from './matchesEntirely.js';\nimport checkNumberLength from './checkNumberLength.js';\n/**\r\n * Strips national prefix and carrier code from a complete phone number.\r\n * The difference from the non-\"FromCompleteNumber\" function is that\r\n * it won't extract national prefix if the resultant number is too short\r\n * to be a complete number for the selected phone numbering plan.\r\n * @param  {string} number — Complete phone number digits.\r\n * @param  {Metadata} metadata — Metadata with a phone numbering plan selected.\r\n * @return {object} `{ nationalNumber: string, carrierCode: string? }`.\r\n */\n\nexport default function extractNationalNumber(number, metadata) {\n  // Parsing national prefixes and carrier codes\n  // is only required for local phone numbers\n  // but some people don't understand that\n  // and sometimes write international phone numbers\n  // with national prefixes (or maybe even carrier codes).\n  // http://ucken.blogspot.ru/2016/03/trunk-prefixes-in-skype4b.html\n  // Google's original library forgives such mistakes\n  // and so does this library, because it has been requested:\n  // https://github.com/catamphetamine/libphonenumber-js/issues/127\n  var _extractNationalNumbe = extractNationalNumberFromPossiblyIncompleteNumber(number, metadata),\n      carrierCode = _extractNationalNumbe.carrierCode,\n      nationalNumber = _extractNationalNumbe.nationalNumber;\n\n  if (nationalNumber !== number) {\n    if (!shouldHaveExtractedNationalPrefix(number, nationalNumber, metadata)) {\n      // Don't strip the national prefix.\n      return {\n        nationalNumber: number\n      };\n    } // Check the national (significant) number length after extracting national prefix and carrier code.\n    // Legacy generated metadata (before `1.0.18`) didn't support the \"possible lengths\" feature.\n\n\n    if (metadata.possibleLengths()) {\n      // The number remaining after stripping the national prefix and carrier code\n      // should be long enough to have a possible length for the country.\n      // Otherwise, don't strip the national prefix and carrier code,\n      // since the original number could be a valid number.\n      // This check has been copy-pasted \"as is\" from Google's original library:\n      // https://github.com/google/libphonenumber/blob/876268eb1ad6cdc1b7b5bef17fc5e43052702d57/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L3236-L3250\n      // It doesn't check for the \"possibility\" of the original `number`.\n      // I guess it's fine not checking that one. It works as is anyway.\n      if (!isPossibleIncompleteNationalNumber(nationalNumber, metadata)) {\n        // Don't strip the national prefix.\n        return {\n          nationalNumber: number\n        };\n      }\n    }\n  }\n\n  return {\n    nationalNumber: nationalNumber,\n    carrierCode: carrierCode\n  };\n} // In some countries, the same digit could be a national prefix\n// or a leading digit of a valid phone number.\n// For example, in Russia, national prefix is `8`,\n// and also `800 555 35 35` is a valid number\n// in which `8` is not a national prefix, but the first digit\n// of a national (significant) number.\n// Same's with Belarus:\n// `82004910060` is a valid national (significant) number,\n// but `2004910060` is not.\n// To support such cases (to prevent the code from always stripping\n// national prefix), a condition is imposed: a national prefix\n// is not extracted when the original number is \"viable\" and the\n// resultant number is not, a \"viable\" national number being the one\n// that matches `national_number_pattern`.\n\nfunction shouldHaveExtractedNationalPrefix(nationalNumberBefore, nationalNumberAfter, metadata) {\n  // The equivalent in Google's code is:\n  // https://github.com/google/libphonenumber/blob/e326fa1fc4283bb05eb35cb3c15c18f98a31af33/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L2969-L3004\n  if (matchesEntirely(nationalNumberBefore, metadata.nationalNumberPattern()) && !matchesEntirely(nationalNumberAfter, metadata.nationalNumberPattern())) {\n    return false;\n  } // This \"is possible\" national number (length) check has been commented out\n  // because it's superceded by the (effectively) same check done in the\n  // `extractNationalNumber()` function after it calls `shouldHaveExtractedNationalPrefix()`.\n  // In other words, why run the same check twice if it could only be run once.\n  // // Check the national (significant) number length after extracting national prefix and carrier code.\n  // // Fixes a minor \"weird behavior\" bug: https://gitlab.com/catamphetamine/libphonenumber-js/-/issues/57\n  // // (Legacy generated metadata (before `1.0.18`) didn't support the \"possible lengths\" feature).\n  // if (metadata.possibleLengths()) {\n  // \tif (isPossibleIncompleteNationalNumber(nationalNumberBefore, metadata) &&\n  // \t\t!isPossibleIncompleteNationalNumber(nationalNumberAfter, metadata)) {\n  // \t\treturn false\n  // \t}\n  // }\n\n\n  return true;\n}\n\nfunction isPossibleIncompleteNationalNumber(nationalNumber, metadata) {\n  switch (checkNumberLength(nationalNumber, metadata)) {\n    case 'TOO_SHORT':\n    case 'INVALID_LENGTH':\n      // This library ignores \"local-only\" phone numbers (for simplicity).\n      // See the readme for more info on what are \"local-only\" phone numbers.\n      // case 'IS_POSSIBLE_LOCAL_ONLY':\n      return false;\n\n    default:\n      return true;\n  }\n}\n//# sourceMappingURL=extractNationalNumber.js.map","import Metadata from '../metadata.js';\nimport matchesEntirely from './matchesEntirely.js';\nimport extractNationalNumber from './extractNationalNumber.js';\nimport checkNumberLength from './checkNumberLength.js';\nimport getCountryCallingCode from '../getCountryCallingCode.js';\n/**\r\n * Sometimes some people incorrectly input international phone numbers\r\n * without the leading `+`. This function corrects such input.\r\n * @param  {string} number — Phone number digits.\r\n * @param  {string?} country\r\n * @param  {string?} callingCode\r\n * @param  {object} metadata\r\n * @return {object} `{ countryCallingCode: string?, number: string }`.\r\n */\n\nexport default function extractCountryCallingCodeFromInternationalNumberWithoutPlusSign(number, country, callingCode, metadata) {\n  var countryCallingCode = country ? getCountryCallingCode(country, metadata) : callingCode;\n\n  if (number.indexOf(countryCallingCode) === 0) {\n    metadata = new Metadata(metadata);\n    metadata.selectNumberingPlan(country, callingCode);\n    var possibleShorterNumber = number.slice(countryCallingCode.length);\n\n    var _extractNationalNumbe = extractNationalNumber(possibleShorterNumber, metadata),\n        possibleShorterNationalNumber = _extractNationalNumbe.nationalNumber;\n\n    var _extractNationalNumbe2 = extractNationalNumber(number, metadata),\n        nationalNumber = _extractNationalNumbe2.nationalNumber; // If the number was not valid before but is valid now,\n    // or if it was too long before, we consider the number\n    // with the country calling code stripped to be a better result\n    // and keep that instead.\n    // For example, in Germany (+49), `49` is a valid area code,\n    // so if a number starts with `49`, it could be both a valid\n    // national German number or an international number without\n    // a leading `+`.\n\n\n    if (!matchesEntirely(nationalNumber, metadata.nationalNumberPattern()) && matchesEntirely(possibleShorterNationalNumber, metadata.nationalNumberPattern()) || checkNumberLength(nationalNumber, metadata) === 'TOO_LONG') {\n      return {\n        countryCallingCode: countryCallingCode,\n        number: possibleShorterNumber\n      };\n    }\n  }\n\n  return {\n    number: number\n  };\n}\n//# sourceMappingURL=extractCountryCallingCodeFromInternationalNumberWithoutPlusSign.js.map","import stripIddPrefix from './stripIddPrefix.js';\nimport extractCountryCallingCodeFromInternationalNumberWithoutPlusSign from './extractCountryCallingCodeFromInternationalNumberWithoutPlusSign.js';\nimport Metadata from '../metadata.js';\nimport { MAX_LENGTH_COUNTRY_CODE } from '../constants.js';\n/**\r\n * Converts a phone number digits (possibly with a `+`)\r\n * into a calling code and the rest phone number digits.\r\n * The \"rest phone number digits\" could include\r\n * a national prefix, carrier code, and national\r\n * (significant) number.\r\n * @param  {string} number — Phone number digits (possibly with a `+`).\r\n * @param  {string} [country] — Default country.\r\n * @param  {string} [callingCode] — Default calling code (some phone numbering plans are non-geographic).\r\n * @param  {object} metadata\r\n * @return {object} `{ countryCallingCodeSource: string?, countryCallingCode: string?, number: string }`\r\n * @example\r\n * // Returns `{ countryCallingCode: \"1\", number: \"2133734253\" }`.\r\n * extractCountryCallingCode('2133734253', 'US', null, metadata)\r\n * extractCountryCallingCode('2133734253', null, '1', metadata)\r\n * extractCountryCallingCode('+12133734253', null, null, metadata)\r\n * extractCountryCallingCode('+12133734253', 'RU', null, metadata)\r\n */\n\nexport default function extractCountryCallingCode(number, country, callingCode, metadata) {\n  if (!number) {\n    return {};\n  }\n\n  var isNumberWithIddPrefix; // If this is not an international phone number,\n  // then either extract an \"IDD\" prefix, or extract a\n  // country calling code from a number by autocorrecting it\n  // by prepending a leading `+` in cases when it starts\n  // with the country calling code.\n  // https://wikitravel.org/en/International_dialling_prefix\n  // https://github.com/catamphetamine/libphonenumber-js/issues/376\n\n  if (number[0] !== '+') {\n    // Convert an \"out-of-country\" dialing phone number\n    // to a proper international phone number.\n    var numberWithoutIDD = stripIddPrefix(number, country, callingCode, metadata); // If an IDD prefix was stripped then\n    // convert the number to international one\n    // for subsequent parsing.\n\n    if (numberWithoutIDD && numberWithoutIDD !== number) {\n      isNumberWithIddPrefix = true;\n      number = '+' + numberWithoutIDD;\n    } else {\n      // Check to see if the number starts with the country calling code\n      // for the default country. If so, we remove the country calling code,\n      // and do some checks on the validity of the number before and after.\n      // https://github.com/catamphetamine/libphonenumber-js/issues/376\n      if (country || callingCode) {\n        var _extractCountryCallin = extractCountryCallingCodeFromInternationalNumberWithoutPlusSign(number, country, callingCode, metadata),\n            countryCallingCode = _extractCountryCallin.countryCallingCode,\n            shorterNumber = _extractCountryCallin.number;\n\n        if (countryCallingCode) {\n          return {\n            countryCallingCodeSource: 'FROM_NUMBER_WITHOUT_PLUS_SIGN',\n            countryCallingCode: countryCallingCode,\n            number: shorterNumber\n          };\n        }\n      }\n\n      return {\n        // No need to set it to `UNSPECIFIED`. It can be just `undefined`.\n        // countryCallingCodeSource: 'UNSPECIFIED',\n        number: number\n      };\n    }\n  } // Fast abortion: country codes do not begin with a '0'\n\n\n  if (number[1] === '0') {\n    return {};\n  }\n\n  metadata = new Metadata(metadata); // The thing with country phone codes\n  // is that they are orthogonal to each other\n  // i.e. there's no such country phone code A\n  // for which country phone code B exists\n  // where B starts with A.\n  // Therefore, while scanning digits,\n  // if a valid country code is found,\n  // that means that it is the country code.\n  //\n\n  var i = 2;\n\n  while (i - 1 <= MAX_LENGTH_COUNTRY_CODE && i <= number.length) {\n    var _countryCallingCode = number.slice(1, i);\n\n    if (metadata.hasCallingCode(_countryCallingCode)) {\n      metadata.selectNumberingPlan(_countryCallingCode);\n      return {\n        countryCallingCodeSource: isNumberWithIddPrefix ? 'FROM_NUMBER_WITH_IDD' : 'FROM_NUMBER_WITH_PLUS_SIGN',\n        countryCallingCode: _countryCallingCode,\n        number: number.slice(i)\n      };\n    }\n\n    i++;\n  }\n\n  return {};\n} // The possible values for the returned `countryCallingCodeSource` are:\n//\n// Copy-pasted from:\n// https://github.com/google/libphonenumber/blob/master/resources/phonenumber.proto\n//\n// // The source from which the country_code is derived. This is not set in the\n// // general parsing method, but in the method that parses and keeps raw_input.\n// // New fields could be added upon request.\n// enum CountryCodeSource {\n//  // Default value returned if this is not set, because the phone number was\n//  // created using parse, not parseAndKeepRawInput. hasCountryCodeSource will\n//  // return false if this is the case.\n//  UNSPECIFIED = 0;\n//\n//  // The country_code is derived based on a phone number with a leading \"+\",\n//  // e.g. the French number \"+33 1 42 68 53 00\".\n//  FROM_NUMBER_WITH_PLUS_SIGN = 1;\n//\n//  // The country_code is derived based on a phone number with a leading IDD,\n//  // e.g. the French number \"011 33 1 42 68 53 00\", as it is dialled from US.\n//  FROM_NUMBER_WITH_IDD = 5;\n//\n//  // The country_code is derived based on a phone number without a leading\n//  // \"+\", e.g. the French number \"33 1 42 68 53 00\" when defaultCountry is\n//  // supplied as France.\n//  FROM_NUMBER_WITHOUT_PLUS_SIGN = 10;\n//\n//  // The country_code is derived NOT based on the phone number itself, but\n//  // from the defaultCountry parameter provided in the parsing function by the\n//  // clients. This happens mostly for numbers written in the national format\n//  // (without country code). For example, this would be set when parsing the\n//  // French number \"01 42 68 53 00\", when defaultCountry is supplied as\n//  // France.\n//  FROM_DEFAULT_COUNTRY = 20;\n// }\n//# sourceMappingURL=extractCountryCallingCode.js.map","import { VALID_PUNCTUATION } from '../constants.js'; // Removes brackets and replaces dashes with spaces.\n//\n// E.g. \"(999) 111-22-33\" -> \"999 111 22 33\"\n//\n// For some reason Google's metadata contains `<intlFormat/>`s with brackets and dashes.\n// Meanwhile, there's no single opinion about using punctuation in international phone numbers.\n//\n// For example, Google's `<intlFormat/>` for USA is `+1 213-373-4253`.\n// And here's a quote from WikiPedia's \"North American Numbering Plan\" page:\n// https://en.wikipedia.org/wiki/North_American_Numbering_Plan\n//\n// \"The country calling code for all countries participating in the NANP is 1.\n// In international format, an NANP number should be listed as +1 301 555 01 00,\n// where 301 is an area code (Maryland).\"\n//\n// I personally prefer the international format without any punctuation.\n// For example, brackets are remnants of the old age, meaning that the\n// phone number part in brackets (so called \"area code\") can be omitted\n// if dialing within the same \"area\".\n// And hyphens were clearly introduced for splitting local numbers into memorizable groups.\n// For example, remembering \"5553535\" is difficult but \"555-35-35\" is much simpler.\n// Imagine a man taking a bus from home to work and seeing an ad with a phone number.\n// He has a couple of seconds to memorize that number until it passes by.\n// If it were spaces instead of hyphens the man wouldn't necessarily get it,\n// but with hyphens instead of spaces the grouping is more explicit.\n// I personally think that hyphens introduce visual clutter,\n// so I prefer replacing them with spaces in international numbers.\n// In the modern age all output is done on displays where spaces are clearly distinguishable\n// so hyphens can be safely replaced with spaces without losing any legibility.\n//\n\nexport default function applyInternationalSeparatorStyle(formattedNumber) {\n  return formattedNumber.replace(new RegExp(\"[\".concat(VALID_PUNCTUATION, \"]+\"), 'g'), ' ').trim();\n}\n//# sourceMappingURL=applyInternationalSeparatorStyle.js.map","import applyInternationalSeparatorStyle from './applyInternationalSeparatorStyle.js'; // This was originally set to $1 but there are some countries for which the\n// first group is not used in the national pattern (e.g. Argentina) so the $1\n// group does not match correctly. Therefore, we use `\\d`, so that the first\n// group actually used in the pattern will be matched.\n\nexport var FIRST_GROUP_PATTERN = /(\\$\\d)/;\nexport default function formatNationalNumberUsingFormat(number, format, _ref) {\n  var useInternationalFormat = _ref.useInternationalFormat,\n      withNationalPrefix = _ref.withNationalPrefix,\n      carrierCode = _ref.carrierCode,\n      metadata = _ref.metadata;\n  var formattedNumber = number.replace(new RegExp(format.pattern()), useInternationalFormat ? format.internationalFormat() : // This library doesn't use `domestic_carrier_code_formatting_rule`,\n  // because that one is only used when formatting phone numbers\n  // for dialing from a mobile phone, and this is not a dialing library.\n  // carrierCode && format.domesticCarrierCodeFormattingRule()\n  // \t// First, replace the $CC in the formatting rule with the desired carrier code.\n  // \t// Then, replace the $FG in the formatting rule with the first group\n  // \t// and the carrier code combined in the appropriate way.\n  // \t? format.format().replace(FIRST_GROUP_PATTERN, format.domesticCarrierCodeFormattingRule().replace('$CC', carrierCode))\n  // \t: (\n  // \t\twithNationalPrefix && format.nationalPrefixFormattingRule()\n  // \t\t\t? format.format().replace(FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule())\n  // \t\t\t: format.format()\n  // \t)\n  withNationalPrefix && format.nationalPrefixFormattingRule() ? format.format().replace(FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule()) : format.format());\n\n  if (useInternationalFormat) {\n    return applyInternationalSeparatorStyle(formattedNumber);\n  }\n\n  return formattedNumber;\n}\n//# sourceMappingURL=formatNationalNumberUsingFormat.js.map","import Metadata from '../metadata.js';\n/**\r\n * Pattern that makes it easy to distinguish whether a region has a single\r\n * international dialing prefix or not. If a region has a single international\r\n * prefix (e.g. 011 in USA), it will be represented as a string that contains\r\n * a sequence of ASCII digits, and possibly a tilde, which signals waiting for\r\n * the tone. If there are multiple available international prefixes in a\r\n * region, they will be represented as a regex string that always contains one\r\n * or more characters that are not ASCII digits or a tilde.\r\n */\n\nvar SINGLE_IDD_PREFIX_REG_EXP = /^[\\d]+(?:[~\\u2053\\u223C\\uFF5E][\\d]+)?$/; // For regions that have multiple IDD prefixes\n// a preferred IDD prefix is returned.\n\nexport default function getIddPrefix(country, callingCode, metadata) {\n  var countryMetadata = new Metadata(metadata);\n  countryMetadata.selectNumberingPlan(country, callingCode);\n\n  if (countryMetadata.defaultIDDPrefix()) {\n    return countryMetadata.defaultIDDPrefix();\n  }\n\n  if (SINGLE_IDD_PREFIX_REG_EXP.test(countryMetadata.IDDPrefix())) {\n    return countryMetadata.IDDPrefix();\n  }\n}\n//# sourceMappingURL=getIddPrefix.js.map","import { VALID_DIGITS } from '../../constants.js'; // The RFC 3966 format for extensions.\n\nvar RFC3966_EXTN_PREFIX = ';ext=';\n/**\r\n * Helper method for constructing regular expressions for parsing. Creates\r\n * an expression that captures up to max_length digits.\r\n * @return {string} RegEx pattern to capture extension digits.\r\n */\n\nvar getExtensionDigitsPattern = function getExtensionDigitsPattern(maxLength) {\n  return \"([\".concat(VALID_DIGITS, \"]{1,\").concat(maxLength, \"})\");\n};\n/**\r\n * Helper initialiser method to create the regular-expression pattern to match\r\n * extensions.\r\n * Copy-pasted from Google's `libphonenumber`:\r\n * https://github.com/google/libphonenumber/blob/55b2646ec9393f4d3d6661b9c82ef9e258e8b829/javascript/i18n/phonenumbers/phonenumberutil.js#L759-L766\r\n * @return {string} RegEx pattern to capture extensions.\r\n */\n\n\nexport default function createExtensionPattern(purpose) {\n  // We cap the maximum length of an extension based on the ambiguity of the way\n  // the extension is prefixed. As per ITU, the officially allowed length for\n  // extensions is actually 40, but we don't support this since we haven't seen real\n  // examples and this introduces many false interpretations as the extension labels\n  // are not standardized.\n\n  /** @type {string} */\n  var extLimitAfterExplicitLabel = '20';\n  /** @type {string} */\n\n  var extLimitAfterLikelyLabel = '15';\n  /** @type {string} */\n\n  var extLimitAfterAmbiguousChar = '9';\n  /** @type {string} */\n\n  var extLimitWhenNotSure = '6';\n  /** @type {string} */\n\n  var possibleSeparatorsBetweenNumberAndExtLabel = \"[ \\xA0\\\\t,]*\"; // Optional full stop (.) or colon, followed by zero or more spaces/tabs/commas.\n\n  /** @type {string} */\n\n  var possibleCharsAfterExtLabel = \"[:\\\\.\\uFF0E]?[ \\xA0\\\\t,-]*\";\n  /** @type {string} */\n\n  var optionalExtnSuffix = \"#?\"; // Here the extension is called out in more explicit way, i.e mentioning it obvious\n  // patterns like \"ext.\".\n\n  /** @type {string} */\n\n  var explicitExtLabels = \"(?:e?xt(?:ensi(?:o\\u0301?|\\xF3))?n?|\\uFF45?\\uFF58\\uFF54\\uFF4E?|\\u0434\\u043E\\u0431|anexo)\"; // One-character symbols that can be used to indicate an extension, and less\n  // commonly used or more ambiguous extension labels.\n\n  /** @type {string} */\n\n  var ambiguousExtLabels = \"(?:[x\\uFF58#\\uFF03~\\uFF5E]|int|\\uFF49\\uFF4E\\uFF54)\"; // When extension is not separated clearly.\n\n  /** @type {string} */\n\n  var ambiguousSeparator = \"[- ]+\"; // This is the same as possibleSeparatorsBetweenNumberAndExtLabel, but not matching\n  // comma as extension label may have it.\n\n  /** @type {string} */\n\n  var possibleSeparatorsNumberExtLabelNoComma = \"[ \\xA0\\\\t]*\"; // \",,\" is commonly used for auto dialling the extension when connected. First\n  // comma is matched through possibleSeparatorsBetweenNumberAndExtLabel, so we do\n  // not repeat it here. Semi-colon works in Iphone and Android also to pop up a\n  // button with the extension number following.\n\n  /** @type {string} */\n\n  var autoDiallingAndExtLabelsFound = \"(?:,{2}|;)\";\n  /** @type {string} */\n\n  var rfcExtn = RFC3966_EXTN_PREFIX + getExtensionDigitsPattern(extLimitAfterExplicitLabel);\n  /** @type {string} */\n\n  var explicitExtn = possibleSeparatorsBetweenNumberAndExtLabel + explicitExtLabels + possibleCharsAfterExtLabel + getExtensionDigitsPattern(extLimitAfterExplicitLabel) + optionalExtnSuffix;\n  /** @type {string} */\n\n  var ambiguousExtn = possibleSeparatorsBetweenNumberAndExtLabel + ambiguousExtLabels + possibleCharsAfterExtLabel + getExtensionDigitsPattern(extLimitAfterAmbiguousChar) + optionalExtnSuffix;\n  /** @type {string} */\n\n  var americanStyleExtnWithSuffix = ambiguousSeparator + getExtensionDigitsPattern(extLimitWhenNotSure) + \"#\";\n  /** @type {string} */\n\n  var autoDiallingExtn = possibleSeparatorsNumberExtLabelNoComma + autoDiallingAndExtLabelsFound + possibleCharsAfterExtLabel + getExtensionDigitsPattern(extLimitAfterLikelyLabel) + optionalExtnSuffix;\n  /** @type {string} */\n\n  var onlyCommasExtn = possibleSeparatorsNumberExtLabelNoComma + \"(?:,)+\" + possibleCharsAfterExtLabel + getExtensionDigitsPattern(extLimitAfterAmbiguousChar) + optionalExtnSuffix; // The first regular expression covers RFC 3966 format, where the extension is added\n  // using \";ext=\". The second more generic where extension is mentioned with explicit\n  // labels like \"ext:\". In both the above cases we allow more numbers in extension than\n  // any other extension labels. The third one captures when single character extension\n  // labels or less commonly used labels are used. In such cases we capture fewer\n  // extension digits in order to reduce the chance of falsely interpreting two\n  // numbers beside each other as a number + extension. The fourth one covers the\n  // special case of American numbers where the extension is written with a hash\n  // at the end, such as \"- 503#\". The fifth one is exclusively for extension\n  // autodialling formats which are used when dialling and in this case we accept longer\n  // extensions. The last one is more liberal on the number of commas that acts as\n  // extension labels, so we have a strict cap on the number of digits in such extensions.\n\n  return rfcExtn + \"|\" + explicitExtn + \"|\" + ambiguousExtn + \"|\" + americanStyleExtnWithSuffix + \"|\" + autoDiallingExtn + \"|\" + onlyCommasExtn;\n}\n//# sourceMappingURL=createExtensionPattern.js.map","import { MIN_LENGTH_FOR_NSN, VALID_DIGITS, VALID_PUNCTUATION, PLUS_CHARS } from '../constants.js';\nimport createExtensionPattern from './extension/createExtensionPattern.js'; //  Regular expression of viable phone numbers. This is location independent.\n//  Checks we have at least three leading digits, and only valid punctuation,\n//  alpha characters and digits in the phone number. Does not include extension\n//  data. The symbol 'x' is allowed here as valid punctuation since it is often\n//  used as a placeholder for carrier codes, for example in Brazilian phone\n//  numbers. We also allow multiple '+' characters at the start.\n//\n//  Corresponds to the following:\n//  [digits]{minLengthNsn}|\n//  plus_sign*\n//  (([punctuation]|[star])*[digits]){3,}([punctuation]|[star]|[digits]|[alpha])*\n//\n//  The first reg-ex is to allow short numbers (two digits long) to be parsed if\n//  they are entered as \"15\" etc, but only if there is no punctuation in them.\n//  The second expression restricts the number of digits to three or more, but\n//  then allows them to be in international form, and to have alpha-characters\n//  and punctuation. We split up the two reg-exes here and combine them when\n//  creating the reg-ex VALID_PHONE_NUMBER_PATTERN itself so we can prefix it\n//  with ^ and append $ to each branch.\n//\n//  \"Note VALID_PUNCTUATION starts with a -,\n//   so must be the first in the range\" (c) Google devs.\n//  (wtf did they mean by saying that; probably nothing)\n//\n\nvar MIN_LENGTH_PHONE_NUMBER_PATTERN = '[' + VALID_DIGITS + ']{' + MIN_LENGTH_FOR_NSN + '}'; //\n// And this is the second reg-exp:\n// (see MIN_LENGTH_PHONE_NUMBER_PATTERN for a full description of this reg-exp)\n//\n\nexport var VALID_PHONE_NUMBER = '[' + PLUS_CHARS + ']{0,1}' + '(?:' + '[' + VALID_PUNCTUATION + ']*' + '[' + VALID_DIGITS + ']' + '){3,}' + '[' + VALID_PUNCTUATION + VALID_DIGITS + ']*'; // This regular expression isn't present in Google's `libphonenumber`\n// and is only used to determine whether the phone number being input\n// is too short for it to even consider it a \"valid\" number.\n// This is just a way to differentiate between a really invalid phone\n// number like \"abcde\" and a valid phone number that a user has just\n// started inputting, like \"+1\" or \"1\": both these cases would be\n// considered `NOT_A_NUMBER` by Google's `libphonenumber`, but this\n// library can provide a more detailed error message — whether it's\n// really \"not a number\", or is it just a start of a valid phone number.\n\nvar VALID_PHONE_NUMBER_START_REG_EXP = new RegExp('^' + '[' + PLUS_CHARS + ']{0,1}' + '(?:' + '[' + VALID_PUNCTUATION + ']*' + '[' + VALID_DIGITS + ']' + '){1,2}' + '$', 'i');\nexport var VALID_PHONE_NUMBER_WITH_EXTENSION = VALID_PHONE_NUMBER + // Phone number extensions\n'(?:' + createExtensionPattern() + ')?'; // The combined regular expression for valid phone numbers:\n//\n\nvar VALID_PHONE_NUMBER_PATTERN = new RegExp( // Either a short two-digit-only phone number\n'^' + MIN_LENGTH_PHONE_NUMBER_PATTERN + '$' + '|' + // Or a longer fully parsed phone number (min 3 characters)\n'^' + VALID_PHONE_NUMBER_WITH_EXTENSION + '$', 'i'); // Checks to see if the string of characters could possibly be a phone number at\n// all. At the moment, checks to see that the string begins with at least 2\n// digits, ignoring any punctuation commonly found in phone numbers. This method\n// does not require the number to be normalized in advance - but does assume\n// that leading non-number symbols have been removed, such as by the method\n// `extract_possible_number`.\n//\n\nexport default function isViablePhoneNumber(number) {\n  return number.length >= MIN_LENGTH_FOR_NSN && VALID_PHONE_NUMBER_PATTERN.test(number);\n} // This is just a way to differentiate between a really invalid phone\n// number like \"abcde\" and a valid phone number that a user has just\n// started inputting, like \"+1\" or \"1\": both these cases would be\n// considered `NOT_A_NUMBER` by Google's `libphonenumber`, but this\n// library can provide a more detailed error message — whether it's\n// really \"not a number\", or is it just a start of a valid phone number.\n\nexport function isViablePhoneNumberStart(number) {\n  return VALID_PHONE_NUMBER_START_REG_EXP.test(number);\n}\n//# sourceMappingURL=isViablePhoneNumber.js.map","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport isViablePhoneNumber from './isViablePhoneNumber.js'; // https://www.ietf.org/rfc/rfc3966.txt\n\n/**\r\n * @param  {string} text - Phone URI (RFC 3966).\r\n * @return {object} `{ ?number, ?ext }`.\r\n */\n\nexport function parseRFC3966(text) {\n  var number;\n  var ext; // Replace \"tel:\" with \"tel=\" for parsing convenience.\n\n  text = text.replace(/^tel:/, 'tel=');\n\n  for (var _iterator = _createForOfIteratorHelperLoose(text.split(';')), _step; !(_step = _iterator()).done;) {\n    var part = _step.value;\n\n    var _part$split = part.split('='),\n        _part$split2 = _slicedToArray(_part$split, 2),\n        name = _part$split2[0],\n        value = _part$split2[1];\n\n    switch (name) {\n      case 'tel':\n        number = value;\n        break;\n\n      case 'ext':\n        ext = value;\n        break;\n\n      case 'phone-context':\n        // Only \"country contexts\" are supported.\n        // \"Domain contexts\" are ignored.\n        if (value[0] === '+') {\n          number = value + number;\n        }\n\n        break;\n    }\n  } // If the phone number is not viable, then abort.\n\n\n  if (!isViablePhoneNumber(number)) {\n    return {};\n  }\n\n  var result = {\n    number: number\n  };\n\n  if (ext) {\n    result.ext = ext;\n  }\n\n  return result;\n}\n/**\r\n * @param  {object} - `{ ?number, ?extension }`.\r\n * @return {string} Phone URI (RFC 3966).\r\n */\n\nexport function formatRFC3966(_ref) {\n  var number = _ref.number,\n      ext = _ref.ext;\n\n  if (!number) {\n    return '';\n  }\n\n  if (number[0] !== '+') {\n    throw new Error(\"\\\"formatRFC3966()\\\" expects \\\"number\\\" to be in E.164 format.\");\n  }\n\n  return \"tel:\".concat(number).concat(ext ? ';ext=' + ext : '');\n}\n//# sourceMappingURL=RFC3966.js.map","function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// This is a port of Google Android `libphonenumber`'s\n// `phonenumberutil.js` of December 31th, 2018.\n//\n// https://github.com/googlei18n/libphonenumber/commits/master/javascript/i18n/phonenumbers/phonenumberutil.js\nimport matchesEntirely from './helpers/matchesEntirely.js';\nimport formatNationalNumberUsingFormat from './helpers/formatNationalNumberUsingFormat.js';\nimport Metadata, { getCountryCallingCode } from './metadata.js';\nimport getIddPrefix from './helpers/getIddPrefix.js';\nimport { formatRFC3966 } from './helpers/RFC3966.js';\nvar DEFAULT_OPTIONS = {\n  formatExtension: function formatExtension(formattedNumber, extension, metadata) {\n    return \"\".concat(formattedNumber).concat(metadata.ext()).concat(extension);\n  }\n};\n/**\r\n * Formats a phone number.\r\n *\r\n * format(phoneNumberInstance, 'INTERNATIONAL', { ..., v2: true }, metadata)\r\n * format(phoneNumberInstance, 'NATIONAL', { ..., v2: true }, metadata)\r\n *\r\n * format({ phone: '8005553535', country: 'RU' }, 'INTERNATIONAL', { ... }, metadata)\r\n * format({ phone: '8005553535', country: 'RU' }, 'NATIONAL', undefined, metadata)\r\n *\r\n * @param  {object|PhoneNumber} input — If `options.v2: true` flag is passed, the `input` should be a `PhoneNumber` instance. Otherwise, it should be an object of shape `{ phone: '...', country: '...' }`.\r\n * @param  {string} format\r\n * @param  {object} [options]\r\n * @param  {object} metadata\r\n * @return {string}\r\n */\n\nexport default function formatNumber(input, format, options, metadata) {\n  // Apply default options.\n  if (options) {\n    options = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);\n  } else {\n    options = DEFAULT_OPTIONS;\n  }\n\n  metadata = new Metadata(metadata);\n\n  if (input.country && input.country !== '001') {\n    // Validate `input.country`.\n    if (!metadata.hasCountry(input.country)) {\n      throw new Error(\"Unknown country: \".concat(input.country));\n    }\n\n    metadata.country(input.country);\n  } else if (input.countryCallingCode) {\n    metadata.selectNumberingPlan(input.countryCallingCode);\n  } else return input.phone || '';\n\n  var countryCallingCode = metadata.countryCallingCode();\n  var nationalNumber = options.v2 ? input.nationalNumber : input.phone; // This variable should have been declared inside `case`s\n  // but Babel has a bug and it says \"duplicate variable declaration\".\n\n  var number;\n\n  switch (format) {\n    case 'NATIONAL':\n      // Legacy argument support.\n      // (`{ country: ..., phone: '' }`)\n      if (!nationalNumber) {\n        return '';\n      }\n\n      number = formatNationalNumber(nationalNumber, input.carrierCode, 'NATIONAL', metadata, options);\n      return addExtension(number, input.ext, metadata, options.formatExtension);\n\n    case 'INTERNATIONAL':\n      // Legacy argument support.\n      // (`{ country: ..., phone: '' }`)\n      if (!nationalNumber) {\n        return \"+\".concat(countryCallingCode);\n      }\n\n      number = formatNationalNumber(nationalNumber, null, 'INTERNATIONAL', metadata, options);\n      number = \"+\".concat(countryCallingCode, \" \").concat(number);\n      return addExtension(number, input.ext, metadata, options.formatExtension);\n\n    case 'E.164':\n      // `E.164` doesn't define \"phone number extensions\".\n      return \"+\".concat(countryCallingCode).concat(nationalNumber);\n\n    case 'RFC3966':\n      return formatRFC3966({\n        number: \"+\".concat(countryCallingCode).concat(nationalNumber),\n        ext: input.ext\n      });\n    // For reference, here's Google's IDD formatter:\n    // https://github.com/google/libphonenumber/blob/32719cf74e68796788d1ca45abc85dcdc63ba5b9/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L1546\n    // Not saying that this IDD formatter replicates it 1:1, but it seems to work.\n    // Who would even need to format phone numbers in IDD format anyway?\n\n    case 'IDD':\n      if (!options.fromCountry) {\n        return; // throw new Error('`fromCountry` option not passed for IDD-prefixed formatting.')\n      }\n\n      var formattedNumber = formatIDD(nationalNumber, input.carrierCode, countryCallingCode, options.fromCountry, metadata);\n      return addExtension(formattedNumber, input.ext, metadata, options.formatExtension);\n\n    default:\n      throw new Error(\"Unknown \\\"format\\\" argument passed to \\\"formatNumber()\\\": \\\"\".concat(format, \"\\\"\"));\n  }\n}\n\nfunction formatNationalNumber(number, carrierCode, formatAs, metadata, options) {\n  var format = chooseFormatForNumber(metadata.formats(), number);\n\n  if (!format) {\n    return number;\n  }\n\n  return formatNationalNumberUsingFormat(number, format, {\n    useInternationalFormat: formatAs === 'INTERNATIONAL',\n    withNationalPrefix: format.nationalPrefixIsOptionalWhenFormattingInNationalFormat() && options && options.nationalPrefix === false ? false : true,\n    carrierCode: carrierCode,\n    metadata: metadata\n  });\n}\n\nexport function chooseFormatForNumber(availableFormats, nationalNnumber) {\n  for (var _iterator = _createForOfIteratorHelperLoose(availableFormats), _step; !(_step = _iterator()).done;) {\n    var format = _step.value;\n\n    // Validate leading digits.\n    // The test case for \"else path\" could be found by searching for\n    // \"format.leadingDigitsPatterns().length === 0\".\n    if (format.leadingDigitsPatterns().length > 0) {\n      // The last leading_digits_pattern is used here, as it is the most detailed\n      var lastLeadingDigitsPattern = format.leadingDigitsPatterns()[format.leadingDigitsPatterns().length - 1]; // If leading digits don't match then move on to the next phone number format\n\n      if (nationalNnumber.search(lastLeadingDigitsPattern) !== 0) {\n        continue;\n      }\n    } // Check that the national number matches the phone number format regular expression\n\n\n    if (matchesEntirely(nationalNnumber, format.pattern())) {\n      return format;\n    }\n  }\n}\n\nfunction addExtension(formattedNumber, ext, metadata, formatExtension) {\n  return ext ? formatExtension(formattedNumber, ext, metadata) : formattedNumber;\n}\n\nfunction formatIDD(nationalNumber, carrierCode, countryCallingCode, fromCountry, metadata) {\n  var fromCountryCallingCode = getCountryCallingCode(fromCountry, metadata.metadata); // When calling within the same country calling code.\n\n  if (fromCountryCallingCode === countryCallingCode) {\n    var formattedNumber = formatNationalNumber(nationalNumber, carrierCode, 'NATIONAL', metadata); // For NANPA regions, return the national format for these regions\n    // but prefix it with the country calling code.\n\n    if (countryCallingCode === '1') {\n      return countryCallingCode + ' ' + formattedNumber;\n    } // If regions share a country calling code, the country calling code need\n    // not be dialled. This also applies when dialling within a region, so this\n    // if clause covers both these cases. Technically this is the case for\n    // dialling from La Reunion to other overseas departments of France (French\n    // Guiana, Martinique, Guadeloupe), but not vice versa - so we don't cover\n    // this edge case for now and for those cases return the version including\n    // country calling code. Details here:\n    // http://www.petitfute.com/voyage/225-info-pratiques-reunion\n    //\n\n\n    return formattedNumber;\n  }\n\n  var iddPrefix = getIddPrefix(fromCountry, undefined, metadata.metadata);\n\n  if (iddPrefix) {\n    return \"\".concat(iddPrefix, \" \").concat(countryCallingCode, \" \").concat(formatNationalNumber(nationalNumber, null, 'INTERNATIONAL', metadata));\n  }\n}\n//# sourceMappingURL=format.js.map","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nimport Metadata, { validateMetadata } from './metadata.js';\nimport isPossibleNumber from './isPossible.js';\nimport isValidNumber from './isValid.js'; // import checkNumberLength from './helpers/checkNumberLength.js'\n\nimport getNumberType from './helpers/getNumberType.js';\nimport getPossibleCountriesForNumber from './helpers/getPossibleCountriesForNumber.js';\nimport extractCountryCallingCode from './helpers/extractCountryCallingCode.js';\nimport isObject from './helpers/isObject.js';\nimport formatNumber from './format.js';\nvar USE_NON_GEOGRAPHIC_COUNTRY_CODE = false;\n\nvar PhoneNumber = /*#__PURE__*/function () {\n  /**\r\n   * @param  {string} countryOrCountryCallingCode\r\n   * @param  {string} nationalNumber\r\n   * @param  {object} metadata — Metadata JSON\r\n   * @return {PhoneNumber}\r\n   */\n  function PhoneNumber(countryOrCountryCallingCode, nationalNumber, metadata) {\n    _classCallCheck(this, PhoneNumber);\n\n    // Validate `countryOrCountryCallingCode` argument.\n    if (!countryOrCountryCallingCode) {\n      throw new TypeError('First argument is required');\n    }\n\n    if (typeof countryOrCountryCallingCode !== 'string') {\n      throw new TypeError('First argument must be a string');\n    } // In case of public API use: `constructor(number, metadata)`.\n    // Transform the arguments from `constructor(number, metadata)` to\n    // `constructor(countryOrCountryCallingCode, nationalNumber, metadata)`.\n\n\n    if (typeof countryOrCountryCallingCode === 'string') {\n      if (countryOrCountryCallingCode[0] === '+' && !nationalNumber) {\n        throw new TypeError('`metadata` argument not passed');\n      }\n\n      if (isObject(nationalNumber) && isObject(nationalNumber.countries)) {\n        metadata = nationalNumber;\n        var e164Number = countryOrCountryCallingCode;\n\n        if (!E164_NUMBER_REGEXP.test(e164Number)) {\n          throw new Error('Invalid `number` argument passed: must consist of a \"+\" followed by digits');\n        }\n\n        var _extractCountryCallin = extractCountryCallingCode(e164Number, undefined, undefined, metadata),\n            _countryCallingCode = _extractCountryCallin.countryCallingCode,\n            number = _extractCountryCallin.number;\n\n        nationalNumber = number;\n        countryOrCountryCallingCode = _countryCallingCode;\n\n        if (!nationalNumber) {\n          throw new Error('Invalid `number` argument passed: too short');\n        }\n      }\n    } // Validate `nationalNumber` argument.\n\n\n    if (!nationalNumber) {\n      throw new TypeError('`nationalNumber` argument is required');\n    }\n\n    if (typeof nationalNumber !== 'string') {\n      throw new TypeError('`nationalNumber` argument must be a string');\n    } // Validate `metadata` argument.\n\n\n    validateMetadata(metadata); // Initialize properties.\n\n    var _getCountryAndCountry = getCountryAndCountryCallingCode(countryOrCountryCallingCode, metadata),\n        country = _getCountryAndCountry.country,\n        countryCallingCode = _getCountryAndCountry.countryCallingCode;\n\n    this.country = country;\n    this.countryCallingCode = countryCallingCode;\n    this.nationalNumber = nationalNumber;\n    this.number = '+' + this.countryCallingCode + this.nationalNumber; // Exclude `metadata` property output from `PhoneNumber.toString()`\n    // so that it doesn't clutter the console output of Node.js.\n    // Previously, when Node.js did `console.log(new PhoneNumber(...))`,\n    // it would output the whole internal structure of the `metadata` object.\n\n    this.getMetadata = function () {\n      return metadata;\n    };\n  }\n\n  _createClass(PhoneNumber, [{\n    key: \"setExt\",\n    value: function setExt(ext) {\n      this.ext = ext;\n    }\n  }, {\n    key: \"getPossibleCountries\",\n    value: function getPossibleCountries() {\n      if (this.country) {\n        return [this.country];\n      }\n\n      return getPossibleCountriesForNumber(this.countryCallingCode, this.nationalNumber, this.getMetadata());\n    }\n  }, {\n    key: \"isPossible\",\n    value: function isPossible() {\n      return isPossibleNumber(this, {\n        v2: true\n      }, this.getMetadata());\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid() {\n      return isValidNumber(this, {\n        v2: true\n      }, this.getMetadata());\n    }\n  }, {\n    key: \"isNonGeographic\",\n    value: function isNonGeographic() {\n      var metadata = new Metadata(this.getMetadata());\n      return metadata.isNonGeographicCallingCode(this.countryCallingCode);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(phoneNumber) {\n      return this.number === phoneNumber.number && this.ext === phoneNumber.ext;\n    } // This function was originally meant to be an equivalent for `validatePhoneNumberLength()`,\n    // but later it was found out that it doesn't include the possible `TOO_SHORT` result\n    // returned from `parsePhoneNumberWithError()` in the original `validatePhoneNumberLength()`,\n    // so eventually I simply commented out this method from the `PhoneNumber` class\n    // and just left the `validatePhoneNumberLength()` function, even though that one would require\n    // and additional step to also validate the actual country / calling code of the phone number.\n    // validateLength() {\n    // \tconst metadata = new Metadata(this.getMetadata())\n    // \tmetadata.selectNumberingPlan(this.countryCallingCode)\n    // \tconst result = checkNumberLength(this.nationalNumber, metadata)\n    // \tif (result !== 'IS_POSSIBLE') {\n    // \t\treturn result\n    // \t}\n    // }\n\n  }, {\n    key: \"getType\",\n    value: function getType() {\n      return getNumberType(this, {\n        v2: true\n      }, this.getMetadata());\n    }\n  }, {\n    key: \"format\",\n    value: function format(_format, options) {\n      return formatNumber(this, _format, options ? _objectSpread(_objectSpread({}, options), {}, {\n        v2: true\n      }) : {\n        v2: true\n      }, this.getMetadata());\n    }\n  }, {\n    key: \"formatNational\",\n    value: function formatNational(options) {\n      return this.format('NATIONAL', options);\n    }\n  }, {\n    key: \"formatInternational\",\n    value: function formatInternational(options) {\n      return this.format('INTERNATIONAL', options);\n    }\n  }, {\n    key: \"getURI\",\n    value: function getURI(options) {\n      return this.format('RFC3966', options);\n    }\n  }]);\n\n  return PhoneNumber;\n}();\n\nexport { PhoneNumber as default };\n\nvar isCountryCode = function isCountryCode(value) {\n  return /^[A-Z]{2}$/.test(value);\n};\n\nfunction getCountryAndCountryCallingCode(countryOrCountryCallingCode, metadataJson) {\n  var country;\n  var countryCallingCode;\n  var metadata = new Metadata(metadataJson); // If country code is passed then derive `countryCallingCode` from it.\n  // Also store the country code as `.country`.\n\n  if (isCountryCode(countryOrCountryCallingCode)) {\n    country = countryOrCountryCallingCode;\n    metadata.selectNumberingPlan(country);\n    countryCallingCode = metadata.countryCallingCode();\n  } else {\n    countryCallingCode = countryOrCountryCallingCode;\n    /* istanbul ignore if */\n\n    if (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\n      if (metadata.isNonGeographicCallingCode(countryCallingCode)) {\n        country = '001';\n      }\n    }\n  }\n\n  return {\n    country: country,\n    countryCallingCode: countryCallingCode\n  };\n}\n\nvar E164_NUMBER_REGEXP = /^\\+\\d+$/;\n//# sourceMappingURL=PhoneNumber.js.map","function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n// https://stackoverflow.com/a/46971044/970769\n// \"Breaking changes in Typescript 2.1\"\n// \"Extending built-ins like Error, Array, and Map may no longer work.\"\n// \"As a recommendation, you can manually adjust the prototype immediately after any super(...) calls.\"\n// https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\nvar ParseError = /*#__PURE__*/function (_Error) {\n  _inherits(ParseError, _Error);\n\n  var _super = _createSuper(ParseError);\n\n  function ParseError(code) {\n    var _this;\n\n    _classCallCheck(this, ParseError);\n\n    _this = _super.call(this, code); // Set the prototype explicitly.\n    // Any subclass of FooError will have to manually set the prototype as well.\n\n    Object.setPrototypeOf(_assertThisInitialized(_this), ParseError.prototype);\n    _this.name = _this.constructor.name;\n    return _this;\n  }\n\n  return _createClass(ParseError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nexport { ParseError as default };\n//# sourceMappingURL=ParseError.js.map","import createExtensionPattern from './createExtensionPattern.js'; // Regexp of all known extension prefixes used by different regions followed by\n// 1 or more valid digits, for use when parsing.\n\nvar EXTN_PATTERN = new RegExp('(?:' + createExtensionPattern() + ')$', 'i'); // Strips any extension (as in, the part of the number dialled after the call is\n// connected, usually indicated with extn, ext, x or similar) from the end of\n// the number, and returns it.\n\nexport default function extractExtension(number) {\n  var start = number.search(EXTN_PATTERN);\n\n  if (start < 0) {\n    return {};\n  } // If we find a potential extension, and the number preceding this is a viable\n  // number, we assume it is an extension.\n\n\n  var numberWithoutExtension = number.slice(0, start);\n  var matches = number.match(EXTN_PATTERN);\n  var i = 1;\n\n  while (i < matches.length) {\n    if (matches[i]) {\n      return {\n        number: numberWithoutExtension,\n        ext: matches[i]\n      };\n    }\n\n    i++;\n  }\n}\n//# sourceMappingURL=extractExtension.js.map","function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n// These mappings map a character (key) to a specific digit that should\n// replace it for normalization purposes. Non-European digits that\n// may be used in phone numbers are mapped to a European equivalent.\n//\n// E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\n//\nexport var DIGITS = {\n  '0': '0',\n  '1': '1',\n  '2': '2',\n  '3': '3',\n  '4': '4',\n  '5': '5',\n  '6': '6',\n  '7': '7',\n  '8': '8',\n  '9': '9',\n  \"\\uFF10\": '0',\n  // Fullwidth digit 0\n  \"\\uFF11\": '1',\n  // Fullwidth digit 1\n  \"\\uFF12\": '2',\n  // Fullwidth digit 2\n  \"\\uFF13\": '3',\n  // Fullwidth digit 3\n  \"\\uFF14\": '4',\n  // Fullwidth digit 4\n  \"\\uFF15\": '5',\n  // Fullwidth digit 5\n  \"\\uFF16\": '6',\n  // Fullwidth digit 6\n  \"\\uFF17\": '7',\n  // Fullwidth digit 7\n  \"\\uFF18\": '8',\n  // Fullwidth digit 8\n  \"\\uFF19\": '9',\n  // Fullwidth digit 9\n  \"\\u0660\": '0',\n  // Arabic-indic digit 0\n  \"\\u0661\": '1',\n  // Arabic-indic digit 1\n  \"\\u0662\": '2',\n  // Arabic-indic digit 2\n  \"\\u0663\": '3',\n  // Arabic-indic digit 3\n  \"\\u0664\": '4',\n  // Arabic-indic digit 4\n  \"\\u0665\": '5',\n  // Arabic-indic digit 5\n  \"\\u0666\": '6',\n  // Arabic-indic digit 6\n  \"\\u0667\": '7',\n  // Arabic-indic digit 7\n  \"\\u0668\": '8',\n  // Arabic-indic digit 8\n  \"\\u0669\": '9',\n  // Arabic-indic digit 9\n  \"\\u06F0\": '0',\n  // Eastern-Arabic digit 0\n  \"\\u06F1\": '1',\n  // Eastern-Arabic digit 1\n  \"\\u06F2\": '2',\n  // Eastern-Arabic digit 2\n  \"\\u06F3\": '3',\n  // Eastern-Arabic digit 3\n  \"\\u06F4\": '4',\n  // Eastern-Arabic digit 4\n  \"\\u06F5\": '5',\n  // Eastern-Arabic digit 5\n  \"\\u06F6\": '6',\n  // Eastern-Arabic digit 6\n  \"\\u06F7\": '7',\n  // Eastern-Arabic digit 7\n  \"\\u06F8\": '8',\n  // Eastern-Arabic digit 8\n  \"\\u06F9\": '9' // Eastern-Arabic digit 9\n\n};\nexport function parseDigit(character) {\n  return DIGITS[character];\n}\n/**\r\n * Parses phone number digits from a string.\r\n * Drops all punctuation leaving only digits.\r\n * Also converts wide-ascii and arabic-indic numerals to conventional numerals.\r\n * E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\r\n * @param  {string} string\r\n * @return {string}\r\n * @example\r\n * ```js\r\n * parseDigits('8 (800) 555')\r\n * // Outputs '8800555'.\r\n * ```\r\n */\n\nexport default function parseDigits(string) {\n  var result = ''; // Using `.split('')` here instead of normal `for ... of`\n  // because the importing application doesn't neccessarily include an ES6 polyfill.\n  // The `.split('')` approach discards \"exotic\" UTF-8 characters\n  // (the ones consisting of four bytes) but digits\n  // (including non-European ones) don't fall into that range\n  // so such \"exotic\" characters would be discarded anyway.\n\n  for (var _iterator = _createForOfIteratorHelperLoose(string.split('')), _step; !(_step = _iterator()).done;) {\n    var character = _step.value;\n    var digit = parseDigit(character);\n\n    if (digit) {\n      result += digit;\n    }\n  }\n\n  return result;\n}\n//# sourceMappingURL=parseDigits.js.map","function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { parseDigit } from './helpers/parseDigits.js';\n/**\r\n * Parses phone number characters from a string.\r\n * Drops all punctuation leaving only digits and the leading `+` sign (if any).\r\n * Also converts wide-ascii and arabic-indic numerals to conventional numerals.\r\n * E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\r\n * @param  {string} string\r\n * @return {string}\r\n * @example\r\n * ```js\r\n * // Outputs '8800555'.\r\n * parseIncompletePhoneNumber('8 (800) 555')\r\n * // Outputs '+7800555'.\r\n * parseIncompletePhoneNumber('+7 800 555')\r\n * ```\r\n */\n\nexport default function parseIncompletePhoneNumber(string) {\n  var result = ''; // Using `.split('')` here instead of normal `for ... of`\n  // because the importing application doesn't neccessarily include an ES6 polyfill.\n  // The `.split('')` approach discards \"exotic\" UTF-8 characters\n  // (the ones consisting of four bytes) but digits\n  // (including non-European ones) don't fall into that range\n  // so such \"exotic\" characters would be discarded anyway.\n\n  for (var _iterator = _createForOfIteratorHelperLoose(string.split('')), _step; !(_step = _iterator()).done;) {\n    var character = _step.value;\n    result += parsePhoneNumberCharacter(character, result) || '';\n  }\n\n  return result;\n}\n/**\r\n * Parses next character while parsing phone number digits (including a `+`)\r\n * from text: discards everything except `+` and digits, and `+` is only allowed\r\n * at the start of a phone number.\r\n * For example, is used in `react-phone-number-input` where it uses\r\n * [`input-format`](https://gitlab.com/catamphetamine/input-format).\r\n * @param  {string} character - Yet another character from raw input string.\r\n * @param  {string?} prevParsedCharacters - Previous parsed characters.\r\n * @param  {function?} emitEvent - An optional \"emit event\" function.\r\n * @return {string?} The parsed character.\r\n */\n\nexport function parsePhoneNumberCharacter(character, prevParsedCharacters, emitEvent) {\n  // Only allow a leading `+`.\n  if (character === '+') {\n    // If this `+` is not the first parsed character\n    // then discard it.\n    if (prevParsedCharacters) {\n      // `emitEvent` argument was added to this `export`ed function on Dec 26th, 2023.\n      // Any 3rd-party code that used to `import` and call this function before that\n      // won't be passing any `emitEvent` argument.\n      //\n      // The addition of the `emitEvent` argument was to fix the slightly-weird behavior\n      // of parsing an input string when the user inputs something like `\"2+7\"\n      // https://github.com/catamphetamine/react-phone-number-input/issues/437\n      //\n      // If the parser encounters an unexpected `+` in a string being parsed\n      // then it simply discards that out-of-place `+` and any following characters.\n      //\n      if (typeof emitEvent === 'function') {\n        emitEvent('end');\n      }\n\n      return;\n    }\n\n    return '+';\n  } // Allow digits.\n\n\n  return parseDigit(character);\n}\n//# sourceMappingURL=parseIncompletePhoneNumber.js.map","function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport Metadata from '../metadata.js';\nimport getNumberType from './getNumberType.js';\nexport default function getCountryByNationalNumber(nationalPhoneNumber, _ref) {\n  var countries = _ref.countries,\n      defaultCountry = _ref.defaultCountry,\n      metadata = _ref.metadata;\n  // Re-create `metadata` because it will be selecting a `country`.\n  metadata = new Metadata(metadata); // const matchingCountries = []\n\n  for (var _iterator = _createForOfIteratorHelperLoose(countries), _step; !(_step = _iterator()).done;) {\n    var country = _step.value;\n    metadata.country(country); // \"Leading digits\" patterns are only defined for about 20% of all countries.\n    // By definition, matching \"leading digits\" is a sufficient but not a necessary\n    // condition for a phone number to belong to a country.\n    // The point of \"leading digits\" check is that it's the fastest one to get a match.\n    // https://gitlab.com/catamphetamine/libphonenumber-js/blob/master/METADATA.md#leading_digits\n    // I'd suppose that \"leading digits\" patterns are mutually exclusive for different countries\n    // because of the intended use of that feature.\n\n    if (metadata.leadingDigits()) {\n      if (nationalPhoneNumber && nationalPhoneNumber.search(metadata.leadingDigits()) === 0) {\n        return country;\n      }\n    } // Else perform full validation with all of those\n    // fixed-line/mobile/etc regular expressions.\n    else if (getNumberType({\n      phone: nationalPhoneNumber,\n      country: country\n    }, undefined, metadata.metadata)) {\n      // If both the `defaultCountry` and the \"main\" one match the phone number,\n      // don't prefer the `defaultCountry` over the \"main\" one.\n      // https://gitlab.com/catamphetamine/libphonenumber-js/-/issues/154\n      return country; // // If the `defaultCountry` is among the `matchingCountries` then return it.\n      // if (defaultCountry) {\n      // \tif (country === defaultCountry) {\n      // \t\treturn country\n      // \t}\n      // \tmatchingCountries.push(country)\n      // } else {\n      // \treturn country\n      // }\n    }\n  } // // Return the first (\"main\") one of the `matchingCountries`.\n  // if (matchingCountries.length > 0) {\n  // \treturn matchingCountries[0]\n  // }\n\n}\n//# sourceMappingURL=getCountryByNationalNumber.js.map","import getCountryByNationalNumber from './getCountryByNationalNumber.js';\nvar USE_NON_GEOGRAPHIC_COUNTRY_CODE = false;\nexport default function getCountryByCallingCode(callingCode, _ref) {\n  var nationalPhoneNumber = _ref.nationalNumber,\n      defaultCountry = _ref.defaultCountry,\n      metadata = _ref.metadata;\n\n  /* istanbul ignore if */\n  if (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\n    if (metadata.isNonGeographicCallingCode(callingCode)) {\n      return '001';\n    }\n  }\n\n  var possibleCountries = metadata.getCountryCodesForCallingCode(callingCode);\n\n  if (!possibleCountries) {\n    return;\n  } // If there's just one country corresponding to the country code,\n  // then just return it, without further phone number digits validation.\n\n\n  if (possibleCountries.length === 1) {\n    return possibleCountries[0];\n  }\n\n  return getCountryByNationalNumber(nationalPhoneNumber, {\n    countries: possibleCountries,\n    defaultCountry: defaultCountry,\n    metadata: metadata.metadata\n  });\n}\n//# sourceMappingURL=getCountryByCallingCode.js.map","// When phone numbers are written in `RFC3966` format — `\"tel:+12133734253\"` —\n// they can have their \"calling code\" part written separately in a `phone-context` parameter.\n// Example: `\"tel:12133734253;phone-context=+1\"`.\n// This function parses the full phone number from the local number and the `phone-context`\n// when the `phone-context` contains a `+` sign.\nimport { VALID_DIGITS // PLUS_CHARS\n} from '../constants.js';\nexport var PLUS_SIGN = '+';\nvar RFC3966_VISUAL_SEPARATOR_ = '[\\\\-\\\\.\\\\(\\\\)]?';\nvar RFC3966_PHONE_DIGIT_ = '(' + '[' + VALID_DIGITS + ']' + '|' + RFC3966_VISUAL_SEPARATOR_ + ')';\nvar RFC3966_GLOBAL_NUMBER_DIGITS_ = '^' + '\\\\' + PLUS_SIGN + RFC3966_PHONE_DIGIT_ + '*' + '[' + VALID_DIGITS + ']' + RFC3966_PHONE_DIGIT_ + '*' + '$';\n/**\r\n * Regular expression of valid global-number-digits for the phone-context\r\n * parameter, following the syntax defined in RFC3966.\r\n */\n\nvar RFC3966_GLOBAL_NUMBER_DIGITS_PATTERN_ = new RegExp(RFC3966_GLOBAL_NUMBER_DIGITS_, 'g'); // In this port of Google's library, we don't accept alpha characters in phone numbers.\n// const ALPHANUM_ = VALID_ALPHA_ + VALID_DIGITS\n\nvar ALPHANUM_ = VALID_DIGITS;\nvar RFC3966_DOMAINLABEL_ = '[' + ALPHANUM_ + ']+((\\\\-)*[' + ALPHANUM_ + '])*';\nvar VALID_ALPHA_ = 'a-zA-Z';\nvar RFC3966_TOPLABEL_ = '[' + VALID_ALPHA_ + ']+((\\\\-)*[' + ALPHANUM_ + '])*';\nvar RFC3966_DOMAINNAME_ = '^(' + RFC3966_DOMAINLABEL_ + '\\\\.)*' + RFC3966_TOPLABEL_ + '\\\\.?$';\n/**\r\n * Regular expression of valid domainname for the phone-context parameter,\r\n * following the syntax defined in RFC3966.\r\n */\n\nvar RFC3966_DOMAINNAME_PATTERN_ = new RegExp(RFC3966_DOMAINNAME_, 'g');\nexport var RFC3966_PREFIX_ = 'tel:';\nexport var RFC3966_PHONE_CONTEXT_ = ';phone-context=';\nexport var RFC3966_ISDN_SUBADDRESS_ = ';isub=';\n/**\r\n * Extracts the value of the phone-context parameter of `numberToExtractFrom`,\r\n * following the syntax defined in RFC3966.\r\n *\r\n * @param {string} numberToExtractFrom\r\n * @return {string|null} the extracted string (possibly empty), or `null` if no phone-context parameter is found.\r\n */\n\nexport default function extractPhoneContext(numberToExtractFrom) {\n  var indexOfPhoneContext = numberToExtractFrom.indexOf(RFC3966_PHONE_CONTEXT_); // If no phone-context parameter is present\n\n  if (indexOfPhoneContext < 0) {\n    return null;\n  }\n\n  var phoneContextStart = indexOfPhoneContext + RFC3966_PHONE_CONTEXT_.length; // If phone-context parameter is empty\n\n  if (phoneContextStart >= numberToExtractFrom.length) {\n    return '';\n  }\n\n  var phoneContextEnd = numberToExtractFrom.indexOf(';', phoneContextStart); // If phone-context is not the last parameter\n\n  if (phoneContextEnd >= 0) {\n    return numberToExtractFrom.substring(phoneContextStart, phoneContextEnd);\n  } else {\n    return numberToExtractFrom.substring(phoneContextStart);\n  }\n}\n/**\r\n * Returns whether the value of phoneContext follows the syntax defined in RFC3966.\r\n *\r\n * @param {string|null} phoneContext\r\n * @return {boolean}\r\n */\n\nexport function isPhoneContextValid(phoneContext) {\n  if (phoneContext === null) {\n    return true;\n  }\n\n  if (phoneContext.length === 0) {\n    return false;\n  } // Does phone-context value match pattern of global-number-digits or domainname.\n\n\n  return RFC3966_GLOBAL_NUMBER_DIGITS_PATTERN_.test(phoneContext) || RFC3966_DOMAINNAME_PATTERN_.test(phoneContext);\n}\n//# sourceMappingURL=extractPhoneContext.js.map","import extractPhoneContext, { isPhoneContextValid, PLUS_SIGN, RFC3966_PREFIX_, RFC3966_PHONE_CONTEXT_, RFC3966_ISDN_SUBADDRESS_ } from './extractPhoneContext.js';\nimport ParseError from '../ParseError.js';\n/**\r\n * @param  {string} numberToParse\r\n * @param  {string} nationalNumber\r\n * @return {}\r\n */\n\nexport default function extractFormattedPhoneNumberFromPossibleRfc3966NumberUri(numberToParse, _ref) {\n  var extractFormattedPhoneNumber = _ref.extractFormattedPhoneNumber;\n  var phoneContext = extractPhoneContext(numberToParse);\n\n  if (!isPhoneContextValid(phoneContext)) {\n    throw new ParseError('NOT_A_NUMBER');\n  }\n\n  var phoneNumberString;\n\n  if (phoneContext === null) {\n    // Extract a possible number from the string passed in.\n    // (this strips leading characters that could not be the start of a phone number)\n    phoneNumberString = extractFormattedPhoneNumber(numberToParse) || '';\n  } else {\n    phoneNumberString = ''; // If the phone context contains a phone number prefix, we need to capture\n    // it, whereas domains will be ignored.\n\n    if (phoneContext.charAt(0) === PLUS_SIGN) {\n      phoneNumberString += phoneContext;\n    } // Now append everything between the \"tel:\" prefix and the phone-context.\n    // This should include the national number, an optional extension or\n    // isdn-subaddress component. Note we also handle the case when \"tel:\" is\n    // missing, as we have seen in some of the phone number inputs.\n    // In that case, we append everything from the beginning.\n\n\n    var indexOfRfc3966Prefix = numberToParse.indexOf(RFC3966_PREFIX_);\n    var indexOfNationalNumber; // RFC 3966 \"tel:\" prefix is preset at this stage because\n    // `isPhoneContextValid()` requires it to be present.\n\n    /* istanbul ignore else */\n\n    if (indexOfRfc3966Prefix >= 0) {\n      indexOfNationalNumber = indexOfRfc3966Prefix + RFC3966_PREFIX_.length;\n    } else {\n      indexOfNationalNumber = 0;\n    }\n\n    var indexOfPhoneContext = numberToParse.indexOf(RFC3966_PHONE_CONTEXT_);\n    phoneNumberString += numberToParse.substring(indexOfNationalNumber, indexOfPhoneContext);\n  } // Delete the isdn-subaddress and everything after it if it is present.\n  // Note extension won't appear at the same time with isdn-subaddress\n  // according to paragraph 5.3 of the RFC3966 spec.\n\n\n  var indexOfIsdn = phoneNumberString.indexOf(RFC3966_ISDN_SUBADDRESS_);\n\n  if (indexOfIsdn > 0) {\n    phoneNumberString = phoneNumberString.substring(0, indexOfIsdn);\n  } // If both phone context and isdn-subaddress are absent but other\n  // parameters are present, the parameters are left in nationalNumber.\n  // This is because we are concerned about deleting content from a potential\n  // number string when there is no strong evidence that the number is\n  // actually written in RFC3966.\n\n\n  if (phoneNumberString !== '') {\n    return phoneNumberString;\n  }\n}\n//# sourceMappingURL=extractFormattedPhoneNumberFromPossibleRfc3966NumberUri.js.map","// This is a port of Google Android `libphonenumber`'s\n// `phonenumberutil.js` of December 31th, 2018.\n//\n// https://github.com/googlei18n/libphonenumber/commits/master/javascript/i18n/phonenumbers/phonenumberutil.js\nimport { VALID_DIGITS, PLUS_CHARS, MIN_LENGTH_FOR_NSN, MAX_LENGTH_FOR_NSN } from './constants.js';\nimport ParseError from './ParseError.js';\nimport Metadata from './metadata.js';\nimport isViablePhoneNumber, { isViablePhoneNumberStart } from './helpers/isViablePhoneNumber.js';\nimport extractExtension from './helpers/extension/extractExtension.js';\nimport parseIncompletePhoneNumber from './parseIncompletePhoneNumber.js';\nimport getCountryCallingCode from './getCountryCallingCode.js';\nimport { isPossibleNumber } from './isPossible.js'; // import { parseRFC3966 } from './helpers/RFC3966.js'\n\nimport PhoneNumber from './PhoneNumber.js';\nimport matchesEntirely from './helpers/matchesEntirely.js';\nimport extractCountryCallingCode from './helpers/extractCountryCallingCode.js';\nimport extractNationalNumber from './helpers/extractNationalNumber.js';\nimport stripIddPrefix from './helpers/stripIddPrefix.js';\nimport getCountryByCallingCode from './helpers/getCountryByCallingCode.js';\nimport extractFormattedPhoneNumberFromPossibleRfc3966NumberUri from './helpers/extractFormattedPhoneNumberFromPossibleRfc3966NumberUri.js'; // We don't allow input strings for parsing to be longer than 250 chars.\n// This prevents malicious input from consuming CPU.\n\nvar MAX_INPUT_STRING_LENGTH = 250; // This consists of the plus symbol, digits, and arabic-indic digits.\n\nvar PHONE_NUMBER_START_PATTERN = new RegExp('[' + PLUS_CHARS + VALID_DIGITS + ']'); // Regular expression of trailing characters that we want to remove.\n// A trailing `#` is sometimes used when writing phone numbers with extensions in US.\n// Example: \"+1 (645) 123 1234-910#\" number has extension \"910\".\n\nvar AFTER_PHONE_NUMBER_END_PATTERN = new RegExp('[^' + VALID_DIGITS + '#' + ']+$');\nvar USE_NON_GEOGRAPHIC_COUNTRY_CODE = false; // Examples:\n//\n// ```js\n// parse('8 (800) 555-35-35', 'RU')\n// parse('8 (800) 555-35-35', 'RU', metadata)\n// parse('8 (800) 555-35-35', { country: { default: 'RU' } })\n// parse('8 (800) 555-35-35', { country: { default: 'RU' } }, metadata)\n// parse('+7 800 555 35 35')\n// parse('+7 800 555 35 35', metadata)\n// ```\n//\n\n/**\r\n * Parses a phone number.\r\n *\r\n * parse('123456789', { defaultCountry: 'RU', v2: true }, metadata)\r\n * parse('123456789', { defaultCountry: 'RU' }, metadata)\r\n * parse('123456789', undefined, metadata)\r\n *\r\n * @param  {string} input\r\n * @param  {object} [options]\r\n * @param  {object} metadata\r\n * @return {object|PhoneNumber?} If `options.v2: true` flag is passed, it returns a `PhoneNumber?` instance. Otherwise, returns an object of shape `{ phone: '...', country: '...' }` (or just `{}` if no phone number was parsed).\r\n */\n\nexport default function parse(text, options, metadata) {\n  // If assigning the `{}` default value is moved to the arguments above,\n  // code coverage would decrease for some weird reason.\n  options = options || {};\n  metadata = new Metadata(metadata); // Validate `defaultCountry`.\n\n  if (options.defaultCountry && !metadata.hasCountry(options.defaultCountry)) {\n    if (options.v2) {\n      throw new ParseError('INVALID_COUNTRY');\n    }\n\n    throw new Error(\"Unknown country: \".concat(options.defaultCountry));\n  } // Parse the phone number.\n\n\n  var _parseInput = parseInput(text, options.v2, options.extract),\n      formattedPhoneNumber = _parseInput.number,\n      ext = _parseInput.ext,\n      error = _parseInput.error; // If the phone number is not viable then return nothing.\n\n\n  if (!formattedPhoneNumber) {\n    if (options.v2) {\n      if (error === 'TOO_SHORT') {\n        throw new ParseError('TOO_SHORT');\n      }\n\n      throw new ParseError('NOT_A_NUMBER');\n    }\n\n    return {};\n  }\n\n  var _parsePhoneNumber = parsePhoneNumber(formattedPhoneNumber, options.defaultCountry, options.defaultCallingCode, metadata),\n      country = _parsePhoneNumber.country,\n      nationalNumber = _parsePhoneNumber.nationalNumber,\n      countryCallingCode = _parsePhoneNumber.countryCallingCode,\n      countryCallingCodeSource = _parsePhoneNumber.countryCallingCodeSource,\n      carrierCode = _parsePhoneNumber.carrierCode;\n\n  if (!metadata.hasSelectedNumberingPlan()) {\n    if (options.v2) {\n      throw new ParseError('INVALID_COUNTRY');\n    }\n\n    return {};\n  } // Validate national (significant) number length.\n\n\n  if (!nationalNumber || nationalNumber.length < MIN_LENGTH_FOR_NSN) {\n    // Won't throw here because the regexp already demands length > 1.\n\n    /* istanbul ignore if */\n    if (options.v2) {\n      throw new ParseError('TOO_SHORT');\n    } // Google's demo just throws an error in this case.\n\n\n    return {};\n  } // Validate national (significant) number length.\n  //\n  // A sidenote:\n  //\n  // They say that sometimes national (significant) numbers\n  // can be longer than `MAX_LENGTH_FOR_NSN` (e.g. in Germany).\n  // https://github.com/googlei18n/libphonenumber/blob/7e1748645552da39c4e1ba731e47969d97bdb539/resources/phonenumber.proto#L36\n  // Such numbers will just be discarded.\n  //\n\n\n  if (nationalNumber.length > MAX_LENGTH_FOR_NSN) {\n    if (options.v2) {\n      throw new ParseError('TOO_LONG');\n    } // Google's demo just throws an error in this case.\n\n\n    return {};\n  }\n\n  if (options.v2) {\n    var phoneNumber = new PhoneNumber(countryCallingCode, nationalNumber, metadata.metadata);\n\n    if (country) {\n      phoneNumber.country = country;\n    }\n\n    if (carrierCode) {\n      phoneNumber.carrierCode = carrierCode;\n    }\n\n    if (ext) {\n      phoneNumber.ext = ext;\n    }\n\n    phoneNumber.__countryCallingCodeSource = countryCallingCodeSource;\n    return phoneNumber;\n  } // Check if national phone number pattern matches the number.\n  // National number pattern is different for each country,\n  // even for those ones which are part of the \"NANPA\" group.\n\n\n  var valid = (options.extended ? metadata.hasSelectedNumberingPlan() : country) ? matchesEntirely(nationalNumber, metadata.nationalNumberPattern()) : false;\n\n  if (!options.extended) {\n    return valid ? result(country, nationalNumber, ext) : {};\n  } // isInternational: countryCallingCode !== undefined\n\n\n  return {\n    country: country,\n    countryCallingCode: countryCallingCode,\n    carrierCode: carrierCode,\n    valid: valid,\n    possible: valid ? true : options.extended === true && metadata.possibleLengths() && isPossibleNumber(nationalNumber, metadata) ? true : false,\n    phone: nationalNumber,\n    ext: ext\n  };\n}\n/**\r\n * Extracts a formatted phone number from text.\r\n * Doesn't guarantee that the extracted phone number\r\n * is a valid phone number (for example, doesn't validate its length).\r\n * @param  {string} text\r\n * @param  {boolean} [extract] — If `false`, then will parse the entire `text` as a phone number.\r\n * @param  {boolean} [throwOnError] — By default, it won't throw if the text is too long.\r\n * @return {string}\r\n * @example\r\n * // Returns \"(213) 373-4253\".\r\n * extractFormattedPhoneNumber(\"Call (213) 373-4253 for assistance.\")\r\n */\n\nfunction _extractFormattedPhoneNumber(text, extract, throwOnError) {\n  if (!text) {\n    return;\n  }\n\n  if (text.length > MAX_INPUT_STRING_LENGTH) {\n    if (throwOnError) {\n      throw new ParseError('TOO_LONG');\n    }\n\n    return;\n  }\n\n  if (extract === false) {\n    return text;\n  } // Attempt to extract a possible number from the string passed in\n\n\n  var startsAt = text.search(PHONE_NUMBER_START_PATTERN);\n\n  if (startsAt < 0) {\n    return;\n  }\n\n  return text // Trim everything to the left of the phone number\n  .slice(startsAt) // Remove trailing non-numerical characters\n  .replace(AFTER_PHONE_NUMBER_END_PATTERN, '');\n}\n/**\r\n * @param  {string} text - Input.\r\n * @param  {boolean} v2 - Legacy API functions don't pass `v2: true` flag.\r\n * @param  {boolean} [extract] - Whether to extract a phone number from `text`, or attempt to parse the entire text as a phone number.\r\n * @return {object} `{ ?number, ?ext }`.\r\n */\n\n\nfunction parseInput(text, v2, extract) {\n  // // Parse RFC 3966 phone number URI.\n  // if (text && text.indexOf('tel:') === 0) {\n  // \treturn parseRFC3966(text)\n  // }\n  // let number = extractFormattedPhoneNumber(text, extract, v2)\n  var number = extractFormattedPhoneNumberFromPossibleRfc3966NumberUri(text, {\n    extractFormattedPhoneNumber: function extractFormattedPhoneNumber(text) {\n      return _extractFormattedPhoneNumber(text, extract, v2);\n    }\n  }); // If the phone number is not viable, then abort.\n\n  if (!number) {\n    return {};\n  }\n\n  if (!isViablePhoneNumber(number)) {\n    if (isViablePhoneNumberStart(number)) {\n      return {\n        error: 'TOO_SHORT'\n      };\n    }\n\n    return {};\n  } // Attempt to parse extension first, since it doesn't require region-specific\n  // data and we want to have the non-normalised number here.\n\n\n  var withExtensionStripped = extractExtension(number);\n\n  if (withExtensionStripped.ext) {\n    return withExtensionStripped;\n  }\n\n  return {\n    number: number\n  };\n}\n/**\r\n * Creates `parse()` result object.\r\n */\n\n\nfunction result(country, nationalNumber, ext) {\n  var result = {\n    country: country,\n    phone: nationalNumber\n  };\n\n  if (ext) {\n    result.ext = ext;\n  }\n\n  return result;\n}\n/**\r\n * Parses a viable phone number.\r\n * @param {string} formattedPhoneNumber — Example: \"(213) 373-4253\".\r\n * @param {string} [defaultCountry]\r\n * @param {string} [defaultCallingCode]\r\n * @param {Metadata} metadata\r\n * @return {object} Returns `{ country: string?, countryCallingCode: string?, nationalNumber: string? }`.\r\n */\n\n\nfunction parsePhoneNumber(formattedPhoneNumber, defaultCountry, defaultCallingCode, metadata) {\n  // Extract calling code from phone number.\n  var _extractCountryCallin = extractCountryCallingCode(parseIncompletePhoneNumber(formattedPhoneNumber), defaultCountry, defaultCallingCode, metadata.metadata),\n      countryCallingCodeSource = _extractCountryCallin.countryCallingCodeSource,\n      countryCallingCode = _extractCountryCallin.countryCallingCode,\n      number = _extractCountryCallin.number; // Choose a country by `countryCallingCode`.\n\n\n  var country;\n\n  if (countryCallingCode) {\n    metadata.selectNumberingPlan(countryCallingCode);\n  } // If `formattedPhoneNumber` is passed in \"national\" format\n  // then `number` is defined and `countryCallingCode` is `undefined`.\n  else if (number && (defaultCountry || defaultCallingCode)) {\n    metadata.selectNumberingPlan(defaultCountry, defaultCallingCode);\n\n    if (defaultCountry) {\n      country = defaultCountry;\n    } else {\n      /* istanbul ignore if */\n      if (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\n        if (metadata.isNonGeographicCallingCode(defaultCallingCode)) {\n          country = '001';\n        }\n      }\n    }\n\n    countryCallingCode = defaultCallingCode || getCountryCallingCode(defaultCountry, metadata.metadata);\n  } else return {};\n\n  if (!number) {\n    return {\n      countryCallingCodeSource: countryCallingCodeSource,\n      countryCallingCode: countryCallingCode\n    };\n  }\n\n  var _extractNationalNumbe = extractNationalNumber(parseIncompletePhoneNumber(number), metadata),\n      nationalNumber = _extractNationalNumbe.nationalNumber,\n      carrierCode = _extractNationalNumbe.carrierCode; // Sometimes there are several countries\n  // corresponding to the same country phone code\n  // (e.g. NANPA countries all having `1` country phone code).\n  // Therefore, to reliably determine the exact country,\n  // national (significant) number should have been parsed first.\n  //\n  // When `metadata.json` is generated, all \"ambiguous\" country phone codes\n  // get their countries populated with the full set of\n  // \"phone number type\" regular expressions.\n  //\n\n\n  var exactCountry = getCountryByCallingCode(countryCallingCode, {\n    nationalNumber: nationalNumber,\n    defaultCountry: defaultCountry,\n    metadata: metadata\n  });\n\n  if (exactCountry) {\n    country = exactCountry;\n    /* istanbul ignore if */\n\n    if (exactCountry === '001') {// Can't happen with `USE_NON_GEOGRAPHIC_COUNTRY_CODE` being `false`.\n      // If `USE_NON_GEOGRAPHIC_COUNTRY_CODE` is set to `true` for some reason,\n      // then remove the \"istanbul ignore if\".\n    } else {\n      metadata.country(country);\n    }\n  }\n\n  return {\n    country: country,\n    countryCallingCode: countryCallingCode,\n    countryCallingCodeSource: countryCallingCodeSource,\n    nationalNumber: nationalNumber,\n    carrierCode: carrierCode\n  };\n}\n//# sourceMappingURL=parse.js.map","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport parse from './parse.js';\nexport default function parsePhoneNumberWithError(text, options, metadata) {\n  return parse(text, _objectSpread(_objectSpread({}, options), {}, {\n    v2: true\n  }), metadata);\n}\n//# sourceMappingURL=parsePhoneNumberWithError_.js.map","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport isObject from './helpers/isObject.js'; // Extracts the following properties from function arguments:\n// * input `text`\n// * `options` object\n// * `metadata` JSON\n\nexport default function normalizeArguments(args) {\n  var _Array$prototype$slic = Array.prototype.slice.call(args),\n      _Array$prototype$slic2 = _slicedToArray(_Array$prototype$slic, 4),\n      arg_1 = _Array$prototype$slic2[0],\n      arg_2 = _Array$prototype$slic2[1],\n      arg_3 = _Array$prototype$slic2[2],\n      arg_4 = _Array$prototype$slic2[3];\n\n  var text;\n  var options;\n  var metadata; // If the phone number is passed as a string.\n  // `parsePhoneNumber('88005553535', ...)`.\n\n  if (typeof arg_1 === 'string') {\n    text = arg_1;\n  } else throw new TypeError('A text for parsing must be a string.'); // If \"default country\" argument is being passed then move it to `options`.\n  // `parsePhoneNumber('88005553535', 'RU', [options], metadata)`.\n\n\n  if (!arg_2 || typeof arg_2 === 'string') {\n    if (arg_4) {\n      options = arg_3;\n      metadata = arg_4;\n    } else {\n      options = undefined;\n      metadata = arg_3;\n    }\n\n    if (arg_2) {\n      options = _objectSpread({\n        defaultCountry: arg_2\n      }, options);\n    }\n  } // `defaultCountry` is not passed.\n  // Example: `parsePhoneNumber('+78005553535', [options], metadata)`.\n  else if (isObject(arg_2)) {\n    if (arg_3) {\n      options = arg_2;\n      metadata = arg_3;\n    } else {\n      metadata = arg_2;\n    }\n  } else throw new Error(\"Invalid second argument: \".concat(arg_2));\n\n  return {\n    text: text,\n    options: options,\n    metadata: metadata\n  };\n}\n//# sourceMappingURL=normalizeArguments.js.map","import parsePhoneNumberWithError_ from './parsePhoneNumberWithError_.js';\nimport normalizeArguments from './normalizeArguments.js';\nexport default function parsePhoneNumberWithError() {\n  var _normalizeArguments = normalizeArguments(arguments),\n      text = _normalizeArguments.text,\n      options = _normalizeArguments.options,\n      metadata = _normalizeArguments.metadata;\n\n  return parsePhoneNumberWithError_(text, options, metadata);\n}\n//# sourceMappingURL=parsePhoneNumberWithError.js.map","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport parsePhoneNumberWithError from './parsePhoneNumberWithError_.js';\nimport ParseError from './ParseError.js';\nimport { isSupportedCountry } from './metadata.js';\nexport default function parsePhoneNumber(text, options, metadata) {\n  // Validate `defaultCountry`.\n  if (options && options.defaultCountry && !isSupportedCountry(options.defaultCountry, metadata)) {\n    options = _objectSpread(_objectSpread({}, options), {}, {\n      defaultCountry: undefined\n    });\n  } // Parse phone number.\n\n\n  try {\n    return parsePhoneNumberWithError(text, options, metadata);\n  } catch (error) {\n    /* istanbul ignore else */\n    if (error instanceof ParseError) {//\n    } else {\n      throw error;\n    }\n  }\n}\n//# sourceMappingURL=parsePhoneNumber_.js.map","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport normalizeArguments from './normalizeArguments.js';\nimport parsePhoneNumber from './parsePhoneNumber_.js';\nexport default function isValidPhoneNumber() {\n  var _normalizeArguments = normalizeArguments(arguments),\n      text = _normalizeArguments.text,\n      options = _normalizeArguments.options,\n      metadata = _normalizeArguments.metadata;\n\n  options = _objectSpread(_objectSpread({}, options), {}, {\n    extract: false\n  });\n  var phoneNumber = parsePhoneNumber(text, options, metadata);\n  return phoneNumber && phoneNumber.isValid() || false;\n}\n//# sourceMappingURL=isValidPhoneNumber.js.map","import withMetadataArgument from './withMetadataArgument.js'\r\nimport { parsePhoneNumberWithError as _parsePhoneNumberWithError } from '../../core/index.js'\r\n\r\nexport function parsePhoneNumberWithError() {\r\n\treturn withMetadataArgument(_parsePhoneNumberWithError, arguments)\r\n}\r\n","import withMetadataArgument from './withMetadataArgument.js'\r\nimport { isValidPhoneNumber as _isValidPhoneNumber } from '../../core/index.js'\r\n\r\nexport function isValidPhoneNumber() {\r\n\treturn withMetadataArgument(_isValidPhoneNumber, arguments)\r\n}","import React, { useState, useRef, useEffect } from 'react';\nimport {\n  Box,\n  Paper,\n  Typography,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemAvatar,\n  ListItemText,\n  TextField,\n  Button,\n  Stack,\n  Avatar,\n  Chip,\n  Divider,\n  CircularProgress,\n  Alert,\n  IconButton,\n  Tooltip,\n  Card,\n  CardContent,\n  InputAdornment,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  LinearProgress,\n  Fade,\n} from '@mui/material';\nimport {\n  Phone as PhoneIcon,\n  Send as SendIcon,\n  AutoAwesome as AIIcon,\n  AttachFile as AttachIcon,\n  Schedule as ScheduleIcon,\n  Psychology as SuggestIcon,\n  ContactPhone as ContactIcon,\n  Message as MessageIcon,\n  MoreVert as MoreIcon,\n  Search as SearchIcon,\n  Add as AddIcon,\n  SmartToy as SmartComposeIcon,\n  Close as CloseIcon,\n  CheckCircle as DeliveredIcon,\n  Error as FailedIcon,\n  AccessTime as PendingIcon,\n} from '@mui/icons-material';\nimport { useTheme } from '@mui/material/styles';\nimport {\n  useGetMessagesQuery,\n  useGetTwilioNumbersQuery,\n  useSendSMSMutation,\n  useGetAISuggestionMutation,\n  useImproveMessageMutation,\n  useGetTemplatesQuery,\n  useAnalyzeMessageSentimentMutation,\n} from '@services/api/communicationsApi';\nimport type { UnifiedMessage } from './types';\nimport { format } from 'date-fns';\nimport { parsePhoneNumber, isValidPhoneNumber } from 'libphonenumber-js';\n\ninterface Contact {\n  phone: string;\n  name?: string;\n  lastMessage?: string;\n  lastMessageTime?: Date;\n  unreadCount?: number;\n}\n\nexport const TwilioSMS: React.FC = () => {\n  const theme = useTheme();\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const [selectedContact, setSelectedContact] = useState<string | null>(null);\n  const [message, setMessage] = useState('');\n  const [newContactDialog, setNewContactDialog] = useState(false);\n  const [newContactPhone, setNewContactPhone] = useState('');\n  const [newContactName, setNewContactName] = useState('');\n  const [selectedNumber, setSelectedNumber] = useState<string>('');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [showSmartCompose, setShowSmartCompose] = useState(false);\n  const [smartComposeOptions, setSmartComposeOptions] = useState<string[]>([]);\n  const [messageLength, setMessageLength] = useState(0);\n  const [scheduleSend, setScheduleSend] = useState(false);\n  const [scheduleTime, setScheduleTime] = useState('');\n\n  // API hooks\n  const { data: twilioNumbers } = useGetTwilioNumbersQuery();\n  const { data: messagesData, isLoading: messagesLoading, refetch: refetchMessages } = \n    useGetMessagesQuery({\n      platform: 'twilio',\n      search: searchQuery || undefined,\n      limit: 100,\n    });\n  const { data: templates } = useGetTemplatesQuery({ platform: 'twilio' });\n\n  const [sendSMS, { isLoading: sending }] = useSendSMSMutation();\n  const [getAISuggestion, { isLoading: aiLoading }] = useGetAISuggestionMutation();\n  const [improveMessage] = useImproveMessageMutation();\n  const [analyzeSentiment] = useAnalyzeMessageSentimentMutation();\n\n  // Extract unique contacts from messages\n  const contacts: Contact[] = React.useMemo(() => {\n    if (!messagesData?.messages) return [];\n\n    const contactMap = new Map<string, Contact>();\n\n    messagesData.messages.forEach((msg: any) => {\n      const phone = msg.type === 'incoming' ? msg.sender.phone! : msg.recipient.phone!;\n      const name = msg.type === 'incoming' ? msg.sender.name : msg.recipient.name;\n      \n      if (!phone) return;\n\n      const existing = contactMap.get(phone);\n      if (!existing || new Date(msg.timestamp) > new Date(existing.lastMessageTime!)) {\n        contactMap.set(phone, {\n          phone,\n          name,\n          lastMessage: msg.content,\n          lastMessageTime: new Date(msg.timestamp),\n          unreadCount: msg.status === 'delivered' && msg.type === 'incoming' ? 1 : 0,\n        });\n      } else if (msg.status === 'delivered' && msg.type === 'incoming') {\n        existing.unreadCount = (existing.unreadCount || 0) + 1;\n      }\n    });\n\n    return Array.from(contactMap.values()).sort(\n      (a, b) => (b.lastMessageTime?.getTime() || 0) - (a.lastMessageTime?.getTime() || 0)\n    );\n  }, [messagesData]);\n\n  // Auto-scroll to bottom\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messagesData, selectedContact]);\n\n  // Calculate message segments (SMS is limited to 160 chars)\n  useEffect(() => {\n    setMessageLength(message.length);\n  }, [message]);\n\n  // Smart compose functionality\n  const handleSmartCompose = async () => {\n    if (!message.trim()) return;\n\n    try {\n      const response = await getAISuggestion({\n        action: 'suggest',\n        content: message,\n        context: {\n          platform: 'twilio',\n          tone: 'friendly',\n          intent: 'complete_message',\n        },\n      }).unwrap();\n\n      if (response.result.suggestion) {\n        // Get multiple variations\n        const suggestions = [\n          response.result.suggestion,\n          // You could make multiple API calls for variations\n        ];\n        setSmartComposeOptions(suggestions);\n        setShowSmartCompose(true);\n      }\n    } catch (error) {\n      console.error('Failed to get smart compose suggestions:', error);\n    }\n  };\n\n  // Send SMS\n  const handleSendSMS = async () => {\n    if (!selectedContact || !message.trim() || !selectedNumber) return;\n\n    try {\n      await sendSMS({\n        to: selectedContact,\n        body: message,\n      }).unwrap();\n\n      setMessage('');\n      setShowSmartCompose(false);\n      refetchMessages();\n    } catch (error) {\n      console.error('Failed to send SMS:', error);\n    }\n  };\n\n  // Add new contact\n  const handleAddContact = () => {\n    if (!isValidPhoneNumber(newContactPhone, 'US')) {\n      alert('Please enter a valid phone number');\n      return;\n    }\n\n    // In a real app, this would save to the backend\n    setSelectedContact(newContactPhone);\n    setNewContactDialog(false);\n    setNewContactPhone('');\n    setNewContactName('');\n  };\n\n  // Format phone number for display\n  const formatPhone = (phone: string) => {\n    try {\n      const parsed = parsePhoneNumber(phone, 'US');\n      return parsed?.formatNational() || phone;\n    } catch {\n      return phone;\n    }\n  };\n\n  // Get message status icon\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'delivered':\n      case 'read':\n        return <DeliveredIcon fontSize=\"small\" color=\"success\" />;\n      case 'failed':\n        return <FailedIcon fontSize=\"small\" color=\"error\" />;\n      default:\n        return <PendingIcon fontSize=\"small\" color=\"action\" />;\n    }\n  };\n\n  // Render message bubble\n  const renderMessage = (msg: UnifiedMessage) => {\n    const isOutgoing = msg.type === 'outgoing';\n\n    return (\n      <Box\n        key={msg.id}\n        sx={{\n          display: 'flex',\n          justifyContent: isOutgoing ? 'flex-end' : 'flex-start',\n          mb: 2,\n        }}\n      >\n        <Stack\n          direction=\"column\"\n          spacing={0.5}\n          sx={{ maxWidth: '70%' }}\n          alignItems={isOutgoing ? 'flex-end' : 'flex-start'}\n        >\n          <Paper\n            sx={{\n              p: 2,\n              bgcolor: isOutgoing\n                ? theme.palette.primary.main\n                : theme.palette.grey[100],\n              color: isOutgoing\n                ? theme.palette.primary.contrastText\n                : theme.palette.text.primary,\n              borderRadius: 2,\n              position: 'relative',\n            }}\n            elevation={isOutgoing ? 2 : 0}\n          >\n            <Typography variant=\"body2\" sx={{ whiteSpace: 'pre-wrap' }}>\n              {msg.content}\n            </Typography>\n            {msg.ai?.sentiment && (\n              <Chip\n                label={msg.ai.sentiment}\n                size=\"small\"\n                sx={{\n                  position: 'absolute',\n                  top: -10,\n                  right: 10,\n                  height: 20,\n                }}\n              />\n            )}\n          </Paper>\n          <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n            <Typography variant=\"caption\" color=\"text.secondary\">\n              {format(new Date(msg.timestamp), 'HH:mm')}\n            </Typography>\n            {isOutgoing && getStatusIcon(msg.status)}\n          </Stack>\n        </Stack>\n      </Box>\n    );\n  };\n\n  // Selected contact messages\n  const contactMessages = messagesData?.messages.filter(\n    (msg: any) => msg.sender.phone === selectedContact || msg.recipient.phone === selectedContact\n  );\n\n  return (\n    <Box sx={{ display: 'flex', height: '100%' }}>\n      {/* Contact List */}\n      <Paper\n        sx={{\n          width: 320,\n          borderRadius: 0,\n          borderRight: 1,\n          borderColor: 'divider',\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <Box sx={{ p: 2 }}>\n          <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={2}>\n            <Typography variant=\"h6\">SMS Messages</Typography>\n            <IconButton size=\"small\" onClick={() => setNewContactDialog(true)}>\n              <AddIcon />\n            </IconButton>\n          </Stack>\n          <TextField\n            fullWidth\n            size=\"small\"\n            placeholder=\"Search contacts...\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon fontSize=\"small\" />\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Box>\n        <Divider />\n        <Box sx={{ flex: 1, overflow: 'auto' }}>\n          {messagesLoading ? (\n            <Box display=\"flex\" justifyContent=\"center\" p={3}>\n              <CircularProgress size={30} />\n            </Box>\n          ) : contacts.length === 0 ? (\n            <Alert severity=\"info\" sx={{ m: 2 }}>\n              No conversations yet. Send your first SMS!\n            </Alert>\n          ) : (\n            <List>\n              {contacts.map((contact) => (\n                <ListItem key={contact.phone} disablePadding>\n                  <ListItemButton\n                    selected={selectedContact === contact.phone}\n                    onClick={() => setSelectedContact(contact.phone)}\n                  >\n                    <ListItemAvatar>\n                      <Avatar>\n                        <PhoneIcon />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={contact.name || formatPhone(contact.phone)}\n                      secondary={\n                        <Typography\n                          variant=\"body2\"\n                          color=\"text.secondary\"\n                          sx={{\n                            overflow: 'hidden',\n                            textOverflow: 'ellipsis',\n                            whiteSpace: 'nowrap',\n                          }}\n                        >\n                          {contact.lastMessage}\n                        </Typography>\n                      }\n                    />\n                    {contact.unreadCount! > 0 && (\n                      <Chip\n                        label={contact.unreadCount}\n                        size=\"small\"\n                        color=\"primary\"\n                        sx={{ height: 24 }}\n                      />\n                    )}\n                  </ListItemButton>\n                </ListItem>\n              ))}\n            </List>\n          )}\n        </Box>\n      </Paper>\n\n      {/* Message Area */}\n      <Box sx={{ flex: 1, display: 'flex', flexDirection: 'column' }}>\n        {selectedContact ? (\n          <>\n            {/* Header */}\n            <Paper\n              sx={{\n                p: 2,\n                borderRadius: 0,\n                borderBottom: 1,\n                borderColor: 'divider',\n              }}\n              elevation={0}\n            >\n              <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n                <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                  <Avatar>\n                    <ContactIcon />\n                  </Avatar>\n                  <Box>\n                    <Typography variant=\"h6\">\n                      {contacts.find(c => c.phone === selectedContact)?.name || \n                       formatPhone(selectedContact)}\n                    </Typography>\n                    <Typography variant=\"caption\" color=\"text.secondary\">\n                      {selectedContact}\n                    </Typography>\n                  </Box>\n                </Stack>\n                <IconButton>\n                  <MoreIcon />\n                </IconButton>\n              </Stack>\n            </Paper>\n\n            {/* Messages */}\n            <Box sx={{ flex: 1, overflow: 'auto', p: 2, bgcolor: 'grey.50' }}>\n              {contactMessages?.length === 0 ? (\n                <Alert severity=\"info\">\n                  Start a conversation with this contact\n                </Alert>\n              ) : (\n                <>\n                  {contactMessages?.map((msg: any) => renderMessage(msg))}\n                  <div ref={messagesEndRef} />\n                </>\n              )}\n            </Box>\n\n            {/* Smart Compose Suggestions */}\n            <Fade in={showSmartCompose}>\n              <Paper\n                sx={{\n                  mx: 2,\n                  mb: 1,\n                  p: 2,\n                  bgcolor: 'background.default',\n                  border: 1,\n                  borderColor: 'primary.main',\n                }}\n                elevation={3}\n              >\n                <Stack spacing={2}>\n                  <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n                    <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n                      <SmartComposeIcon color=\"primary\" />\n                      <Typography variant=\"subtitle2\" color=\"primary\">\n                        Smart Compose Suggestions\n                      </Typography>\n                    </Stack>\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => setShowSmartCompose(false)}\n                    >\n                      <CloseIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Stack>\n                  {smartComposeOptions.map((option, index) => (\n                    <Card\n                      key={index}\n                      variant=\"outlined\"\n                      sx={{\n                        cursor: 'pointer',\n                        '&:hover': { bgcolor: 'action.hover' },\n                      }}\n                      onClick={() => {\n                        setMessage(option);\n                        setShowSmartCompose(false);\n                      }}\n                    >\n                      <CardContent sx={{ p: 1.5, '&:last-child': { pb: 1.5 } }}>\n                        <Typography variant=\"body2\">{option}</Typography>\n                      </CardContent>\n                    </Card>\n                  ))}\n                </Stack>\n              </Paper>\n            </Fade>\n\n            {/* Message Input */}\n            <Paper\n              sx={{\n                p: 2,\n                borderRadius: 0,\n                borderTop: 1,\n                borderColor: 'divider',\n              }}\n              elevation={0}\n            >\n              <Stack spacing={2}>\n                {/* From number selector */}\n                <FormControl size=\"small\" fullWidth>\n                  <InputLabel>From Number</InputLabel>\n                  <Select\n                    value={selectedNumber}\n                    onChange={(e) => setSelectedNumber(e.target.value)}\n                    label=\"From Number\"\n                  >\n                    {twilioNumbers?.map((number: any) => (\n                      <MenuItem key={number.phoneNumber} value={number.phoneNumber}>\n                        {number.friendlyName || number.phoneNumber}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n\n                {/* Message input with character count */}\n                <TextField\n                  fullWidth\n                  multiline\n                  rows={3}\n                  placeholder=\"Type your message...\"\n                  value={message}\n                  onChange={(e) => setMessage(e.target.value)}\n                  onKeyPress={(e) => {\n                    if (e.key === 'Enter' && e.ctrlKey) {\n                      e.preventDefault();\n                      handleSendSMS();\n                    }\n                  }}\n                  helperText={\n                    <Stack direction=\"row\" justifyContent=\"space-between\">\n                      <span>\n                        {messageLength}/160 characters\n                        {messageLength > 160 && ` (${Math.ceil(messageLength / 160)} segments)`}\n                      </span>\n                      <span>Ctrl+Enter to send</span>\n                    </Stack>\n                  }\n                />\n\n                {/* Action buttons */}\n                <Stack direction=\"row\" spacing={1} justifyContent=\"space-between\">\n                  <Stack direction=\"row\" spacing={1}>\n                    <Tooltip title=\"Smart Compose\">\n                      <IconButton\n                        onClick={handleSmartCompose}\n                        disabled={!message.trim() || aiLoading}\n                        color=\"primary\"\n                      >\n                        {aiLoading ? (\n                          <CircularProgress size={24} />\n                        ) : (\n                          <SmartComposeIcon />\n                        )}\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Improve Message\">\n                      <IconButton\n                        onClick={async () => {\n                          const result = await improveMessage({\n                            content: message,\n                            tone: 'friendly',\n                          }).unwrap();\n                          if (result.result.improved) {\n                            setMessage(result.result.improved);\n                          }\n                        }}\n                        disabled={!message.trim()}\n                      >\n                        <AIIcon />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Attach Media\">\n                      <IconButton>\n                        <AttachIcon />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Schedule Send\">\n                      <IconButton\n                        onClick={() => setScheduleSend(!scheduleSend)}\n                        color={scheduleSend ? 'primary' : 'default'}\n                      >\n                        <ScheduleIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </Stack>\n                  <Button\n                    variant=\"contained\"\n                    endIcon={<SendIcon />}\n                    onClick={handleSendSMS}\n                    disabled={!message.trim() || !selectedNumber || sending}\n                  >\n                    {sending ? 'Sending...' : 'Send SMS'}\n                  </Button>\n                </Stack>\n\n                {/* Schedule options */}\n                {scheduleSend && (\n                  <TextField\n                    type=\"datetime-local\"\n                    size=\"small\"\n                    fullWidth\n                    label=\"Schedule for\"\n                    value={scheduleTime}\n                    onChange={(e) => setScheduleTime(e.target.value)}\n                    InputLabelProps={{ shrink: true }}\n                  />\n                )}\n              </Stack>\n            </Paper>\n          </>\n        ) : (\n          <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            height=\"100%\"\n          >\n            <Stack spacing={2} alignItems=\"center\">\n              <MessageIcon sx={{ fontSize: 64, color: 'text.secondary' }} />\n              <Typography variant=\"h6\" color=\"text.secondary\">\n                Select a contact to start messaging\n              </Typography>\n              <Button\n                variant=\"outlined\"\n                startIcon={<AddIcon />}\n                onClick={() => setNewContactDialog(true)}\n              >\n                New Conversation\n              </Button>\n            </Stack>\n          </Box>\n        )}\n      </Box>\n\n      {/* New Contact Dialog */}\n      <Dialog open={newContactDialog} onClose={() => setNewContactDialog(false)} maxWidth=\"sm\" fullWidth>\n        <DialogTitle>New SMS Conversation</DialogTitle>\n        <DialogContent>\n          <Stack spacing={2} sx={{ mt: 1 }}>\n            <TextField\n              fullWidth\n              label=\"Phone Number\"\n              placeholder=\"+1 (555) 123-4567\"\n              value={newContactPhone}\n              onChange={(e) => setNewContactPhone(e.target.value)}\n              helperText=\"Enter a valid US phone number\"\n            />\n            <TextField\n              fullWidth\n              label=\"Contact Name (Optional)\"\n              placeholder=\"John Doe\"\n              value={newContactName}\n              onChange={(e) => setNewContactName(e.target.value)}\n            />\n          </Stack>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setNewContactDialog(false)}>Cancel</Button>\n          <Button variant=\"contained\" onClick={handleAddContact}>\n            Start Conversation\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};","import React from 'react';\nimport {\n  Drawer,\n  Box,\n  Typography,\n  IconButton,\n  Stack,\n  Grid,\n  Card,\n  CardContent,\n  LinearProgress,\n  Chip,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  Divider,\n  ToggleButton,\n  ToggleButtonGroup,\n} from '@mui/material';\nimport {\n  Close as CloseIcon,\n  TrendingUp as TrendingUpIcon,\n  TrendingDown as TrendingDownIcon,\n  AccessTime as TimeIcon,\n  SentimentSatisfied as PositiveIcon,\n  SentimentNeutral as NeutralIcon,\n  SentimentDissatisfied as NegativeIcon,\n  Phone as PhoneIcon,\n  Email as EmailIcon,\n  AutoAwesome as AIIcon,\n} from '@mui/icons-material';\nimport { useTheme } from '@mui/material/styles';\nimport { useGetCommunicationStatsQuery } from '@services/api/communicationsApi';\nimport { PieChart, Pie, Cell, ResponsiveContainer, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { format } from 'date-fns';\n\ninterface CommunicationStatsProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nexport const CommunicationStats: React.FC<CommunicationStatsProps> = ({ open, onClose }) => {\n  const theme = useTheme();\n  const [timeRange, setTimeRange] = React.useState<'day' | 'week' | 'month'>('week');\n\n  // Calculate date range based on selection\n  const getDateRange = () => {\n    const end = new Date();\n    const start = new Date();\n    \n    switch (timeRange) {\n      case 'day':\n        start.setDate(start.getDate() - 1);\n        break;\n      case 'week':\n        start.setDate(start.getDate() - 7);\n        break;\n      case 'month':\n        start.setMonth(start.getMonth() - 1);\n        break;\n    }\n    \n    return { startDate: start, endDate: end };\n  };\n\n  const { data: stats, isLoading } = useGetCommunicationStatsQuery(getDateRange());\n\n  // Prepare chart data\n  const sentimentData = stats ? [\n    { name: 'Positive', value: stats.sentiment.positive, color: theme.palette.success.main },\n    { name: 'Neutral', value: stats.sentiment.neutral, color: theme.palette.grey[500] },\n    { name: 'Negative', value: stats.sentiment.negative, color: theme.palette.error.main },\n  ] : [];\n\n  const platformData = stats ? [\n    { name: 'Slack', messages: stats.platforms.slack },\n    { name: 'SMS', messages: stats.platforms.twilio },\n    { name: 'Email', messages: stats.platforms.email },\n  ] : [];\n\n  // Format time\n  const formatResponseTime = (minutes: number) => {\n    if (minutes < 60) return `${Math.round(minutes)}m`;\n    return `${Math.round(minutes / 60)}h ${Math.round(minutes % 60)}m`;\n  };\n\n  // Calculate percentage change\n  const calculateChange = (current: number, previous: number) => {\n    if (previous === 0) return 0;\n    return ((current - previous) / previous) * 100;\n  };\n\n  return (\n    <Drawer\n      anchor=\"right\"\n      open={open}\n      onClose={onClose}\n      PaperProps={{\n        sx: { width: { xs: '100%', sm: 600 } },\n      }}\n    >\n      <Box sx={{ p: 3 }}>\n        {/* Header */}\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={3}>\n          <Typography variant=\"h5\">Communication Analytics</Typography>\n          <IconButton onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        </Stack>\n\n        {/* Time Range Selector */}\n        <Box mb={3}>\n          <ToggleButtonGroup\n            value={timeRange}\n            exclusive\n            onChange={(_, newRange) => newRange && setTimeRange(newRange)}\n            fullWidth\n          >\n            <ToggleButton value=\"day\">Last 24 Hours</ToggleButton>\n            <ToggleButton value=\"week\">Last 7 Days</ToggleButton>\n            <ToggleButton value=\"month\">Last 30 Days</ToggleButton>\n          </ToggleButtonGroup>\n        </Box>\n\n        {isLoading ? (\n          <LinearProgress />\n        ) : stats ? (\n          <Stack spacing={3}>\n            {/* Key Metrics */}\n            <Grid container spacing={2}>\n              <Grid size={6}>\n                <Card>\n                  <CardContent>\n                    <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n                      <Box>\n                        <Typography variant=\"subtitle2\" color=\"text.secondary\">\n                          Total Messages\n                        </Typography>\n                        <Typography variant=\"h4\">{stats.totalMessages}</Typography>\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={0.5}>\n                          <TrendingUpIcon fontSize=\"small\" color=\"success\" />\n                          <Typography variant=\"caption\" color=\"success.main\">\n                            +12%\n                          </Typography>\n                        </Stack>\n                      </Box>\n                      <Avatar sx={{ bgcolor: theme.palette.primary.light }}>\n                        <EmailIcon />\n                      </Avatar>\n                    </Stack>\n                  </CardContent>\n                </Card>\n              </Grid>\n\n              <Grid size={6}>\n                <Card>\n                  <CardContent>\n                    <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n                      <Box>\n                        <Typography variant=\"subtitle2\" color=\"text.secondary\">\n                          Avg Response Time\n                        </Typography>\n                        <Typography variant=\"h4\">\n                          {formatResponseTime(stats.responseTime.average)}\n                        </Typography>\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={0.5}>\n                          <TrendingDownIcon fontSize=\"small\" color=\"success\" />\n                          <Typography variant=\"caption\" color=\"success.main\">\n                            -8%\n                          </Typography>\n                        </Stack>\n                      </Box>\n                      <Avatar sx={{ bgcolor: theme.palette.success.light }}>\n                        <TimeIcon />\n                      </Avatar>\n                    </Stack>\n                  </CardContent>\n                </Card>\n              </Grid>\n\n              <Grid size={12}>\n                <Card>\n                  <CardContent>\n                    <Typography variant=\"subtitle2\" gutterBottom>\n                      AI Assistance Usage\n                    </Typography>\n                    <Grid container spacing={2}>\n                      <Grid size={4}>\n                        <Stack alignItems=\"center\">\n                          <Typography variant=\"h6\">{stats.aiAssistance.suggestionsUsed}</Typography>\n                          <Typography variant=\"caption\" color=\"text.secondary\">\n                            Suggestions Used\n                          </Typography>\n                        </Stack>\n                      </Grid>\n                      <Grid size={4}>\n                        <Stack alignItems=\"center\">\n                          <Typography variant=\"h6\">{stats.aiAssistance.autoResponsesSent}</Typography>\n                          <Typography variant=\"caption\" color=\"text.secondary\">\n                            Auto Responses\n                          </Typography>\n                        </Stack>\n                      </Grid>\n                      <Grid size={4}>\n                        <Stack alignItems=\"center\">\n                          <Typography variant=\"h6\">{stats.aiAssistance.summariesGenerated}</Typography>\n                          <Typography variant=\"caption\" color=\"text.secondary\">\n                            Summaries\n                          </Typography>\n                        </Stack>\n                      </Grid>\n                    </Grid>\n                  </CardContent>\n                </Card>\n              </Grid>\n            </Grid>\n\n            <Divider />\n\n            {/* Sentiment Analysis */}\n            <Box>\n              <Typography variant=\"h6\" gutterBottom>\n                Message Sentiment\n              </Typography>\n              <Grid container spacing={2}>\n                <Grid size={6}>\n                  <ResponsiveContainer width=\"100%\" height={200}>\n                    <PieChart>\n                      <Pie\n                        data={sentimentData}\n                        cx=\"50%\"\n                        cy=\"50%\"\n                        innerRadius={60}\n                        outerRadius={80}\n                        paddingAngle={5}\n                        dataKey=\"value\"\n                      >\n                        {sentimentData.map((entry, index) => (\n                          <Cell key={`cell-${index}`} fill={entry.color} />\n                        ))}\n                      </Pie>\n                      <Tooltip />\n                    </PieChart>\n                  </ResponsiveContainer>\n                </Grid>\n                <Grid size={6}>\n                  <Stack spacing={2} justifyContent=\"center\" height=\"100%\">\n                    {sentimentData.map((item) => (\n                      <Stack key={item.name} direction=\"row\" alignItems=\"center\" spacing={1}>\n                        {item.name === 'Positive' && <PositiveIcon color=\"success\" />}\n                        {item.name === 'Neutral' && <NeutralIcon />}\n                        {item.name === 'Negative' && <NegativeIcon color=\"error\" />}\n                        <Typography variant=\"body2\">{item.name}</Typography>\n                        <Typography variant=\"body2\" fontWeight={600}>\n                          {item.value}\n                        </Typography>\n                        <Typography variant=\"caption\" color=\"text.secondary\">\n                          ({Math.round((item.value / stats.totalMessages) * 100)}%)\n                        </Typography>\n                      </Stack>\n                    ))}\n                  </Stack>\n                </Grid>\n              </Grid>\n            </Box>\n\n            <Divider />\n\n            {/* Platform Distribution */}\n            <Box>\n              <Typography variant=\"h6\" gutterBottom>\n                Messages by Platform\n              </Typography>\n              <ResponsiveContainer width=\"100%\" height={200}>\n                <BarChart data={platformData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Bar dataKey=\"messages\" fill={theme.palette.primary.main} />\n                </BarChart>\n              </ResponsiveContainer>\n            </Box>\n\n            <Divider />\n\n            {/* Response Time Distribution */}\n            <Box>\n              <Typography variant=\"h6\" gutterBottom>\n                Response Time Analysis\n              </Typography>\n              <Grid container spacing={2}>\n                <Grid size={3}>\n                  <Stack alignItems=\"center\">\n                    <Typography variant=\"h6\">\n                      {formatResponseTime(stats.responseTime.fastest)}\n                    </Typography>\n                    <Typography variant=\"caption\" color=\"text.secondary\">\n                      Fastest\n                    </Typography>\n                  </Stack>\n                </Grid>\n                <Grid size={3}>\n                  <Stack alignItems=\"center\">\n                    <Typography variant=\"h6\">\n                      {formatResponseTime(stats.responseTime.average)}\n                    </Typography>\n                    <Typography variant=\"caption\" color=\"text.secondary\">\n                      Average\n                    </Typography>\n                  </Stack>\n                </Grid>\n                <Grid size={3}>\n                  <Stack alignItems=\"center\">\n                    <Typography variant=\"h6\">\n                      {formatResponseTime(stats.responseTime.median)}\n                    </Typography>\n                    <Typography variant=\"caption\" color=\"text.secondary\">\n                      Median\n                    </Typography>\n                  </Stack>\n                </Grid>\n                <Grid size={3}>\n                  <Stack alignItems=\"center\">\n                    <Typography variant=\"h6\">\n                      {formatResponseTime(stats.responseTime.slowest)}\n                    </Typography>\n                    <Typography variant=\"caption\" color=\"text.secondary\">\n                      Slowest\n                    </Typography>\n                  </Stack>\n                </Grid>\n              </Grid>\n            </Box>\n\n            <Divider />\n\n            {/* Top Contacts */}\n            <Box>\n              <Typography variant=\"h6\" gutterBottom>\n                Most Active Contacts\n              </Typography>\n              <List>\n                {stats.topContacts.slice(0, 5).map((contact: any, index: number) => (\n                  <ListItem key={contact.id} disableGutters>\n                    <ListItemAvatar>\n                      <Avatar>{contact.name.charAt(0).toUpperCase()}</Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={contact.name}\n                      secondary={`${contact.messageCount} messages`}\n                    />\n                    <Typography variant=\"caption\" color=\"text.secondary\">\n                      {format(new Date(contact.lastContact), 'MMM d')}\n                    </Typography>\n                  </ListItem>\n                ))}\n              </List>\n            </Box>\n          </Stack>\n        ) : (\n          <Typography>No data available</Typography>\n        )}\n      </Box>\n    </Drawer>\n  );\n};","import React, { useState } from 'react';\nimport {\n  Drawer,\n  Box,\n  Typography,\n  IconButton,\n  Stack,\n  Switch,\n  FormControlLabel,\n  FormGroup,\n  Divider,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Button,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Chip,\n  TextField,\n  Alert,\n  Card,\n  CardContent,\n  ToggleButton,\n  ToggleButtonGroup,\n} from '@mui/material';\nimport {\n  Close as CloseIcon,\n  Save as SaveIcon,\n  AutoAwesome as AIIcon,\n  Notifications as NotificationIcon,\n  Schedule as ScheduleIcon,\n  Message as MessageIcon,\n  Add as AddIcon,\n  Delete as DeleteIcon,\n} from '@mui/icons-material';\nimport { TimePicker } from '@mui/x-date-pickers/TimePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport {\n  useGetPreferencesQuery,\n  useUpdatePreferencesMutation,\n  useGetTemplatesQuery,\n  useCreateTemplateMutation,\n} from '@services/api/communicationsApi';\nimport type { CommunicationPreferences, MessageTemplate } from './types';\n\ninterface CommunicationSettingsProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nexport const CommunicationSettings: React.FC<CommunicationSettingsProps> = ({ open, onClose }) => {\n  const [activeTab, setActiveTab] = useState<'general' | 'ai' | 'templates' | 'hours'>('general');\n  const [newTemplate, setNewTemplate] = useState({ name: '', content: '', category: 'general' });\n  const [saveSuccess, setSaveSuccess] = useState(false);\n\n  // API hooks\n  const { data: preferences, isLoading } = useGetPreferencesQuery();\n  const [updatePreferences, { isLoading: saving }] = useUpdatePreferencesMutation();\n  const { data: templates } = useGetTemplatesQuery({});\n  const [createTemplate] = useCreateTemplateMutation();\n\n  // Local state for preferences\n  const [localPrefs, setLocalPrefs] = useState<CommunicationPreferences | null>(null);\n\n  React.useEffect(() => {\n    if (preferences && !localPrefs) {\n      setLocalPrefs(preferences);\n    }\n  }, [preferences, localPrefs]);\n\n  // Handle preference changes\n  const handlePreferenceChange = (path: string[], value: any) => {\n    if (!localPrefs) return;\n\n    const newPrefs = { ...localPrefs };\n    let current: any = newPrefs;\n    \n    for (let i = 0; i < path.length - 1; i++) {\n      current = current[path[i]];\n    }\n    \n    current[path[path.length - 1]] = value;\n    setLocalPrefs(newPrefs);\n  };\n\n  // Save preferences\n  const handleSave = async () => {\n    if (!localPrefs) return;\n\n    try {\n      await updatePreferences(localPrefs).unwrap();\n      setSaveSuccess(true);\n      setTimeout(() => setSaveSuccess(false), 3000);\n    } catch (error) {\n      console.error('Failed to save preferences:', error);\n    }\n  };\n\n  // Create new template\n  const handleCreateTemplate = async () => {\n    if (!newTemplate.name || !newTemplate.content) return;\n\n    try {\n      await createTemplate({\n        ...newTemplate,\n        platform: 'all',\n        aiGenerated: false,\n      }).unwrap();\n      \n      setNewTemplate({ name: '', content: '', category: 'general' });\n    } catch (error) {\n      console.error('Failed to create template:', error);\n    }\n  };\n\n  if (!localPrefs) {\n    return null;\n  }\n\n  return (\n    <Drawer\n      anchor=\"right\"\n      open={open}\n      onClose={onClose}\n      PaperProps={{\n        sx: { width: { xs: '100%', sm: 500 } },\n      }}\n    >\n      <Box sx={{ display: 'flex', flexDirection: 'column', height: '100%' }}>\n        {/* Header */}\n        <Box sx={{ p: 3, borderBottom: 1, borderColor: 'divider' }}>\n          <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n            <Typography variant=\"h5\">Communication Settings</Typography>\n            <IconButton onClick={onClose}>\n              <CloseIcon />\n            </IconButton>\n          </Stack>\n\n          {/* Tabs */}\n          <ToggleButtonGroup\n            value={activeTab}\n            exclusive\n            onChange={(_, newTab) => newTab && setActiveTab(newTab)}\n            fullWidth\n            sx={{ mt: 2 }}\n          >\n            <ToggleButton value=\"general\" size=\"small\">\n              General\n            </ToggleButton>\n            <ToggleButton value=\"ai\" size=\"small\">\n              AI Features\n            </ToggleButton>\n            <ToggleButton value=\"templates\" size=\"small\">\n              Templates\n            </ToggleButton>\n            <ToggleButton value=\"hours\" size=\"small\">\n              Hours\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </Box>\n\n        {/* Content */}\n        <Box sx={{ flex: 1, overflow: 'auto', p: 3 }}>\n          {saveSuccess && (\n            <Alert severity=\"success\" sx={{ mb: 2 }}>\n              Settings saved successfully!\n            </Alert>\n          )}\n\n          {/* General Settings */}\n          {activeTab === 'general' && (\n            <Stack spacing={3}>\n              <Box>\n                <Typography variant=\"h6\" gutterBottom>\n                  Default Platform\n                </Typography>\n                <FormControl fullWidth>\n                  <Select\n                    value={localPrefs.defaultPlatform}\n                    onChange={(e) => handlePreferenceChange(['defaultPlatform'], e.target.value)}\n                  >\n                    <MenuItem value=\"slack\">Slack</MenuItem>\n                    <MenuItem value=\"twilio\">SMS</MenuItem>\n                    <MenuItem value=\"email\">Email</MenuItem>\n                  </Select>\n                </FormControl>\n              </Box>\n\n              <Divider />\n\n              <Box>\n                <Typography variant=\"h6\" gutterBottom>\n                  Notifications\n                </Typography>\n                <FormGroup>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={localPrefs.notifications.desktop}\n                        onChange={(e) => handlePreferenceChange(['notifications', 'desktop'], e.target.checked)}\n                      />\n                    }\n                    label=\"Desktop Notifications\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={localPrefs.notifications.mobile}\n                        onChange={(e) => handlePreferenceChange(['notifications', 'mobile'], e.target.checked)}\n                      />\n                    }\n                    label=\"Mobile Push Notifications\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={localPrefs.notifications.email}\n                        onChange={(e) => handlePreferenceChange(['notifications', 'email'], e.target.checked)}\n                      />\n                    }\n                    label=\"Email Notifications\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={localPrefs.notifications.urgentOnly}\n                        onChange={(e) => handlePreferenceChange(['notifications', 'urgentOnly'], e.target.checked)}\n                      />\n                    }\n                    label=\"Urgent Messages Only\"\n                  />\n                </FormGroup>\n              </Box>\n\n              <Divider />\n\n              <Box>\n                <Typography variant=\"h6\" gutterBottom>\n                  Auto Response\n                </Typography>\n                <FormGroup>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={localPrefs.autoResponse.enabled}\n                        onChange={(e) => handlePreferenceChange(['autoResponse', 'enabled'], e.target.checked)}\n                      />\n                    }\n                    label=\"Enable Auto Response\"\n                  />\n                  {localPrefs.autoResponse.enabled && (\n                    <>\n                      <FormControlLabel\n                        control={\n                          <Switch\n                            checked={localPrefs.autoResponse.useAI}\n                            onChange={(e) => handlePreferenceChange(['autoResponse', 'useAI'], e.target.checked)}\n                          />\n                        }\n                        label=\"Use AI for Auto Responses\"\n                      />\n                      {!localPrefs.autoResponse.useAI && (\n                        <TextField\n                          fullWidth\n                          multiline\n                          rows={3}\n                          label=\"Custom Auto Response\"\n                          value={localPrefs.autoResponse.customMessage || ''}\n                          onChange={(e) => handlePreferenceChange(['autoResponse', 'customMessage'], e.target.value)}\n                          sx={{ mt: 2 }}\n                        />\n                      )}\n                    </>\n                  )}\n                </FormGroup>\n              </Box>\n            </Stack>\n          )}\n\n          {/* AI Settings */}\n          {activeTab === 'ai' && (\n            <Stack spacing={3}>\n              <Card>\n                <CardContent>\n                  <Stack direction=\"row\" alignItems=\"center\" spacing={1} mb={2}>\n                    <AIIcon color=\"primary\" />\n                    <Typography variant=\"h6\">AI Features</Typography>\n                  </Stack>\n                  <FormGroup>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={localPrefs.ai.smartCompose}\n                          onChange={(e) => handlePreferenceChange(['ai', 'smartCompose'], e.target.checked)}\n                        />\n                      }\n                      label=\"Smart Compose\"\n                      sx={{ mb: 1 }}\n                    />\n                    <Typography variant=\"caption\" color=\"text.secondary\" sx={{ ml: 4, mb: 2 }}>\n                      Get AI-powered suggestions while typing messages\n                    </Typography>\n\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={localPrefs.ai.autoSuggest}\n                          onChange={(e) => handlePreferenceChange(['ai', 'autoSuggest'], e.target.checked)}\n                        />\n                      }\n                      label=\"Auto Suggestions\"\n                      sx={{ mb: 1 }}\n                    />\n                    <Typography variant=\"caption\" color=\"text.secondary\" sx={{ ml: 4, mb: 2 }}>\n                      Automatically suggest responses to incoming messages\n                    </Typography>\n\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={localPrefs.ai.sentimentAnalysis}\n                          onChange={(e) => handlePreferenceChange(['ai', 'sentimentAnalysis'], e.target.checked)}\n                        />\n                      }\n                      label=\"Sentiment Analysis\"\n                      sx={{ mb: 1 }}\n                    />\n                    <Typography variant=\"caption\" color=\"text.secondary\" sx={{ ml: 4, mb: 2 }}>\n                      Analyze message sentiment and urgency levels\n                    </Typography>\n\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={localPrefs.ai.autoCategorie}\n                          onChange={(e) => handlePreferenceChange(['ai', 'autoCategorie'], e.target.checked)}\n                        />\n                      }\n                      label=\"Auto Categorization\"\n                      sx={{ mb: 1 }}\n                    />\n                    <Typography variant=\"caption\" color=\"text.secondary\" sx={{ ml: 4, mb: 2 }}>\n                      Automatically categorize and tag messages\n                    </Typography>\n\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={localPrefs.ai.summarization}\n                          onChange={(e) => handlePreferenceChange(['ai', 'summarization'], e.target.checked)}\n                        />\n                      }\n                      label=\"Conversation Summaries\"\n                      sx={{ mb: 1 }}\n                    />\n                    <Typography variant=\"caption\" color=\"text.secondary\" sx={{ ml: 4 }}>\n                      Generate AI summaries of long conversations\n                    </Typography>\n                  </FormGroup>\n                </CardContent>\n              </Card>\n            </Stack>\n          )}\n\n          {/* Templates */}\n          {activeTab === 'templates' && (\n            <Stack spacing={3}>\n              <Box>\n                <Typography variant=\"h6\" gutterBottom>\n                  Message Templates\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                  Create reusable templates for common messages\n                </Typography>\n              </Box>\n\n              <Card variant=\"outlined\">\n                <CardContent>\n                  <Stack spacing={2}>\n                    <TextField\n                      fullWidth\n                      size=\"small\"\n                      label=\"Template Name\"\n                      value={newTemplate.name}\n                      onChange={(e) => setNewTemplate({ ...newTemplate, name: e.target.value })}\n                    />\n                    <TextField\n                      fullWidth\n                      multiline\n                      rows={3}\n                      label=\"Template Content\"\n                      value={newTemplate.content}\n                      onChange={(e) => setNewTemplate({ ...newTemplate, content: e.target.value })}\n                    />\n                    <FormControl size=\"small\">\n                      <InputLabel>Category</InputLabel>\n                      <Select\n                        value={newTemplate.category}\n                        onChange={(e) => setNewTemplate({ ...newTemplate, category: e.target.value })}\n                        label=\"Category\"\n                      >\n                        <MenuItem value=\"general\">General</MenuItem>\n                        <MenuItem value=\"greeting\">Greeting</MenuItem>\n                        <MenuItem value=\"followup\">Follow Up</MenuItem>\n                        <MenuItem value=\"appointment\">Appointment</MenuItem>\n                        <MenuItem value=\"invoice\">Invoice</MenuItem>\n                      </Select>\n                    </FormControl>\n                    <Button\n                      variant=\"outlined\"\n                      startIcon={<AddIcon />}\n                      onClick={handleCreateTemplate}\n                      disabled={!newTemplate.name || !newTemplate.content}\n                    >\n                      Add Template\n                    </Button>\n                  </Stack>\n                </CardContent>\n              </Card>\n\n              <List>\n                {templates?.map((template: any) => (\n                  <ListItem key={template.id}>\n                    <ListItemText\n                      primary={template.name}\n                      secondary={template.content.substring(0, 50) + '...'}\n                    />\n                    <ListItemSecondaryAction>\n                      <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n                        <Chip\n                          label={`Used ${template.usageCount}x`}\n                          size=\"small\"\n                          variant=\"outlined\"\n                        />\n                        <IconButton size=\"small\">\n                          <DeleteIcon fontSize=\"small\" />\n                        </IconButton>\n                      </Stack>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                ))}\n              </List>\n            </Stack>\n          )}\n\n          {/* Working Hours */}\n          {activeTab === 'hours' && (\n            <Stack spacing={3}>\n              <Box>\n                <Typography variant=\"h6\" gutterBottom>\n                  Working Hours\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                  Set your availability for auto-responses\n                </Typography>\n              </Box>\n\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={localPrefs.autoResponse.workingHours.enabled}\n                    onChange={(e) => handlePreferenceChange(['autoResponse', 'workingHours', 'enabled'], e.target.checked)}\n                  />\n                }\n                label=\"Enable Working Hours\"\n              />\n\n              {localPrefs.autoResponse.workingHours.enabled && (\n                <>\n                  <FormControl fullWidth>\n                    <InputLabel>Timezone</InputLabel>\n                    <Select\n                      value={localPrefs.autoResponse.workingHours.timezone}\n                      onChange={(e) => handlePreferenceChange(['autoResponse', 'workingHours', 'timezone'], e.target.value)}\n                      label=\"Timezone\"\n                    >\n                      <MenuItem value=\"America/Los_Angeles\">Pacific Time</MenuItem>\n                      <MenuItem value=\"America/Denver\">Mountain Time</MenuItem>\n                      <MenuItem value=\"America/Chicago\">Central Time</MenuItem>\n                      <MenuItem value=\"America/New_York\">Eastern Time</MenuItem>\n                    </Select>\n                  </FormControl>\n\n                  <LocalizationProvider dateAdapter={AdapterDateFns}>\n                    <Stack spacing={2}>\n                      {['monday', 'tuesday', 'wednesday', 'thursday', 'friday'].map((day) => {\n                        const schedule = localPrefs.autoResponse.workingHours.schedule.find(s => s.day === day);\n                        return (\n                          <Stack key={day} direction=\"row\" spacing={2} alignItems=\"center\">\n                            <Typography sx={{ width: 100, textTransform: 'capitalize' }}>\n                              {day}\n                            </Typography>\n                            <TextField\n                              type=\"time\"\n                              size=\"small\"\n                              value={schedule?.start || '09:00'}\n                              onChange={(e) => {\n                                // Handle time change\n                              }}\n                            />\n                            <Typography>to</Typography>\n                            <TextField\n                              type=\"time\"\n                              size=\"small\"\n                              value={schedule?.end || '17:00'}\n                              onChange={(e) => {\n                                // Handle time change\n                              }}\n                            />\n                          </Stack>\n                        );\n                      })}\n                    </Stack>\n                  </LocalizationProvider>\n                </>\n              )}\n            </Stack>\n          )}\n        </Box>\n\n        {/* Footer */}\n        <Box sx={{ p: 3, borderTop: 1, borderColor: 'divider' }}>\n          <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\">\n            <Button onClick={onClose}>Cancel</Button>\n            <Button\n              variant=\"contained\"\n              startIcon={<SaveIcon />}\n              onClick={handleSave}\n              disabled={saving}\n            >\n              {saving ? 'Saving...' : 'Save Settings'}\n            </Button>\n          </Stack>\n        </Box>\n      </Box>\n    </Drawer>\n  );\n};","import React, { useState } from 'react';\nimport {\n  Box,\n  Paper,\n  Tabs,\n  Tab,\n  Stack,\n  Typography,\n  Button,\n  IconButton,\n  Tooltip,\n  Badge,\n  Menu,\n  MenuItem,\n  Divider,\n  Chip,\n  useTheme,\n  useMediaQuery,\n} from '@mui/material';\nimport {\n  Inbox as InboxIcon,\n  Tag as SlackIcon,\n  Sms as SmsIcon,\n  Settings as SettingsIcon,\n  AutoAwesome as AIIcon,\n  TrendingUp as StatsIcon,\n  Notifications as NotificationsIcon,\n  NotificationsOff as NotificationsOffIcon,\n} from '@mui/icons-material';\nimport { UnifiedInbox } from './UnifiedInbox';\nimport { SlackMessages } from './SlackMessages';\nimport { TwilioSMS } from './TwilioSMS';\nimport { MessageComposer } from './MessageComposer';\nimport { CommunicationStats } from './CommunicationStats';\nimport { CommunicationSettings } from './CommunicationSettings';\nimport {\n  useGetCommunicationStatsQuery,\n  useGetPreferencesQuery,\n  useUpdatePreferencesMutation,\n} from '@services/api/communicationsApi';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nconst TabPanel: React.FC<TabPanelProps> = ({ children, value, index, ...other }) => {\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`communications-tabpanel-${index}`}\n      aria-labelledby={`communications-tab-${index}`}\n      {...other}\n      style={{ height: '100%' }}\n    >\n      {value === index && <Box sx={{ height: '100%' }}>{children}</Box>}\n    </div>\n  );\n};\n\nexport const Communications: React.FC = () => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n  const [tabValue, setTabValue] = useState(0);\n  const [settingsOpen, setSettingsOpen] = useState(false);\n  const [statsOpen, setStatsOpen] = useState(false);\n  const [menuAnchor, setMenuAnchor] = useState<null | HTMLElement>(null);\n\n  // API hooks\n  const { data: stats } = useGetCommunicationStatsQuery({});\n  const { data: preferences } = useGetPreferencesQuery();\n  const [updatePreferences] = useUpdatePreferencesMutation();\n\n  // Calculate unread counts\n  const unreadTotal = stats?.totalMessages || 0;\n  const unreadSlack = 0; // Calculate from actual data\n  const unreadSMS = 0; // Calculate from actual data\n\n  // Handle notifications toggle\n  const handleNotificationsToggle = async () => {\n    if (preferences) {\n      await updatePreferences({\n        ...preferences,\n        notifications: {\n          ...preferences.notifications,\n          desktop: !preferences.notifications.desktop,\n        },\n      });\n    }\n  };\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', height: '100vh' }}>\n      {/* Header */}\n      <Paper\n        elevation={0}\n        sx={{\n          borderRadius: 0,\n          borderBottom: 1,\n          borderColor: 'divider',\n        }}\n      >\n        <Stack\n          direction=\"row\"\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n          sx={{ px: 2, py: 1 }}\n        >\n          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n            <Typography variant=\"h5\" component=\"h1\">\n              Communications Hub\n            </Typography>\n            {preferences?.ai.smartCompose && (\n              <Chip\n                icon={<AIIcon />}\n                label=\"AI Enhanced\"\n                size=\"small\"\n                color=\"primary\"\n                variant=\"outlined\"\n              />\n            )}\n          </Stack>\n\n          <Stack direction=\"row\" spacing={1}>\n            {/* Quick Stats */}\n            <Chip\n              label={`${stats?.responseTime.average ? Math.round(stats.responseTime.average / 60) : 0}m avg response`}\n              size=\"small\"\n              variant=\"outlined\"\n            />\n            \n            {/* Notifications Toggle */}\n            <Tooltip title={preferences?.notifications.desktop ? \"Disable notifications\" : \"Enable notifications\"}>\n              <IconButton onClick={handleNotificationsToggle}>\n                {preferences?.notifications.desktop ? (\n                  <NotificationsIcon />\n                ) : (\n                  <NotificationsOffIcon />\n                )}\n              </IconButton>\n            </Tooltip>\n\n            {/* Stats */}\n            <Tooltip title=\"View Statistics\">\n              <IconButton onClick={() => setStatsOpen(true)}>\n                <StatsIcon />\n              </IconButton>\n            </Tooltip>\n\n            {/* Settings */}\n            <Tooltip title=\"Settings\">\n              <IconButton onClick={() => setSettingsOpen(true)}>\n                <SettingsIcon />\n              </IconButton>\n            </Tooltip>\n\n            {/* More Menu */}\n            <IconButton onClick={(e) => setMenuAnchor(e.currentTarget)}>\n              <Badge badgeContent={unreadTotal} color=\"error\">\n                <InboxIcon />\n              </Badge>\n            </IconButton>\n          </Stack>\n        </Stack>\n\n        {/* Tabs */}\n        <Tabs\n          value={tabValue}\n          onChange={(_, newValue) => setTabValue(newValue)}\n          variant={isMobile ? \"scrollable\" : \"standard\"}\n          scrollButtons={isMobile ? \"auto\" : false}\n          sx={{ px: 1 }}\n        >\n          <Tab\n            icon={\n              <Badge badgeContent={unreadTotal} color=\"error\">\n                <InboxIcon />\n              </Badge>\n            }\n            iconPosition=\"start\"\n            label=\"Unified Inbox\"\n          />\n          <Tab\n            icon={\n              <Badge badgeContent={unreadSlack} color=\"error\">\n                <SlackIcon />\n              </Badge>\n            }\n            iconPosition=\"start\"\n            label=\"Slack\"\n          />\n          <Tab\n            icon={\n              <Badge badgeContent={unreadSMS} color=\"error\">\n                <SmsIcon />\n              </Badge>\n            }\n            iconPosition=\"start\"\n            label=\"SMS\"\n          />\n        </Tabs>\n      </Paper>\n\n      {/* Content */}\n      <Box sx={{ flex: 1, overflow: 'hidden' }}>\n        <TabPanel value={tabValue} index={0}>\n          <UnifiedInbox />\n        </TabPanel>\n        <TabPanel value={tabValue} index={1}>\n          <SlackMessages />\n        </TabPanel>\n        <TabPanel value={tabValue} index={2}>\n          <TwilioSMS />\n        </TabPanel>\n      </Box>\n\n      {/* Quick Actions Menu */}\n      <Menu\n        anchorEl={menuAnchor}\n        open={Boolean(menuAnchor)}\n        onClose={() => setMenuAnchor(null)}\n      >\n        <MenuItem onClick={() => {\n          // Open new message composer\n          setMenuAnchor(null);\n        }}>\n          New Message\n        </MenuItem>\n        <MenuItem onClick={() => {\n          // Mark all as read\n          setMenuAnchor(null);\n        }}>\n          Mark All as Read\n        </MenuItem>\n        <Divider />\n        <MenuItem onClick={() => {\n          setStatsOpen(true);\n          setMenuAnchor(null);\n        }}>\n          View Statistics\n        </MenuItem>\n        <MenuItem onClick={() => {\n          setSettingsOpen(true);\n          setMenuAnchor(null);\n        }}>\n          Settings\n        </MenuItem>\n      </Menu>\n\n      {/* Floating Action Button for Mobile */}\n      {isMobile && (\n        <Button\n          variant=\"contained\"\n          sx={{\n            position: 'fixed',\n            bottom: 16,\n            right: 16,\n            borderRadius: '50%',\n            width: 56,\n            height: 56,\n            minWidth: 'unset',\n          }}\n          onClick={() => {\n            // Open message composer\n          }}\n        >\n          <AIIcon />\n        </Button>\n      )}\n\n      {/* Stats Drawer */}\n      {statsOpen && (\n        <CommunicationStats\n          open={statsOpen}\n          onClose={() => setStatsOpen(false)}\n        />\n      )}\n\n      {/* Settings Drawer */}\n      {settingsOpen && (\n        <CommunicationSettings\n          open={settingsOpen}\n          onClose={() => setSettingsOpen(false)}\n        />\n      )}\n    </Box>\n  );\n};","import React, { useState } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  Button,\n  Stack,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Chip,\n  IconButton,\n  Typography,\n  Box,\n  Alert,\n  CircularProgress,\n  Autocomplete,\n  ToggleButton,\n  ToggleButtonGroup,\n  Paper,\n  Divider,\n} from '@mui/material';\nimport {\n  Close as CloseIcon,\n  AutoAwesome as AIIcon,\n  Psychology as SuggestIcon,\n  Send as SendIcon,\n  AttachFile as AttachIcon,\n  Schedule as ScheduleIcon,\n  Tag as SlackIcon,\n  Sms as SmsIcon,\n  Speed as QuickIcon,\n} from '@mui/icons-material';\nimport { useTheme } from '@mui/material/styles';\nimport {\n  useSendMessageMutation,\n  useGetSlackChannelsQuery,\n  useGetAISuggestionMutation,\n  useGenerateAITemplateMutation,\n  useGetTemplatesQuery,\n} from '@services/api/communicationsApi';\n\ninterface MessageComposerProps {\n  open: boolean;\n  onClose: () => void;\n  defaultPlatform?: 'slack' | 'twilio';\n  defaultRecipient?: string;\n  defaultMessage?: string;\n}\n\nexport const MessageComposer: React.FC<MessageComposerProps> = ({\n  open,\n  onClose,\n  defaultPlatform = 'slack',\n  defaultRecipient = '',\n  defaultMessage = '',\n}) => {\n  const theme = useTheme();\n  const [platform, setPlatform] = useState<'slack' | 'twilio'>(defaultPlatform);\n  const [recipient, setRecipient] = useState(defaultRecipient);\n  const [message, setMessage] = useState(defaultMessage);\n  const [tone, setTone] = useState<'professional' | 'friendly' | 'casual'>('professional');\n  const [aiMode, setAiMode] = useState<'off' | 'suggest' | 'improve' | 'generate'>('off');\n  const [aiIntent, setAiIntent] = useState('');\n  const [attachments, setAttachments] = useState<File[]>([]);\n  const [scheduling, setScheduling] = useState(false);\n  const [scheduleTime, setScheduleTime] = useState('');\n\n  // API hooks\n  const { data: slackChannels } = useGetSlackChannelsQuery(undefined, {\n    skip: platform !== 'slack',\n  });\n  const { data: templates } = useGetTemplatesQuery({ platform });\n  \n  const [sendMessage, { isLoading: sending }] = useSendMessageMutation();\n  const [getAISuggestion, { isLoading: aiLoading }] = useGetAISuggestionMutation();\n  const [generateTemplate] = useGenerateAITemplateMutation();\n\n  // Handle AI assistance\n  const handleAIAssist = async () => {\n    if (aiMode === 'off') return;\n\n    try {\n      let result;\n      \n      switch (aiMode) {\n        case 'suggest':\n          result = await getAISuggestion({\n            action: 'suggest',\n            content: message,\n            context: {\n              platform,\n              recipient,\n              tone,\n              intent: aiIntent,\n            },\n          }).unwrap();\n          \n          if (result.result.suggestion) {\n            setMessage(result.result.suggestion);\n          }\n          break;\n          \n        case 'improve':\n          result = await getAISuggestion({\n            action: 'improve',\n            content: message,\n            context: { tone },\n          }).unwrap();\n          \n          if (result.result.improved) {\n            setMessage(result.result.improved);\n          }\n          break;\n          \n        case 'generate':\n          if (!aiIntent) {\n            alert('Please describe what you want to say');\n            return;\n          }\n          \n          const template = await generateTemplate({\n            category: 'general',\n            intent: aiIntent,\n            tone,\n          }).unwrap();\n          \n          setMessage(template.content);\n          break;\n      }\n    } catch (error) {\n      console.error('AI assistance failed:', error);\n    }\n  };\n\n  // Handle send\n  const handleSend = async () => {\n    if (!recipient || !message.trim()) return;\n\n    try {\n      await sendMessage({\n        platform,\n        recipient,\n        content: message,\n        attachments,\n        useAI: aiMode !== 'off',\n        aiContext: aiMode !== 'off' ? { tone, intent: aiIntent } : undefined,\n      }).unwrap();\n\n      // Reset and close\n      setMessage('');\n      setRecipient('');\n      setAttachments([]);\n      onClose();\n    } catch (error) {\n      console.error('Failed to send message:', error);\n    }\n  };\n\n  // Get recipient options based on platform\n  const getRecipientOptions = () => {\n    if (platform === 'slack') {\n      return slackChannels?.map((ch: any) => ({\n        label: `#${ch.name}`,\n        value: ch.id,\n      })) || [];\n    }\n    \n    // For Twilio, we'd fetch recent contacts\n    return [];\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      maxWidth=\"md\"\n      fullWidth\n      PaperProps={{\n        sx: { height: '80vh' },\n      }}\n    >\n      <DialogTitle>\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Typography variant=\"h6\">New Message</Typography>\n          <IconButton onClick={onClose} size=\"small\">\n            <CloseIcon />\n          </IconButton>\n        </Stack>\n      </DialogTitle>\n\n      <DialogContent dividers>\n        <Stack spacing={3}>\n          {/* Platform Selection */}\n          <ToggleButtonGroup\n            value={platform}\n            exclusive\n            onChange={(_, newPlatform) => newPlatform && setPlatform(newPlatform)}\n            fullWidth\n          >\n            <ToggleButton value=\"slack\">\n              <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n                <SlackIcon />\n                <span>Slack</span>\n              </Stack>\n            </ToggleButton>\n            <ToggleButton value=\"twilio\">\n              <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n                <SmsIcon />\n                <span>SMS</span>\n              </Stack>\n            </ToggleButton>\n          </ToggleButtonGroup>\n\n          {/* Recipient */}\n          <Autocomplete\n            freeSolo\n            options={getRecipientOptions()}\n            value={recipient}\n            onChange={(_, newValue) => {\n              if (typeof newValue === 'string') {\n                setRecipient(newValue);\n              } else if (newValue) {\n                setRecipient((newValue as any).value);\n              }\n            }}\n            onInputChange={(_, newValue) => setRecipient(newValue)}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label={platform === 'slack' ? 'Channel' : 'Phone Number'}\n                placeholder={platform === 'slack' ? '#general' : '+1 (555) 123-4567'}\n                required\n              />\n            )}\n          />\n\n          {/* AI Mode Selection */}\n          <Paper variant=\"outlined\" sx={{ p: 2 }}>\n            <Stack spacing={2}>\n              <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n                <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n                  <AIIcon color={aiMode !== 'off' ? 'primary' : 'action'} />\n                  <Typography variant=\"subtitle2\">AI Assistance</Typography>\n                </Stack>\n                <ToggleButtonGroup\n                  value={aiMode}\n                  exclusive\n                  onChange={(_, newMode) => newMode && setAiMode(newMode)}\n                  size=\"small\"\n                >\n                  <ToggleButton value=\"off\">Off</ToggleButton>\n                  <ToggleButton value=\"suggest\">Suggest</ToggleButton>\n                  <ToggleButton value=\"improve\">Improve</ToggleButton>\n                  <ToggleButton value=\"generate\">Generate</ToggleButton>\n                </ToggleButtonGroup>\n              </Stack>\n\n              {aiMode !== 'off' && (\n                <>\n                  <Stack direction=\"row\" spacing={1}>\n                    <FormControl size=\"small\" sx={{ minWidth: 120 }}>\n                      <InputLabel>Tone</InputLabel>\n                      <Select\n                        value={tone}\n                        onChange={(e) => setTone(e.target.value as any)}\n                        label=\"Tone\"\n                      >\n                        <MenuItem value=\"professional\">Professional</MenuItem>\n                        <MenuItem value=\"friendly\">Friendly</MenuItem>\n                        <MenuItem value=\"casual\">Casual</MenuItem>\n                      </Select>\n                    </FormControl>\n                    \n                    {aiMode === 'generate' && (\n                      <TextField\n                        fullWidth\n                        size=\"small\"\n                        label=\"What do you want to say?\"\n                        placeholder=\"e.g., Schedule a meeting for next week\"\n                        value={aiIntent}\n                        onChange={(e) => setAiIntent(e.target.value)}\n                      />\n                    )}\n                    \n                    <Button\n                      variant=\"outlined\"\n                      startIcon={aiLoading ? <CircularProgress size={16} /> : <SuggestIcon />}\n                      onClick={handleAIAssist}\n                      disabled={aiLoading}\n                    >\n                      {aiMode === 'generate' ? 'Generate' : aiMode}\n                    </Button>\n                  </Stack>\n                </>\n              )}\n            </Stack>\n          </Paper>\n\n          {/* Message */}\n          <TextField\n            fullWidth\n            multiline\n            rows={8}\n            label=\"Message\"\n            placeholder={\n              aiMode === 'generate' \n                ? \"Click 'Generate' to create a message...\"\n                : \"Type your message here...\"\n            }\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            required\n          />\n\n          {/* Quick Templates */}\n          {templates && templates.length > 0 && (\n            <Box>\n              <Typography variant=\"subtitle2\" gutterBottom>\n                Quick Templates\n              </Typography>\n              <Stack direction=\"row\" spacing={1} flexWrap=\"wrap\">\n                {templates.slice(0, 5).map((template: any) => (\n                  <Chip\n                    key={template.id}\n                    label={template.name}\n                    icon={<QuickIcon />}\n                    onClick={() => setMessage(template.content)}\n                    size=\"small\"\n                    variant=\"outlined\"\n                  />\n                ))}\n              </Stack>\n            </Box>\n          )}\n\n          {/* Additional Options */}\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\">\n            <Button\n              startIcon={<AttachIcon />}\n              component=\"label\"\n            >\n              Attach File\n              <input\n                type=\"file\"\n                hidden\n                multiple\n                onChange={(e) => setAttachments(Array.from(e.target.files || []))}\n              />\n            </Button>\n            \n            <Button\n              startIcon={<ScheduleIcon />}\n              onClick={() => setScheduling(!scheduling)}\n              color={scheduling ? 'primary' : 'inherit'}\n            >\n              Schedule\n            </Button>\n          </Stack>\n\n          {/* Attachments */}\n          {attachments.length > 0 && (\n            <Stack direction=\"row\" spacing={1} flexWrap=\"wrap\">\n              {attachments.map((file, index) => (\n                <Chip\n                  key={index}\n                  label={file.name}\n                  onDelete={() => setAttachments(attachments.filter((_, i) => i !== index))}\n                  size=\"small\"\n                />\n              ))}\n            </Stack>\n          )}\n\n          {/* Schedule Options */}\n          {scheduling && (\n            <TextField\n              type=\"datetime-local\"\n              label=\"Send at\"\n              value={scheduleTime}\n              onChange={(e) => setScheduleTime(e.target.value)}\n              InputLabelProps={{ shrink: true }}\n              fullWidth\n            />\n          )}\n        </Stack>\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={onClose}>Cancel</Button>\n        <Button\n          variant=\"contained\"\n          startIcon={sending ? <CircularProgress size={16} /> : <SendIcon />}\n          onClick={handleSend}\n          disabled={!recipient || !message.trim() || sending}\n        >\n          {scheduling ? 'Schedule' : 'Send'}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};"],"names":["communicationsApi","dashboardApi","builder","params","result","id","_result","_error","data","conversationId","messageId","channelId","messageIds","error","useGetMessagesQuery","useGetMessageQuery","useSendMessageMutation","useGetConversationsQuery","useGetConversationQuery","useArchiveConversationMutation","useGetAISuggestionMutation","useImproveMessageMutation","useSummarizeConversationMutation","useAnalyzeMessageSentimentMutation","useGetSlackChannelsQuery","useJoinSlackChannelMutation","useGetTwilioNumbersQuery","useSendSMSMutation","useGetTemplatesQuery","useCreateTemplateMutation","useGenerateAITemplateMutation","useGetPreferencesQuery","useUpdatePreferencesMutation","useGetCommunicationStatsQuery","useMarkMessagesAsReadMutation","useBulkCategorizeMessagesMutation","compareAsc","dateLeft","dateRight","diff","toDate","constructNow","date","constructFrom","differenceInCalendarMonths","laterDate","earlierDate","options","laterDate_","earlierDate_","normalizeDates","yearsDiff","monthsDiff","getRoundingMethod","method","number","differenceInMilliseconds","isLastDayOfMonth","_date","endOfDay","endOfMonth","differenceInMonths","workingLaterDate","sign","difference","isLastMonthNotFull","differenceInSeconds","formatDistance","defaultOptions","getDefaultOptions","locale","defaultLocale","minutesInAlmostTwoDays","comparison","localizeOptions","seconds","offsetInSeconds","getTimezoneOffsetInMilliseconds","minutes","months","minutesInDay","hours","minutesInMonth","days","nearestMonth","monthsSinceStartOfYear","years","formatDistanceToNow","TabPanel","children","value","index","other","jsx","Box","UnifiedInbox","theme","useTheme","tabValue","setTabValue","useState","searchQuery","setSearchQuery","filterAnchor","setFilterAnchor","selectedMessages","setSelectedMessages","aiCategorizing","setAiCategorizing","platformFilter","setPlatformFilter","sentimentFilter","setSentimentFilter","urgencyFilter","setUrgencyFilter","messagesData","messagesLoading","refetchMessages","conversationsData","conversationsLoading","stats","markAsRead","categorizeMessages","handleAICategorize","getPlatformIcon","platform","SlackIcon","SmsIcon","EmailIcon","getSentimentColor","sentiment","renderMessageItem","message","isSelected","isUnread","jsxs","ListItem","prev","ListItemAvatar","Badge","Avatar","ListItemText","Typography","_a","Chip","CategoryIcon","_b","Tooltip","UrgentIcon","Fragment","_c","SentimentIcon","_e","_d","tag","ListItemSecondaryAction","IconButton","e","MoreIcon","renderConversationItem","conversation","Paper","Stack","Button","AIIcon","MarkReadIcon","RefreshIcon","FilterIcon","TextField","InputAdornment","SearchIcon","Tabs","_","newValue","Tab","CircularProgress","Alert","List","msg","Menu","MenuItem","Divider","urgency","SlackMessages","messagesEndRef","useRef","selectedChannel","setSelectedChannel","setMessage","showAIPanel","setShowAIPanel","aiSuggestion","setAiSuggestion","quickReplyAnchor","setQuickReplyAnchor","isTyping","setIsTyping","channels","channelsLoading","templates","sendMessage","sending","getAISuggestion","aiLoading","improveMessage","summarizeConversation","useEffect","handleGetAISuggestion","response","handleImproveMessage","handleSendMessage","handleApplyTemplate","template","renderMessage","isOutgoing","format","Card","CardContent","SendIcon","selectedChannelData","ch","channel","ListItemButton","ListItemIcon","PrivateIcon","ChannelIcon","SummarizeIcon","Fade","CloseIcon","BoldIcon","ItalicIcon","CodeIcon","LinkIcon","SuggestIcon","QuickReplyIcon","AttachIcon","EmojiIcon","t","metadata","withMetadataArgument","func","_arguments","args","compare","a","b","pa","pb","na","nb","objectConstructor","isObject","object","_typeof","obj","_classCallCheck","instance","Constructor","_defineProperties","target","props","i","descriptor","_createClass","protoProps","staticProps","V3","V4","DEFAULT_EXT_PREFIX","CALLING_CODE_REG_EXP","Metadata","validateMetadata","setVersion","countryCode","country","callingCode","countryCodes","NumberingPlan","_type","globalMetadataObject","_this","formats","Format","_type2","getType","Type","FIRST_GROUP_ONLY_PREFIX_PATTERN","type","types","typeOf","getCountryCallingCode","isSupportedCountry","version","_createForOfIteratorHelperLoose","o","allowArrayLike","it","_unsupportedIterableToArray","minLen","_arrayLikeToArray","n","arr","len","arr2","mergeArrays","merged","_iterator","_step","element","checkNumberLength","nationalNumber","checkNumberLengthForType","type_info","possible_lengths","mobile_type","actual_length","minimum_length","isPossiblePhoneNumber","input","isPossibleNumber","matchesEntirely","text","regular_expression","NON_FIXED_LINE_PHONE_TYPES","getNumberType","isNumberTypeEqualTo","isValidNumber","getPossibleCountriesForNumber","_metadata","possibleCountries","couldNationalNumberBelongToCountry","MIN_LENGTH_FOR_NSN","MAX_LENGTH_FOR_NSN","MAX_LENGTH_COUNTRY_CODE","VALID_DIGITS","DASHES","SLASHES","DOTS","WHITESPACE","BRACKETS","TILDES","VALID_PUNCTUATION","PLUS_CHARS","CAPTURING_DIGIT_PATTERN","stripIddPrefix","countryMetadata","IDDPrefixPattern","matchedGroups","extractNationalNumberFromPossiblyIncompleteNumber","prefixPattern","prefixMatch","carrierCode","capturedGroupsCount","hasCapturedGroups","prefixBeforeNationalNumber","nationalPrefix","possiblePositionOfTheFirstCapturedGroup","possibleNationalPrefix","extractNationalNumber","_extractNationalNumbe","shouldHaveExtractedNationalPrefix","isPossibleIncompleteNationalNumber","nationalNumberBefore","nationalNumberAfter","extractCountryCallingCodeFromInternationalNumberWithoutPlusSign","countryCallingCode","possibleShorterNumber","possibleShorterNationalNumber","_extractNationalNumbe2","extractCountryCallingCode","isNumberWithIddPrefix","numberWithoutIDD","_extractCountryCallin","shorterNumber","_countryCallingCode","applyInternationalSeparatorStyle","formattedNumber","FIRST_GROUP_PATTERN","formatNationalNumberUsingFormat","_ref","useInternationalFormat","withNationalPrefix","SINGLE_IDD_PREFIX_REG_EXP","getIddPrefix","RFC3966_EXTN_PREFIX","getExtensionDigitsPattern","maxLength","createExtensionPattern","purpose","extLimitAfterExplicitLabel","extLimitAfterLikelyLabel","extLimitAfterAmbiguousChar","extLimitWhenNotSure","possibleSeparatorsBetweenNumberAndExtLabel","possibleCharsAfterExtLabel","optionalExtnSuffix","explicitExtLabels","ambiguousExtLabels","ambiguousSeparator","possibleSeparatorsNumberExtLabelNoComma","autoDiallingAndExtLabelsFound","rfcExtn","explicitExtn","ambiguousExtn","americanStyleExtnWithSuffix","autoDiallingExtn","onlyCommasExtn","MIN_LENGTH_PHONE_NUMBER_PATTERN","VALID_PHONE_NUMBER","VALID_PHONE_NUMBER_START_REG_EXP","VALID_PHONE_NUMBER_WITH_EXTENSION","VALID_PHONE_NUMBER_PATTERN","isViablePhoneNumber","isViablePhoneNumberStart","formatRFC3966","ext","ownKeys","enumerableOnly","keys","symbols","sym","_objectSpread","source","key","_defineProperty","DEFAULT_OPTIONS","extension","formatNumber","formatNationalNumber","addExtension","formatIDD","formatAs","chooseFormatForNumber","availableFormats","nationalNnumber","lastLeadingDigitsPattern","formatExtension","fromCountry","fromCountryCallingCode","iddPrefix","PhoneNumber","countryOrCountryCallingCode","e164Number","E164_NUMBER_REGEXP","_getCountryAndCountry","getCountryAndCountryCallingCode","phoneNumber","_format","isCountryCode","metadataJson","_inherits","subClass","superClass","_setPrototypeOf","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","Super","_getPrototypeOf","NewTarget","_possibleConstructorReturn","self","call","_assertThisInitialized","_wrapNativeSuper","Class","_cache","_isNativeFunction","Wrapper","_construct","Parent","fn","p","ParseError","_Error","_super","code","EXTN_PATTERN","extractExtension","start","numberWithoutExtension","matches","DIGITS","parseDigit","character","parseIncompletePhoneNumber","string","parsePhoneNumberCharacter","prevParsedCharacters","emitEvent","getCountryByNationalNumber","nationalPhoneNumber","countries","USE_NON_GEOGRAPHIC_COUNTRY_CODE","getCountryByCallingCode","defaultCountry","PLUS_SIGN","RFC3966_VISUAL_SEPARATOR_","RFC3966_PHONE_DIGIT_","RFC3966_GLOBAL_NUMBER_DIGITS_","RFC3966_GLOBAL_NUMBER_DIGITS_PATTERN_","ALPHANUM_","RFC3966_DOMAINLABEL_","VALID_ALPHA_","RFC3966_TOPLABEL_","RFC3966_DOMAINNAME_","RFC3966_DOMAINNAME_PATTERN_","RFC3966_PREFIX_","RFC3966_PHONE_CONTEXT_","RFC3966_ISDN_SUBADDRESS_","extractPhoneContext","numberToExtractFrom","indexOfPhoneContext","phoneContextStart","phoneContextEnd","isPhoneContextValid","phoneContext","extractFormattedPhoneNumberFromPossibleRfc3966NumberUri","numberToParse","extractFormattedPhoneNumber","phoneNumberString","indexOfRfc3966Prefix","indexOfNationalNumber","indexOfIsdn","MAX_INPUT_STRING_LENGTH","PHONE_NUMBER_START_PATTERN","AFTER_PHONE_NUMBER_END_PATTERN","parse","_parseInput","parseInput","formattedPhoneNumber","_parsePhoneNumber","parsePhoneNumber","countryCallingCodeSource","valid","_extractFormattedPhoneNumber","extract","throwOnError","startsAt","v2","withExtensionStripped","defaultCallingCode","exactCountry","parsePhoneNumberWithError","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","_i","_arr","_n","_s","err","normalizeArguments","_Array$prototype$slic","_Array$prototype$slic2","arg_1","arg_2","arg_3","arg_4","_normalizeArguments","parsePhoneNumberWithError_","isValidPhoneNumber","_parsePhoneNumberWithError","_isValidPhoneNumber","TwilioSMS","selectedContact","setSelectedContact","newContactDialog","setNewContactDialog","newContactPhone","setNewContactPhone","newContactName","setNewContactName","selectedNumber","setSelectedNumber","showSmartCompose","setShowSmartCompose","smartComposeOptions","setSmartComposeOptions","messageLength","setMessageLength","scheduleSend","setScheduleSend","scheduleTime","setScheduleTime","twilioNumbers","sendSMS","contacts","React","contactMap","phone","name","existing","handleSmartCompose","suggestions","handleSendSMS","handleAddContact","formatPhone","parsed","getStatusIcon","status","DeliveredIcon","FailedIcon","PendingIcon","contactMessages","AddIcon","contact","PhoneIcon","ContactIcon","c","SmartComposeIcon","option","FormControl","InputLabel","Select","ScheduleIcon","MessageIcon","Dialog","DialogTitle","DialogContent","DialogActions","CommunicationStats","open","onClose","timeRange","setTimeRange","getDateRange","end","isLoading","sentimentData","platformData","formatResponseTime","Drawer","ToggleButtonGroup","newRange","ToggleButton","LinearProgress","Grid","TrendingUpIcon","TrendingDownIcon","TimeIcon","ResponsiveContainer","PieChart","Pie","entry","Cell","item","PositiveIcon","NeutralIcon","NegativeIcon","BarChart","CartesianGrid","XAxis","YAxis","Bar","CommunicationSettings","activeTab","setActiveTab","newTemplate","setNewTemplate","saveSuccess","setSaveSuccess","preferences","updatePreferences","saving","createTemplate","localPrefs","setLocalPrefs","handlePreferenceChange","path","newPrefs","current","handleSave","handleCreateTemplate","newTab","FormGroup","FormControlLabel","Switch","DeleteIcon","LocalizationProvider","AdapterDateFns","day","schedule","s","SaveIcon","Communications","isMobile","useMediaQuery","settingsOpen","setSettingsOpen","statsOpen","setStatsOpen","menuAnchor","setMenuAnchor","unreadTotal","unreadSlack","unreadSMS","handleNotificationsToggle","NotificationsIcon","NotificationsOffIcon","StatsIcon","SettingsIcon","InboxIcon","MessageComposer","defaultPlatform","defaultRecipient","defaultMessage","setPlatform","recipient","setRecipient","tone","setTone","aiMode","setAiMode","aiIntent","setAiIntent","attachments","setAttachments","scheduling","setScheduling","slackChannels","generateTemplate","handleAIAssist","handleSend","getRecipientOptions","newPlatform","Autocomplete","newMode","QuickIcon","file"],"mappings":"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,EAAI,CAAC,KAAK,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,KAAK,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,KAAK,KAAK,KAAK,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,KAAK,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,KAAK,KAAK,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,GAAK,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,KAAK,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,KAAK,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,KAAK,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,KAAK,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,KAAK,KAAK,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,KAAK,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM,CAAC,IAAI,EAAE,IAAM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","x_google_ignoreList":[1,2,3,4,5,6,7,8,9,10,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54]}