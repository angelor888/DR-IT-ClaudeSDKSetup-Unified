{"version":3,"file":"PromptLibrary-6401cad1.js","sources":["../../src/features/ai-learning/PromptLibrary.tsx"],"sourcesContent":["import { useState } from 'react';\nimport {\n  Box,\n  Typography,\n  Grid,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  Chip,\n  IconButton,\n  Button,\n  Rating,\n  Tabs,\n  Tab,\n} from '@mui/material';\nimport {\n  Search as SearchIcon,\n  ContentCopy as ContentCopyIcon,\n  Favorite as FavoriteIcon,\n  FavoriteBorder as FavoriteBorderIcon,\n  Add as AddIcon,\n} from '@mui/icons-material';\n\ninterface PromptItem {\n  id: string;\n  title: string;\n  description: string;\n  prompt: string;\n  category: string;\n  rating: number;\n  usageCount: number;\n  tags: string[];\n  isFavorite?: boolean;\n}\n\nconst mockPrompts: PromptItem[] = [\n  {\n    id: '1',\n    title: 'Professional Email Response',\n    description: 'Generate professional responses to customer inquiries',\n    prompt: 'You are a helpful customer service representative for DuetRight. Please respond to the following customer inquiry in a professional, friendly manner:\\n\\n[CUSTOMER MESSAGE]\\n\\nProvide a response that:\\n1. Acknowledges their concern\\n2. Provides helpful information\\n3. Offers next steps\\n4. Maintains a positive tone',\n    category: 'email',\n    rating: 4.8,\n    usageCount: 234,\n    tags: ['customer-service', 'email', 'professional'],\n    isFavorite: true,\n  },\n  {\n    id: '2',\n    title: 'Job Description Generator',\n    description: 'Create detailed job descriptions from basic requirements',\n    prompt: 'Create a comprehensive job description for the following position:\\n\\nJob Title: [TITLE]\\nDepartment: [DEPARTMENT]\\nKey Requirements: [REQUIREMENTS]\\n\\nInclude:\\n- Job summary\\n- Key responsibilities\\n- Required qualifications\\n- Preferred qualifications\\n- Company culture fit',\n    category: 'content',\n    rating: 4.5,\n    usageCount: 156,\n    tags: ['hiring', 'content', 'job-description'],\n  },\n  {\n    id: '3',\n    title: 'Customer Sentiment Analyzer',\n    description: 'Analyze customer message sentiment and suggest appropriate response tone',\n    prompt: 'Analyze the sentiment of the following customer message and provide:\\n1. Overall sentiment (positive/neutral/negative)\\n2. Key emotions detected\\n3. Urgency level (1-5)\\n4. Recommended response approach\\n\\nCustomer Message: [MESSAGE]',\n    category: 'analysis',\n    rating: 4.7,\n    usageCount: 189,\n    tags: ['sentiment', 'analysis', 'customer-service'],\n  },\n];\n\nconst categories = [\n  { id: 'all', label: 'All Prompts' },\n  { id: 'email', label: 'Email' },\n  { id: 'content', label: 'Content Creation' },\n  { id: 'analysis', label: 'Analysis' },\n  { id: 'customer_service', label: 'Customer Service' },\n];\n\nexport const PromptLibrary = () => {\n  const [prompts] = useState<PromptItem[]>(mockPrompts);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const [copiedId, setCopiedId] = useState<string | null>(null);\n\n  const filteredPrompts = prompts.filter(prompt => {\n    const matchesSearch = prompt.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         prompt.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         prompt.tags.some(tag => tag.toLowerCase().includes(searchTerm.toLowerCase()));\n    const matchesCategory = selectedCategory === 'all' || prompt.category === selectedCategory;\n    return matchesSearch && matchesCategory;\n  });\n\n  const handleCopyPrompt = (prompt: PromptItem) => {\n    navigator.clipboard.writeText(prompt.prompt);\n    setCopiedId(prompt.id);\n    setTimeout(() => setCopiedId(null), 2000);\n  };\n\n  return (\n    <Box sx={{ p: 3 }}>\n      {/* Header */}\n      <Box sx={{ mb: 4 }}>\n        <Typography variant=\"h4\" gutterBottom sx={{ fontWeight: 'bold' }}>\n          Prompt Library\n        </Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\">\n          Save and share effective prompts with your team\n        </Typography>\n      </Box>\n      {/* Search and Filters */}\n      <Box sx={{ mb: 3 }}>\n        <Grid container spacing={2} alignItems=\"center\">\n          <Grid\n            size={{\n              xs: 12,\n              md: 8\n            }}>\n            <TextField\n              fullWidth\n              placeholder=\"Search prompts...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SearchIcon />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Grid>\n          <Grid\n            size={{\n              xs: 12,\n              md: 4\n            }}>\n            <Button\n              fullWidth\n              variant=\"contained\"\n              startIcon={<AddIcon />}\n              sx={{ height: '56px' }}\n            >\n              Create New Prompt\n            </Button>\n          </Grid>\n        </Grid>\n        \n        <Tabs \n          value={selectedCategory} \n          onChange={(_, value) => setSelectedCategory(value)}\n          sx={{ mt: 2 }}\n        >\n          {categories.map(cat => (\n            <Tab key={cat.id} label={cat.label} value={cat.id} />\n          ))}\n        </Tabs>\n      </Box>\n      {/* Prompt Cards */}\n      <Grid container spacing={3}>\n        {filteredPrompts.map(prompt => (\n          <Grid\n            key={prompt.id}\n            size={{\n              xs: 12,\n              md: 6\n            }}>\n            <Card sx={{ height: '100%' }}>\n              <CardContent>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', mb: 2 }}>\n                  <Typography variant=\"h6\">\n                    {prompt.title}\n                  </Typography>\n                  <IconButton size=\"small\">\n                    {prompt.isFavorite ? <FavoriteIcon color=\"error\" /> : <FavoriteBorderIcon />}\n                  </IconButton>\n                </Box>\n\n                <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n                  {prompt.description}\n                </Typography>\n\n                <Box sx={{ \n                  p: 2, \n                  bgcolor: 'grey.100', \n                  borderRadius: 1, \n                  mb: 2,\n                  maxHeight: 150,\n                  overflow: 'auto',\n                  fontFamily: 'monospace',\n                  fontSize: '0.875rem',\n                  whiteSpace: 'pre-wrap'\n                }}>\n                  {prompt.prompt}\n                </Box>\n\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>\n                  <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                    <Rating value={prompt.rating} precision={0.1} size=\"small\" readOnly />\n                    <Typography variant=\"body2\" sx={{ ml: 1 }}>\n                      ({prompt.rating})\n                    </Typography>\n                  </Box>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Used {prompt.usageCount} times\n                  </Typography>\n                </Box>\n\n                <Box sx={{ display: 'flex', gap: 0.5, flexWrap: 'wrap', mb: 2 }}>\n                  {prompt.tags.map(tag => (\n                    <Chip key={tag} label={tag} size=\"small\" variant=\"outlined\" />\n                  ))}\n                </Box>\n\n                <Button\n                  fullWidth\n                  variant=\"outlined\"\n                  startIcon={<ContentCopyIcon />}\n                  onClick={() => handleCopyPrompt(prompt)}\n                  color={copiedId === prompt.id ? 'success' : 'primary'}\n                >\n                  {copiedId === prompt.id ? 'Copied!' : 'Copy Prompt'}\n                </Button>\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n};"],"names":["mockPrompts","categories","PromptLibrary","prompts","useState","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","copiedId","setCopiedId","filteredPrompts","prompt","matchesSearch","tag","matchesCategory","handleCopyPrompt","Box","jsxs","jsx","Typography","Grid","TextField","e","InputAdornment","SearchIcon","Button","AddIcon","Tabs","_","value","cat","Tab","Card","CardContent","IconButton","FavoriteIcon","FavoriteBorderIcon","Rating","Chip","ContentCopyIcon"],"mappings":"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"}