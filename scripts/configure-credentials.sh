#!/bin/bash
# Credential Configuration Helper for Claude Auto-Responder
# Helps both Megan and Morgan set up required credentials

set -euo pipefail

# Colors
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

echo -e "${BLUE}üîê Credential Configuration Helper${NC}"
echo -e "${BLUE}===================================${NC}\n"

# Check machine
MACHINE_NAME=$(cat "$HOME/.claude-machine-id" 2>/dev/null || hostname -s)
echo -e "${GREEN}Configuring for: $MACHINE_NAME${NC}\n"

# Function to check if credential exists
check_credential() {
    local var_name="$1"
    local description="$2"
    
    if [ -n "${!var_name:-}" ]; then
        echo -e "${GREEN}‚úÖ $var_name is set${NC}"
        return 0
    else
        echo -e "${RED}‚ùå $var_name is not set${NC} - $description"
        return 1
    fi
}

# Function to test credential
test_credential() {
    local type="$1"
    case $type in
        "slack")
            if curl -s -X POST https://slack.com/api/auth.test \
                -H "Authorization: Bearer $SLACK_TOKEN" | grep -q '"ok":true'; then
                echo -e "${GREEN}‚úÖ Slack token is valid${NC}"
            else
                echo -e "${RED}‚ùå Slack token is invalid or expired${NC}"
            fi
            ;;
        "github")
            if [ -n "${GITHUB_TOKEN:-}" ]; then
                if curl -s -H "Authorization: token $GITHUB_TOKEN" \
                    https://api.github.com/user | grep -q '"login"'; then
                    echo -e "${GREEN}‚úÖ GitHub token is valid${NC}"
                else
                    echo -e "${RED}‚ùå GitHub token is invalid${NC}"
                fi
            fi
            ;;
    esac
}

# Create .env template if it doesn't exist
if [ ! -f "$HOME/.env" ]; then
    echo -e "${YELLOW}Creating ~/.env file...${NC}"
    cat > "$HOME/.env" << 'EOF'
# Claude Auto-Responder Credentials
# Generated by configure-credentials.sh

# Required
export SLACK_TOKEN=""

# Recommended
export GITHUB_TOKEN=""

# Optional MCP Servers
# export GOOGLE_CLIENT_ID=""
# export GOOGLE_CLIENT_SECRET=""
# export NOTION_TOKEN=""
# export OPENAI_API_KEY=""
# export ANTHROPIC_API_KEY=""
EOF
    chmod 600 "$HOME/.env"
    echo -e "${GREEN}‚úÖ Created ~/.env (edit to add your tokens)${NC}"
fi

# Check current credentials
echo -e "\n${BLUE}Current Credential Status:${NC}"
echo -e "${BLUE}=========================${NC}"

check_credential "SLACK_TOKEN" "Required for Slack messaging"
check_credential "GITHUB_TOKEN" "Recommended for Git operations"
check_credential "GOOGLE_CLIENT_ID" "Optional - Google services"
check_credential "NOTION_TOKEN" "Optional - Notion integration"
check_credential "OPENAI_API_KEY" "Optional - OpenAI services"

# Test active credentials
echo -e "\n${BLUE}Testing Active Credentials:${NC}"
echo -e "${BLUE}==========================${NC}"

if [ -n "${SLACK_TOKEN:-}" ]; then
    test_credential "slack"
fi

if [ -n "${GITHUB_TOKEN:-}" ]; then
    test_credential "github"
fi

# Setup instructions
echo -e "\n${BLUE}Setup Instructions:${NC}"
echo -e "${BLUE}==================${NC}"

echo -e "\n${YELLOW}1. Edit ~/.env and add your tokens:${NC}"
echo -e "   ${GREEN}nano ~/.env${NC}"

echo -e "\n${YELLOW}2. Add to ~/.zshrc to load automatically:${NC}"
echo -e "   ${GREEN}echo 'source ~/.env' >> ~/.zshrc${NC}"

echo -e "\n${YELLOW}3. Reload your shell:${NC}"
echo -e "   ${GREEN}source ~/.zshrc${NC}"

echo -e "\n${YELLOW}4. Run this script again to verify:${NC}"
echo -e "   ${GREEN}./configure-credentials.sh${NC}"

# Token generation links
echo -e "\n${BLUE}Token Generation Links:${NC}"
echo -e "${BLUE}======================${NC}"
echo -e "Slack: ${GREEN}https://api.slack.com/apps${NC}"
echo -e "GitHub: ${GREEN}https://github.com/settings/tokens${NC}"
echo -e "Google: ${GREEN}https://console.cloud.google.com/apis/credentials${NC}"
echo -e "Notion: ${GREEN}https://www.notion.so/my-integrations${NC}"

# Security reminder
echo -e "\n${RED}‚ö†Ô∏è  Security Reminders:${NC}"
echo -e "‚Ä¢ Never commit .env files to Git"
echo -e "‚Ä¢ Keep ~/.env permissions at 600"
echo -e "‚Ä¢ Rotate tokens regularly"
echo -e "‚Ä¢ Use different tokens for each machine"